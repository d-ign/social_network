{"version":3,"sources":["pages/Profile/ProfileWall/ProfileWall.module.scss","pages/Profile/ProfileInfo/ProfileInputChangeAvatar/ProfileInputChangeAvatar.module.scss","App.module.scss","assets/img/preloader/preloaderTheme1.svg","assets/img/preloader/preloaderTheme2.svg","components/Preloader/Preloader.tsx","assets/img/no_photo.svg","pages/Profile/ProfileWall/ProfilePost/ProfileAvatarPost/ProfileAvatarPost.module.scss","components/Name/Name.module.scss","components/Name/Name.tsx","components/Prompt/Prompt.tsx","store/selectors/users-selectors.ts","components/NoElement/NoElement.tsx","services/hoc/withAuthRedirect.tsx","components/ButtonFollow/ButtonFollow.tsx","services/api/api.ts","services/api/chat-api.ts","store/reducers/chat-reducer.ts","components/NoElement/NoElement.module.scss","components/RenderFormElement/RenderTextField.module.scss","store/selectors/app-selectors.ts","pages/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","store/selectors/auth-selectors.ts","components/Prompt/Prompt.module.scss","pages/Profile/ProfileWall/ProfilePost/ProfilePost.module.scss","services/api/auth-api.ts","services/api/profile-api.ts","services/api/security-api.ts","store/reducers/auth-reducer.ts","store/reducers/app-reducer.ts","store/reducers/profile-info-reducer.ts","store/reducers/profile-wall-reducer.ts","store/store.ts","pages/Profile/ProfileWall/ProfileButtonsPostsDelete/ProfileButtonsPostsDelete.tsx","pages/Profile/ProfileWall/ProfilePost/ProfileAvatarPost/ProfileAvatarPost.tsx","store/selectors/profile-selectors.ts","pages/Profile/ProfileWall/ProfilePost/ProfilePost.tsx","services/hooks/useLocalStorage.tsx","pages/Profile/ProfileWall/ProfileWall.tsx","pages/Profile/ProfileInfo/ProfilePlug/ProfilePlug.tsx","pages/Profile/ProfileInfo/ProfileData/ProfileData.tsx","pages/Profile/ProfileInfo/ProfileStatus/stylesCustomMaterialUI.jsx","services/hooks/useOutsideAlerter.tsx","pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/FieldWithCounter/FieldWithCounter.tsx","components/RenderFormElement/RenderTextField.jsx","components/RenderFormElement/RenderCheckbox.jsx","pages/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","assets/img/icons/camera.svg","pages/Profile/ProfileInfo/ProfileInputChangeAvatar/ProfileInputChangeAvatar.tsx","pages/Profile/ProfileInfo/ProfileInfoContainer.tsx","pages/Profile/ProfileContainer.tsx","assets/img/preloader/preloaderStart.svg","components/Preloader/PreloaderStart.tsx","assets/img/icons/logo.svg","parts/Header/Header.tsx","parts/Navbar/Navbar.tsx","pages/Auth/Auth.tsx","components/ErrorBoundary/ErrorBoundary.jsx","App.tsx","index.tsx","pages/Profile/ProfileInfo/ProfilePlug/ProfilePlug.module.scss","parts/Header/Header.module.scss","pages/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","pages/Auth/Auth.module.scss","pages/Profile/ProfileWall/ProfileButtonsPostsDelete/ProfileButtonsPostsDelete.module.scss","components/FieldWithCounter/FieldWithCounter.module.scss","pages/Profile/ProfileInfo/ProfileInfoContainer.module.scss","pages/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","services/api/users-api.ts","store/reducers/users-reducer.ts","services/hooks/useApp.tsx","components/Preloader/Preloader.module.scss","components/Avatar/Avatar.module.scss","components/Avatar/Avatar.tsx","parts/Navbar/Navbar.module.scss"],"names":["module","exports","Preloader","display","theme","useAppSelector","getTheme","className","cn","s","container_default","container_block","wrap","src","preloaderTheme1","preloaderTheme2","alt","Name","id","name","size","name_size_small","to","replace","memo","Prompt","DeletingProfilePosts","container","containerProfile","arrow","text","style","color","SearchUsers","props","pathname","containerSearch","arrowSearch","PaginationUsers","containerPagination","arrowPagination","getUsersSelector","state","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","NoElement","elements","writeSomething","withAuthRedirect","WrappedComponent","getIsAuth","ButtonFollow","followed","setIsFollowed","stylesWrapButton","textAlign","stylesButton","justifyContent","alignItems","flexBasis","authorizedUserID","getAuthorizedUserID","dispatch","useAppDispatch","followHandler","useCallback","follow","unfollowHandler","unfollow","isDisabledButton","some","idUser","onClick","disabled","startIcon","undefined","ResultCodesEnum","ResultCodeForCaptcha","instance","axios","create","withCredentials","baseURL","headers","process","ws","subscribers","notifySubscribersAboutStatus","status","forEach","reconnect","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","data","openHandler","errorHandler","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","start","stop","subscribe","eventName","callback","push","sendMessage","message","send","chatSlice","createSlice","initialState","messages","statusWS","reducers","messagesReceived","action","payload","map","m","v1","filter","_","index","array","length","messagesCleared","statusChanged","actions","startMessagesListening","createAsyncThunk","a","stopMessagesListening","getInitialized","app","initialized","getLogin","authPage","login","isAuth","userID","getCaptchaURL","captchaURL","getMyPhoto","myPhoto","authAPI","me","get","response","email","password","rememberMe","captcha","post","logout","delete","profileAPI","getProfile","getStatus","updateStatus","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","profile","securityAPI","authSlice","setAuthUserData","setCaptcha","setMyPhoto","_handleError","resultCode","Error","stopSubmit","_error","getAuthUserData","Success","Object","keys","myProfile","photos","large","setCaptchaThunk","url","loginThunk","CaptchaIsRequired","logoutThunk","appSlice","initializedSuccess","setTheme","initializeApp","profileInfoSlice","showSuccessSave","errorProfileContacts","isEditModeProfile","setUserProfile","setStatus","savePhotoSuccess","showSuccessSaveProfile","showErrorProfileContacts","setEditModeProfile","bool","getUserProfile","userId","savePhotoThunk","file","saveProfileThunk","getState","profileInfoReducer","reducer","profileWallSlice","posts","idPost","likesCount","isLikeClick","postsForDelete","initializePosts","addPost","newPost","Date","now","newPostText","deletePost","p","setPostForDeleting","deletePostForDeleting","clearPostsForDeleting","setLikeOnPost","deleteLikeOnPost","profileWallReducer","store","configureStore","appReducer","form","formReducer","authReducer","profilePage","combineReducers","info","wall","chatPage","chatReducer","usersReducer","ProfileButtonsPostsDelete","isSelectedAllPosts","setIsSelectedAllPosts","setIsHiddenAllLikeAndXAndPrompt","setIsCancelDeletion","setIsShowAnimation","maxWidth","height","margin","textShadow","handleDeleteSelectedPost","handleCancelDeletion","wrapButtons","hidden","buttons","FormControlLabel","control","Checkbox","label","labelPlacement","marginLeft","checked","onChange","buttonDesktop","Button","variant","buttonMobile","IconButton","title","ProfileAvatarPost","isSelectedPost","setIsSelectedPost","avatar","postSelectedTheme1","postSelectedTheme2","Avatar","photo","unknown","getShowSuccessSave","getErrorProfileContacts","getPosts","getPostsForDelete","Set","getEditModeProfile","ProfilePost","idPostFirst","isShowPrompt","setIsShowPrompt","isShowAnimation","isCancelDeletion","handleDeleteOnePost","isHiddenAllLikeAndXAndPrompt","useState","isClickDeletePost","setIsClickDeletePost","useEffect","has","postContainer","postContainerDelete","postSelected","columnLeft","columnCenter","fullName","plugColumnRight","columnRight","ButtonDeletePost","ButtonSetLike","handleDeletePost","handleSetLike","wrapLike","like","noLike","useLocalStorage","key","value","currentValueJson","localStorage","getItem","setItem","stringify","ProfileWall","postsElements","visuallyHidden","AddPostForm","newPostTextLocal","setNewPostTextLocal","handleAddPost","trim","TextField","placeholder","multiline","fullWidth","inputProps","maxLength","target","stylesAdaptiveButtons","width","endIcon","ProfilePlug","isOwner","button","nameWrap","titleOne","titleTwo","Contact","contactTitle","contactValue","contact","contactTextWrap","contactText","href","ProfileData","block","aboutMe","job","lookingForAJob","lookingForAJobDescription","values","contacts","el","useStyles","makeStyles","borderRadius","padding","spacing","minHeight","lineHeight","backgroundColor","useOutsideAlerter","alerter","handleClickOutside","current","contains","document","Status","setEditMode","handleClick","statusMy","elementInteractive","noStatus","StatusForm","statusLocal","setStatusLocal","classes","isEditInputStatusForm","setIsEditInputStatusForm","isHiddenCounter","setIsHiddenCounter","count","setCount","statusEditMode","autoFocus","currentTarget","onFocus","select","onBlur","buttonAndCounter","buttonWrap","boxShadow","stylesField","countHidden","countYellow","countRed","plug","ProfileStatus","editMode","statusRef","useRef","ref","statusNotMy","FieldWithCounter","renderContent","setIsEditInputProfileForm","position","count_color_yellow","count_color_red","RenderTextField","input","onInput","meta","touched","error","warning","custom","InputLabelProps","htmlFor","RenderCheckbox","FieldDataForm","handleInput","handleFocus","handleBlur","Field","component","ProfileDataForm","reduxForm","handleSubmit","initialValues","handleEditInput","onSubmit","titleForm","titleAllContacts","titleContact","ProfileInputChangeAvatar","handleChangeAvatar","type","wrapImg","camera","ScrollToTopOnMount","getElementById","scrollIntoView","ShowSuccessSavePortal","children","createElement","body","createPortal","ProfileInfoContainer","stylesSaveAndCancelButton","fontSize","isEditInputProfileForm","isFollowed","request","getIsFollowed","avatarWrap","files","marginTop","buttonFollow","buttonsSaveAndCancelProfile","submit","successSave","useSelector","match","useParams","Number","PreloaderStart","preloaderStart","Logo","logoAndTitle","logo","headerTitleDesktop","headerTitleMobile","ButtonChangeTheme","handleToggleTheme","buttonThemeDesktop","marginRight","buttonThemeMobile","ButtonLogout","handleLogout","buttonLogoutDesktop","buttonLogoutMobile","Header","myID","colors","cyan","cyanLight","cyanMedium","cyanDark","darkBlue","darkBlueTransparent","i","setProperty","header","rightColumn","loginAndPhoto","loginName","profilePath","d","chatPath","usersPath","friendsPath","Navbar","useLocation","pages","exact","nav","activeClassName","active","navLink","viewBox","navLinkImg","activeIcon","test","LoginReduxForm","validate","errors","handleEnterTestAccount","stylesLoginButton","fontWeight","stylesTestLoginButton","marginBottom","loginBlockSubstrate","loginBlock","wrapElementForm","autoComplete","wrapCheckbox","Auth","param","ErrorBoundary","this","setState","whiteSpace","toString","React","Component","SuspendedChat","lazy","SuspendedUsers","SuspendedFriends","App","fon","appWrapper","appWrapperContent","fallback","from","path","render","createTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","usersAPI","getUsers","currentPage","term","friend","followUser","unfollowUser","usersSlice","followSuccess","u","unfollowSuccess","setUsers","addUsers","setTotalUsersCount","clearUsers","toggleIsFetching","toggleFollowingProgress","page","items","totalCount","useDispatch","photoTrue","includes","AvatarBody","avatar_size_extraLarge","avatar_size_large","avatar_size_medium","avatar_size_small"],"mappings":"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","file":"static/js/main.8a9c5707.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileWall_visuallyHidden__XdQay\",\"elementInteractive\":\"ProfileWall_elementInteractive__3F7hQ\",\"container\":\"ProfileWall_container__3X4MG\",\"form\":\"ProfileWall_form__36XtT\",\"posts\":\"ProfileWall_posts__28q47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileInputChangeAvatar_visuallyHidden__2E8TL\",\"elementInteractive\":\"ProfileInputChangeAvatar_elementInteractive__23vz0\",\"container\":\"ProfileInputChangeAvatar_container__3nHiX\",\"wrapImg\":\"ProfileInputChangeAvatar_wrapImg__K6Luc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__2Avml\",\"container\":\"App_container__3kpCf\",\"appWrapper\":\"App_appWrapper__1cqFv\",\"appWrapperContent\":\"App_appWrapperContent__1OUHu\"};","export default __webpack_public_path__ + \"static/media/preloaderTheme1.81c13cc3.svg\";","export default __webpack_public_path__ + \"static/media/preloaderTheme2.f54b1c2d.svg\";","import React from 'react'\n\nimport cn from 'classnames'\nimport preloaderTheme1 from '../../assets/img/preloader/preloaderTheme1.svg'\nimport preloaderTheme2 from '../../assets/img/preloader/preloaderTheme2.svg'\nimport s from './Preloader.module.scss'\n\nimport { useAppSelector } from '../../services/hooks/useApp'\n\nimport { getTheme } from '../../store/selectors/app-selectors'\n\ntype PropsType = {\n  display: 'default' | 'block'\n}\n\nconst Preloader: React.FC<PropsType> = ({ display }) => {\n  const theme = useAppSelector(getTheme)\n\n  return (\n    <div\n      className={cn(\n        { [s.container_default]: display === 'default' },\n        { [s.container_block]: display === 'block' }\n      )}\n    >\n      <div className={s.wrap}>\n        <img\n          src={theme === 'theme1' ? preloaderTheme1 : preloaderTheme2}\n          alt='preloader'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Preloader\n","export default __webpack_public_path__ + \"static/media/no_photo.3aa74e3c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileAvatarPost_avatar__3A_Je\",\"postSelectedTheme1\":\"ProfileAvatarPost_postSelectedTheme1__DUcB7\",\"postSelectedTheme2\":\"ProfileAvatarPost_postSelectedTheme2__17jze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__3kOmW\",\"name_size_small\":\"Name_name_size_small__3ob3Z\"};","import React, { memo } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Name.module.scss'\n\ntype PropsType = {\n  id: number | undefined\n  name: string | undefined\n  size: 'small' | 'normal'\n}\n\nconst Name: React.FC<PropsType> = ({ id, name, size = 'normal' }) => {\n  return (\n    <span>\n      <NavLink\n        className={cn(s.name, { [s.name_size_small]: size === 'small' })}\n        to={`/profile/${id || '/login'}`}\n        replace\n      >\n        {name || 'no name'}\n      </NavLink>\n    </span>\n  )\n}\n\nexport default memo(Name)\n","import cn from 'classnames'\nimport s from './Prompt.module.scss'\n\ntype PathnameType = {\n  pathname: string\n}\n\nconst Prompt = {\n  DeletingProfilePosts: () => {\n    return (\n      <aside className={cn(s.container, s.containerProfile)}>\n        <span className={s.arrow} />\n        <span className={s.text}>\n          Click on the avatar to{' '}\n          <b style={{ color: 'black' }}>delete multiple</b> posts\n        </span>\n      </aside>\n    )\n  },\n\n  SearchUsers: (props: PathnameType) => {\n    const { pathname } = props\n\n    return (\n      <aside className={cn(s.container, s.containerSearch)}>\n        <span className={cn(s.arrow, s.arrowSearch)} />\n        {pathname === '/users' && (\n          <span className={s.text}>\n            Synchronized with <b style={{ color: 'black' }}>url</b>\n          </span>\n        )}\n        {pathname === '/friends' && (\n          <span className={s.text}>\n            Search with <b style={{ color: 'black' }}>debounce</b>\n          </span>\n        )}\n      </aside>\n    )\n  },\n\n  PaginationUsers: (props: PathnameType) => {\n    const { pathname } = props\n\n    return (\n      <aside className={cn(s.container, s.containerPagination)}>\n        <span className={cn(s.arrow, s.arrowPagination)} />\n        {pathname === '/users' && (\n          <span className={s.text}>\n            Pagination{' '}\n            <b style={{ color: 'black' }}>at the click of a button</b>\n          </span>\n        )}\n        {pathname === '/friends' && (\n          <span className={s.text}>\n            <b style={{ color: 'black' }}>Dynamic</b> pagination\n          </span>\n        )}\n      </aside>\n    )\n  },\n}\n\nexport default Prompt\n","import { RootStateType } from '../store'\n\nexport const getUsersSelector = (state: RootStateType) => state.users.users\n\nexport const getPageSize = (state: RootStateType) => state.users.pageSize\n\nexport const getTotalUsersCount = (state: RootStateType) =>\n  state.users.totalUsersCount\n\nexport const getIsFetching = (state: RootStateType) => state.users.isFetching\n\nexport const getFollowingInProgress = (state: RootStateType) =>\n  state.users.followingInProgress\n","import React, { memo } from 'react'\nimport s from './NoElement.module.scss'\n\ntype PropsType = {\n  elements: string\n  writeSomething: boolean\n}\n\nconst NoElement: React.FC<PropsType> = ({ elements, writeSomething }) => {\n  return (\n    <div className={s.container}>\n      <span>{`No ${elements} ${elements === 'users' ? 'found' : ''}`}</span>\n      {writeSomething && <span>Write something!</span>}\n    </div>\n  )\n}\n\nexport default memo(NoElement)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useAppSelector } from '../hooks/useApp'\nimport { getIsAuth } from '../../store/selectors/auth-selectors'\n\n// WCP = WrappedComponentProps\nexport default function withAuthRedirect<WCP>(\n  WrappedComponent: React.ComponentType<WCP>\n) {\n  const RedirectComponent: React.FC = (props) => {\n    const isAuth = useAppSelector(getIsAuth)\n\n    if (!isAuth) {\n      return <Redirect to='/login' />\n    }\n\n    return <WrappedComponent {...(props as WCP)} />\n  }\n\n  return RedirectComponent\n}\n","import React, { useCallback, memo, SetStateAction, Dispatch } from 'react'\n\nimport { Button } from '@material-ui/core'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/useApp'\n\nimport { getFollowingInProgress } from '../../store/selectors/users-selectors'\nimport { getAuthorizedUserID } from '../../store/selectors/auth-selectors'\nimport { follow, unfollow } from '../../store/reducers/users-reducer'\nimport { getTheme } from '../../store/selectors/app-selectors'\n\ntype ButtonFollowPropsType = {\n  followed: boolean | undefined | unknown\n  id: number\n  setIsFollowed: Dispatch<SetStateAction<boolean>> | null\n}\n\nconst ButtonFollow: React.FC<ButtonFollowPropsType> = ({\n  id,\n  followed,\n  setIsFollowed = null,\n}) => {\n  const stylesWrapButton: React.CSSProperties = {\n    textAlign: 'center',\n  }\n\n  const stylesButton: React.CSSProperties = {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n    flexBasis: '200px',\n  }\n\n  const followingInProgress = useAppSelector(getFollowingInProgress)\n  const authorizedUserID = useAppSelector(getAuthorizedUserID)\n  const theme = useAppSelector(getTheme)\n  const dispatch = useAppDispatch()\n\n  const followHandler = useCallback(() => {\n    dispatch(follow(id))\n    if (setIsFollowed) setIsFollowed(true)\n  }, [dispatch, id, setIsFollowed])\n\n  const unfollowHandler = useCallback(() => {\n    dispatch(unfollow(id))\n    if (setIsFollowed) setIsFollowed(false)\n  }, [dispatch, id, setIsFollowed])\n\n  const isDisabledButton = followingInProgress.some(\n    (idUser: number) => idUser === id\n  )\n\n  return (\n    <>\n      {followed ? (\n        <div style={stylesWrapButton}>\n          <Button\n            onClick={unfollowHandler}\n            disabled={isDisabledButton}\n            style={stylesButton}\n            startIcon={<RemoveIcon />}\n          >\n            Unfollow\n          </Button>\n        </div>\n      ) : id === authorizedUserID || followed === undefined ? (\n        <></>\n      ) : (\n        <div style={stylesWrapButton}>\n          <Button\n            onClick={followHandler}\n            disabled={isDisabledButton}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={stylesButton}\n            startIcon={<AddIcon />}\n          >\n            Follow\n          </Button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default memo(ButtonFollow)\n","import axios from 'axios'\n\nexport const instance = axios.create({\n  withCredentials: true, // attach a cookie to the request\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': process.env.REACT_APP_API_KEY,\n  },\n})\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n  CaptchaIsRequired = 10,\n}\n\nexport type DefaultResponseType<D = never, RC = ResultCodesEnum> = {\n  data: D\n  resultCode: RC\n  messages: string[] | string\n}\n","import { ChatMessageAPIType, StatusWSType } from '../../types/types'\n\nlet ws: WebSocket | null = null\n\nconst subscribers = {\n  'messages-received': [] as MessagesReceivedSubscriberType[],\n  'status-changed': [] as StatusChangedSubscriberType[],\n}\n\nconst notifySubscribersAboutStatus = (status: StatusWSType) => {\n  subscribers['status-changed'].forEach((s) => s(status))\n}\n\nconst reconnect = () => {\n  notifySubscribersAboutStatus('pending')\n  setTimeout(createChannel, 3000)\n}\n\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e.data)\n  subscribers['messages-received'].forEach((s) => s(newMessages))\n}\n\nconst openHandler = () => {\n  notifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n  notifySubscribersAboutStatus('error')\n}\n\nconst cleanUp = () => {\n  ws?.removeEventListener('close', reconnect)\n  ws?.removeEventListener('message', messageHandler)\n  ws?.removeEventListener('open', openHandler)\n  ws?.removeEventListener('error', errorHandler)\n}\n\nconst createChannel = () => {\n  cleanUp()\n  ws?.close()\n\n  ws = new WebSocket(\n    'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n  )\n\n  notifySubscribersAboutStatus('pending')\n\n  ws.addEventListener('close', reconnect)\n  ws.addEventListener('message', messageHandler)\n  ws.addEventListener('open', openHandler)\n  ws.addEventListener('error', errorHandler)\n}\n\nconst chatAPI = {\n  start() {\n    createChannel()\n  },\n\n  stop() {\n    subscribers['messages-received'] = []\n    subscribers['status-changed'] = []\n\n    cleanUp()\n    ws?.close()\n  },\n\n  subscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    // @ts-ignore\n    subscribers[eventName].push(callback)\n  },\n\n  sendMessage(message: string) {\n    ws?.send(message)\n  },\n}\n\ntype EventsCustomNamesType = 'messages-received' | 'status-changed'\n\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\ntype StatusChangedSubscriberType = (status: StatusWSType) => void\n\nexport default chatAPI\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { v1 } from 'uuid'\n\nimport chatAPI from '../../services/api/chat-api'\n\nimport {\n  ChatMessageAPIType,\n  ChatMessageType,\n  StatusWSType,\n} from '../../types/types'\n\nconst chatSlice = createSlice({\n  name: 'chatPage',\n  initialState: {\n    messages: [] as ChatMessageType[],\n    statusWS: 'pending' as StatusWSType,\n  },\n  reducers: {\n    messagesReceived: (\n      state,\n      action: PayloadAction<{ messages: ChatMessageAPIType[] }>\n    ) => {\n      state.messages = [\n        ...state.messages,\n        ...action.payload.messages.map((m) => ({ ...m, id: v1() })),\n      ].filter((_, index, array) => index >= array.length - 100)\n      // TODO v1() = impure function call\n    },\n\n    messagesCleared: (state) => {\n      state.messages = []\n    },\n\n    statusChanged: (\n      state,\n      action: PayloadAction<{ statusWS: StatusWSType }>\n    ) => {\n      state.statusWS = action.payload.statusWS\n    },\n  },\n})\n\nconst { messagesReceived, messagesCleared, statusChanged } = chatSlice.actions\n\nexport const startMessagesListening = createAsyncThunk(\n  'chatPage/startMessagesListening',\n  async (_, { dispatch }) => {\n    chatAPI.start()\n\n    chatAPI.subscribe('messages-received', (messages: ChatMessageAPIType[]) =>\n      dispatch(messagesReceived({ messages }))\n    )\n    chatAPI.subscribe('status-changed', (statusWS: StatusWSType) =>\n      dispatch(statusChanged({ statusWS }))\n    )\n  }\n)\n\nexport const stopMessagesListening = createAsyncThunk(\n  'chatPage/stopMessagesListening',\n  async (_, { dispatch }) => {\n    chatAPI.stop()\n    dispatch(messagesCleared())\n  }\n)\n\nexport const sendMessage = createAsyncThunk(\n  'chatPage/sendMessage',\n  async (message: string) => {\n    chatAPI.sendMessage(message)\n  }\n)\n\nexport default chatSlice.reducer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoElement_container__2GLsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"RenderTextField_error__1wEzv\"};","import { RootStateType } from '../store'\n\nexport const getInitialized = (state: RootStateType) => state.app.initialized\n\nexport const getTheme = (state: RootStateType) => state.app.theme\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileData_container__1OcCu\",\"block\":\"ProfileData_block__53hVk\",\"aboutMe\":\"ProfileData_aboutMe__21Cfu\",\"job\":\"ProfileData_job__36f3A\",\"contacts\":\"ProfileData_contacts__3kVVT\",\"title\":\"ProfileData_title__rDIk3\",\"text\":\"ProfileData_text__2lmvZ\",\"contact\":\"ProfileData_contact__1R0tv\",\"contactTitle\":\"ProfileData_contactTitle__3uukl\",\"contactTextWrap\":\"ProfileData_contactTextWrap__20G1F\",\"contactText\":\"ProfileData_contactText__2G58H\"};","import { RootStateType } from '../store'\n\nexport const getLogin = (state: RootStateType) => state.authPage.login\n\nexport const getIsAuth = (state: RootStateType) => state.authPage.isAuth\n\nexport const getAuthorizedUserID = (state: RootStateType) =>\n  state.authPage.userID\n\nexport const getCaptchaURL = (state: RootStateType) => state.authPage.captchaURL\n\nexport const getMyPhoto = (state: RootStateType) => state.authPage.myPhoto\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Prompt_container__3xsNI\",\"containerProfile\":\"Prompt_containerProfile__29pUF\",\"containerSearch\":\"Prompt_containerSearch__3p0FH\",\"containerPagination\":\"Prompt_containerPagination__3-EIn\",\"arrow\":\"Prompt_arrow__35G-s\",\"arrowSearch\":\"Prompt_arrowSearch__3OB6w\",\"arrowPagination\":\"Prompt_arrowPagination__eIVwg\",\"text\":\"Prompt_text__3bGrD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"ProfilePost_postContainer__2AcC4\",\"post\":\"ProfilePost_post__14kuC\",\"postSelected\":\"ProfilePost_postSelected__SnDoZ\",\"postContainerDelete\":\"ProfilePost_postContainerDelete__1lNMV\",\"holeOut\":\"ProfilePost_holeOut__Pow0D\",\"columnLeft\":\"ProfilePost_columnLeft__3DZ6e\",\"columnCenter\":\"ProfilePost_columnCenter__2t1Xo\",\"message\":\"ProfilePost_message__1dMOl\",\"columnRight\":\"ProfilePost_columnRight__1G-hN\",\"plugColumnRight\":\"ProfilePost_plugColumnRight__NBYXS\",\"wrapLike\":\"ProfilePost_wrapLike__aJhsR\",\"likesCount\":\"ProfilePost_likesCount__Y-jNp\",\"like\":\"ProfilePost_like__p6SOF\",\"noLike\":\"ProfilePost_noLike__3F1h1\"};","import {\n  DefaultResponseType,\n  instance,\n  ResultCodeForCaptcha,\n  ResultCodesEnum,\n} from './api'\n\ntype MeDataType = {\n  id: number\n  email: string\n  login: string\n}\n\nconst authAPI = {\n  async me() {\n    const response = await instance.get<DefaultResponseType<MeDataType>>(\n      'auth/me'\n    )\n    return response.data\n  },\n  async login(\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: null | string = null\n  ) {\n    const response = await instance.post<\n      DefaultResponseType<\n        { userId: number },\n        ResultCodesEnum | ResultCodeForCaptcha\n      >\n    >('/auth/login', {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    })\n    return response.data\n  },\n  async logout() {\n    const response = await instance.delete<DefaultResponseType>('/auth/login')\n    return response.data\n  },\n}\n\nexport default authAPI\n","import { PhotosType, ProfileType } from '../../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype SavePhotoDataType = {\n  photos: PhotosType\n}\n\nconst profileAPI = {\n  async getProfile(id: number | null) {\n    const response = await instance.get<ProfileType>(`profile/${id}`)\n    return response.data\n  },\n\n  async getStatus(id: number) {\n    const response = await instance.get<string>(`profile/status/${id}`)\n    return response.data\n  },\n\n  async updateStatus(status: string) {\n    const response = await instance.put<DefaultResponseType>('profile/status', {\n      status,\n    })\n    return response.data\n  },\n\n  async savePhotoAPI(photoFile: File) {\n    const formData = new FormData()\n    formData.append('image', photoFile)\n    const response = await instance.put<DefaultResponseType<SavePhotoDataType>>(\n      'profile/photo',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    )\n    return response.data\n  },\n\n  async saveProfileAPI(profile: ProfileType) {\n    const response = await instance.put<DefaultResponseType>('profile', profile)\n    return response.data\n  },\n}\n\nexport default profileAPI\n","import { instance } from './api'\n\ntype GetCaptchaResponseType = {\n  url: string\n}\n\nconst securityAPI = {\n  async getCaptchaURL() {\n    const response = await instance.get<GetCaptchaResponseType>(\n      'security/get-captcha-url'\n    )\n    return response.data\n  },\n}\n\nexport default securityAPI\n","import { Dispatch } from 'react'\nimport { FormAction, stopSubmit } from 'redux-form'\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport authAPI from '../../services/api/auth-api'\nimport profileAPI from '../../services/api/profile-api'\nimport securityAPI from '../../services/api/security-api'\nimport { ResultCodesEnum, ResultCodeForCaptcha } from '../../services/api/api'\n\nimport { LoginType } from '../../types/types'\n\nconst authSlice = createSlice({\n  name: 'authPage',\n  initialState: {\n    userID: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    captchaURL: null as string | null,\n    myPhoto: null as string | null,\n  },\n  reducers: {\n    setAuthUserData: (\n      state,\n      action: PayloadAction<{\n        userID: number | null\n        email: string | null\n        login: string | null\n        isAuth: boolean\n      }>\n    ) => {\n      const { userID, email, login, isAuth } = action.payload\n      state.userID = userID\n      state.email = email\n      state.login = login\n      state.isAuth = isAuth\n    },\n\n    setCaptcha: (\n      state,\n      action: PayloadAction<{ captchaURL: string | null }>\n    ) => {\n      state.captchaURL = action.payload.captchaURL\n    },\n\n    setMyPhoto: (state, action: PayloadAction<{ myPhoto: string | null }>) => {\n      state.myPhoto = action.payload.myPhoto\n    },\n  },\n})\n\nconst { setAuthUserData, setCaptcha, setMyPhoto } = authSlice.actions\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _handleError = (dispatch: Dispatch<FormAction>, response: any) => {\n  if (response.resultCode === ResultCodesEnum.Error) {\n    const message = response.messages\n    const action = stopSubmit('loginForm', {\n      _error: message.length > 0 ? message[0] : 'Some error',\n    })\n    // Some error - if an empty message comes from the server\n    dispatch(action)\n  }\n}\n\nexport const getAuthUserData = createAsyncThunk(\n  'authPage/getAuthUserData',\n  async (_, { dispatch }) => {\n    const response = await authAPI.me()\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      const { id, email, login } = response.data\n      dispatch(setAuthUserData({ userID: id, email, login, isAuth: true }))\n    }\n\n    _handleError(dispatch, response)\n\n    if (Object.keys(response.data).length !== 0) {\n      const myProfile = await profileAPI.getProfile(response.data.id)\n      const myPhoto = myProfile.photos.large\n      dispatch(setMyPhoto({ myPhoto }))\n    }\n  }\n)\n\nconst setCaptchaThunk = createAsyncThunk(\n  'authPage/setCaptchaThunk',\n  async (_, { dispatch }) => {\n    const response = await securityAPI.getCaptchaURL()\n    dispatch(setCaptcha({ captchaURL: response.url }))\n  }\n)\n\nexport const loginThunk = createAsyncThunk(\n  'authPage/loginThunk',\n  async (props: LoginType, { dispatch }) => {\n    const { email, password, rememberMe, captcha } = props\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getAuthUserData())\n      dispatch(setCaptcha({ captchaURL: null }))\n    }\n\n    _handleError(dispatch, response)\n\n    if (response.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\n      dispatch(setCaptchaThunk())\n    }\n  }\n)\n\nexport const logoutThunk = createAsyncThunk(\n  'authPage/logoutThunk',\n  async (_, { dispatch }) => {\n    const response = await authAPI.logout()\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(\n        setAuthUserData({\n          userID: null,\n          email: null,\n          login: null,\n          isAuth: false,\n        })\n      )\n      dispatch(setMyPhoto({ myPhoto: null }))\n    }\n  }\n)\n\nexport default authSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { getAuthUserData } from './auth-reducer'\nimport { ThemeType } from '../../types/types'\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    initialized: false,\n    theme: 'theme1' as ThemeType,\n  },\n  reducers: {\n    initializedSuccess: (state) => {\n      state.initialized = true\n    },\n\n    setTheme: (state, action: PayloadAction<ThemeType>) => {\n      state.theme = action.payload\n    },\n  },\n})\n\nexport const { initializedSuccess, setTheme } = appSlice.actions\n\nexport const initializeApp = createAsyncThunk(\n  'app/initializeApp',\n  async (_, { dispatch }) => {\n    await dispatch(getAuthUserData())\n    dispatch(initializedSuccess())\n  }\n)\n\nexport default appSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { ResultCodesEnum } from '../../services/api/api'\nimport profileAPI from '../../services/api/profile-api'\n\nimport { ProfileType, PhotosType } from '../../types/types'\n\nconst profileInfoSlice = createSlice({\n  name: 'info',\n  initialState: {\n    profile: null as ProfileType | null,\n    status: '',\n    showSuccessSave: '',\n    errorProfileContacts: '',\n    isEditModeProfile: false,\n  },\n  reducers: {\n    setUserProfile: (\n      state,\n      action: PayloadAction<{ profile: ProfileType }>\n    ) => {\n      state.profile = action.payload.profile\n    },\n\n    setStatus: (state, action: PayloadAction<{ message: string }>) => {\n      state.status = action.payload.message\n    },\n\n    savePhotoSuccess: (\n      state,\n      action: PayloadAction<{ photos: PhotosType }>\n    ) => {\n      if (state.profile) {\n        state.profile.photos = action.payload.photos\n      }\n    },\n\n    showSuccessSaveProfile: (\n      state,\n      action: PayloadAction<{ message: string }>\n    ) => {\n      state.showSuccessSave = action.payload.message\n    },\n\n    showErrorProfileContacts: (\n      state,\n      action: PayloadAction<{ message: string }>\n    ) => {\n      state.errorProfileContacts = action.payload.message\n    },\n\n    setEditModeProfile: (state, action: PayloadAction<{ bool: boolean }>) => {\n      state.isEditModeProfile = action.payload.bool\n    },\n  },\n})\n\nexport const {\n  setUserProfile,\n  setStatus,\n  savePhotoSuccess,\n  showSuccessSaveProfile,\n  showErrorProfileContacts,\n  setEditModeProfile,\n} = profileInfoSlice.actions\n\nexport const getUserProfile = createAsyncThunk(\n  'info/getUserProfile',\n  async (userId: number | null, { dispatch }) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile({ profile: response }))\n  }\n)\n\nexport const getStatus = createAsyncThunk(\n  'info/getStatus',\n  async (id: number, { dispatch }) => {\n    const response = await profileAPI.getStatus(id)\n    dispatch(setStatus({ message: response }))\n  }\n)\n\nexport const updateStatus = createAsyncThunk(\n  'info/updateStatus',\n  async (status: string, { dispatch }) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(setStatus({ message: status }))\n    }\n  }\n)\n\nexport const savePhotoThunk = createAsyncThunk(\n  'info/savePhotoThunk',\n  async (file: File, { dispatch }) => {\n    const response = await profileAPI.savePhotoAPI(file)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(savePhotoSuccess({ photos: response.data.photos }))\n    }\n  }\n)\n\nexport const saveProfileThunk = createAsyncThunk(\n  'info/saveProfileThunk',\n  async (profile: ProfileType, { dispatch, getState }) => {\n    const response = await profileAPI.saveProfileAPI(profile)\n\n    const {\n      authPage: { userID },\n    } = getState() as { authPage: { userID: number } }\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getUserProfile(userID))\n      dispatch(showSuccessSaveProfile({ message: 'Data saved successfully!' }))\n      setTimeout(dispatch, 4000, showSuccessSaveProfile({ message: '' }))\n      dispatch(showErrorProfileContacts({ message: '' }))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      dispatch(showErrorProfileContacts({ message: response.messages[0] }))\n    }\n  }\n)\n\nexport const profileInfoReducer = profileInfoSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PostType } from '../../types/types'\n\nconst profileWallSlice = createSlice({\n  name: 'wall',\n  initialState: {\n    posts: [\n      {\n        idPost: 1,\n        message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n        likesCount: 0,\n        isLikeClick: false,\n      },\n      {\n        idPost: 2,\n        message:\n          // eslint-disable-next-line max-len\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis ut quo maiores neque laboriosam. Ratione adipisci reiciendis autem placeat alias necessitatibus pariatur saepe ipsum, temporibus animi, facilis minus doloribus ducimus',\n        likesCount: 1,\n        isLikeClick: true,\n      },\n      {\n        idPost: 3,\n        message:\n          // eslint-disable-next-line max-len\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis ut quo maiores neque laboriosam. Ratione adipisci reiciendis autem placeat alias necessitatibus...',\n        likesCount: 0,\n        isLikeClick: false,\n      },\n    ] as PostType[],\n    postsForDelete: [] as number[],\n  },\n  reducers: {\n    initializePosts: (state, action: PayloadAction<PostType[]>) => {\n      state.posts = action.payload\n    },\n\n    // delete one post\n    addPost: (state, action: PayloadAction<{ newPostText: string }>) => {\n      const newPost = {\n        idPost: Date.now(), // TODO impure function call\n        message: action.payload.newPostText,\n        likesCount: 0,\n        isLikeClick: false,\n      }\n      state.posts = [newPost, ...state.posts]\n    },\n    deletePost: (state, action: PayloadAction<{ idPost: number }>) => {\n      state.posts = state.posts.filter(\n        (p) => p.idPost !== action.payload.idPost\n      )\n    },\n\n    // delete multiple posts\n    setPostForDeleting: (state, action: PayloadAction<{ idPost: number }>) => {\n      state.postsForDelete = [...state.postsForDelete, action.payload.idPost]\n    },\n    deletePostForDeleting: (\n      state,\n      action: PayloadAction<{ idPost: number }>\n    ) => {\n      state.postsForDelete = state.postsForDelete.filter(\n        (id) => id !== action.payload.idPost\n      )\n    },\n    clearPostsForDeleting: (state) => {\n      state.postsForDelete = []\n    },\n\n    // like\n    setLikeOnPost: (state, action: PayloadAction<{ idPost: number }>) => {\n      state.posts = [\n        ...state.posts.map((p) => {\n          if (p.idPost === action.payload.idPost) {\n            return {\n              ...p,\n              likesCount: ++p.likesCount,\n              isLikeClick: true,\n            }\n          }\n          return p\n        }),\n      ]\n    },\n    deleteLikeOnPost: (state, action: PayloadAction<{ idPost: number }>) => {\n      state.posts = [\n        ...state.posts.map((p) => {\n          if (p.idPost === action.payload.idPost) {\n            return {\n              ...p,\n              likesCount: --p.likesCount,\n              isLikeClick: false,\n            }\n          }\n          return p\n        }),\n      ]\n    },\n  },\n})\n\nexport const {\n  initializePosts,\n  addPost,\n  deletePost,\n  setPostForDeleting,\n  deletePostForDeleting,\n  clearPostsForDeleting,\n  setLikeOnPost,\n  deleteLikeOnPost,\n} = profileWallSlice.actions\n\nexport const profileWallReducer = profileWallSlice.reducer\n","import { reducer as formReducer } from 'redux-form'\nimport { configureStore, combineReducers } from '@reduxjs/toolkit'\n\nimport appReducer from './reducers/app-reducer'\nimport authReducer from './reducers/auth-reducer'\nimport chatReducer from './reducers/chat-reducer'\nimport usersReducer from './reducers/users-reducer'\nimport { profileInfoReducer } from './reducers/profile-info-reducer'\nimport { profileWallReducer } from './reducers/profile-wall-reducer'\n\nconst store = configureStore({\n  reducer: {\n    app: appReducer,\n    form: formReducer,\n    authPage: authReducer,\n    profilePage: combineReducers({\n      info: profileInfoReducer,\n      wall: profileWallReducer,\n    }),\n    chatPage: chatReducer,\n    users: usersReducer,\n  },\n})\n\nexport type RootStateType = ReturnType<typeof store.getState>\nexport type AppDispatchType = typeof store.dispatch\n\nexport default store\n","import React, { SetStateAction, Dispatch } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport { Checkbox, FormControlLabel, IconButton } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CloseIcon from '@material-ui/icons/Close'\nimport cn from 'classnames'\nimport s from './ProfileButtonsPostsDelete.module.scss'\n\nimport {\n  deletePost,\n  setPostForDeleting,\n  clearPostsForDeleting,\n} from '../../../../store/reducers/profile-wall-reducer'\nimport { getTheme } from '../../../../store/selectors/app-selectors'\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../../../services/hooks/useApp'\n\nimport { PostType } from '../../../../types/types'\n\ntype PropsType = {\n  posts: PostType[]\n  postsForDelete: Set<number>\n  isSelectedAllPosts: boolean\n  setIsSelectedAllPosts: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndXAndPrompt: Dispatch<SetStateAction<boolean>>\n  setIsCancelDeletion: Dispatch<SetStateAction<boolean>>\n  setIsShowAnimation: Dispatch<SetStateAction<boolean>>\n}\n\nconst ProfileButtonsPostsDelete: React.FC<PropsType> = (props) => {\n  const {\n    posts,\n    postsForDelete,\n    isSelectedAllPosts,\n    setIsSelectedAllPosts,\n    setIsHiddenAllLikeAndXAndPrompt,\n    setIsCancelDeletion,\n    setIsShowAnimation,\n  } = props\n\n  const stylesButton: React.CSSProperties = {\n    color: 'white',\n    maxWidth: '120px',\n    height: '70%',\n    margin: '10px',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const dispatch = useAppDispatch()\n  const theme = useAppSelector(getTheme)\n\n  const handleDeleteSelectedPost = () => {\n    // start delete animation\n    setIsShowAnimation(true)\n\n    setIsSelectedAllPosts(false)\n\n    // return X and likes on all posts\n    setIsHiddenAllLikeAndXAndPrompt(false)\n\n    setTimeout(() => {\n      postsForDelete.forEach((p) => {\n        dispatch(deletePost({ idPost: p }))\n      })\n      dispatch(clearPostsForDeleting())\n\n      // end of delete animation\n      setIsShowAnimation(false)\n    }, 600)\n  }\n\n  const handleCancelDeletion = () => {\n    dispatch(clearPostsForDeleting())\n    setIsCancelDeletion(true)\n    setIsSelectedAllPosts(false)\n  }\n\n  const handleSelectedAllPosts = () => {\n    if (!isSelectedAllPosts) {\n      posts.forEach((post) => {\n        dispatch(setPostForDeleting({ idPost: post.idPost }))\n      })\n      setIsSelectedAllPosts(true)\n    } else {\n      dispatch(clearPostsForDeleting())\n      setIsSelectedAllPosts(false)\n    }\n  }\n\n  return (\n    <div className={s.wrapButtons}>\n      <div\n        hidden={postsForDelete.size === 0}\n        className={cn({ [s.buttons]: postsForDelete.size > 0 })}\n      >\n        <FormControlLabel\n          control={\n            <Checkbox color={theme === 'theme1' ? 'primary' : 'secondary'} />\n          }\n          label='Select all'\n          labelPlacement='end'\n          style={{ marginLeft: '14px' }}\n          checked={isSelectedAllPosts && postsForDelete.size === posts.length}\n          onChange={handleSelectedAllPosts}\n        />\n\n        <div className={s.buttonDesktop}>\n          <Button\n            variant='contained'\n            style={stylesButton}\n            startIcon={<DeleteIcon />}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleDeleteSelectedPost}\n          >\n            Delete\n          </Button>\n        </div>\n        <div hidden className={s.buttonMobile}>\n          <IconButton\n            title='Delete'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleDeleteSelectedPost}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n\n        <div className={s.buttonDesktop}>\n          <Button\n            variant='outlined'\n            style={stylesButton}\n            startIcon={<CloseIcon />}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleCancelDeletion}\n          >\n            Cancel\n          </Button>\n        </div>\n        <div hidden className={s.buttonMobile}>\n          <IconButton\n            title='Cancel'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleCancelDeletion}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileButtonsPostsDelete\n","import React, { Dispatch, SetStateAction } from 'react'\n\nimport cn from 'classnames'\nimport s from './ProfileAvatarPost.module.scss'\n\nimport unknown from '../../../../../assets/img/no_photo.svg'\nimport Avatar from '../../../../../components/Avatar/Avatar'\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../../../../services/hooks/useApp'\n\nimport {\n  setPostForDeleting,\n  deletePostForDeleting,\n} from '../../../../../store/reducers/profile-wall-reducer'\nimport { getTheme } from '../../../../../store/selectors/app-selectors'\n\nimport { ProfileType } from '../../../../../types/types'\n\ntype PropsType = {\n  idPost: number\n  profile: ProfileType | null\n  postsForDelete: Set<number>\n  isSelectedPost: boolean\n  setIsSelectedPost: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndXAndPrompt: Dispatch<SetStateAction<boolean>>\n}\n\nconst ProfileAvatarPost: React.FC<PropsType> = ({\n  idPost,\n  profile,\n  postsForDelete,\n  isSelectedPost,\n  setIsSelectedPost,\n  setIsHiddenAllLikeAndXAndPrompt,\n}) => {\n  const theme = useAppSelector(getTheme)\n  const dispatch = useAppDispatch()\n\n  const handleClickOnAvatar = () => {\n    if (!isSelectedPost) {\n      setIsHiddenAllLikeAndXAndPrompt(true)\n      setIsSelectedPost(true)\n      dispatch(setPostForDeleting({ idPost }))\n    } else {\n      if (postsForDelete.size === 0) {\n        // do not return all X and likes, if some posts are still selected\n        setIsHiddenAllLikeAndXAndPrompt(false)\n      }\n      setIsSelectedPost(false)\n      dispatch(deletePostForDeleting({ idPost }))\n    }\n  }\n\n  return (\n    <div\n      aria-hidden='true'\n      onClick={handleClickOnAvatar}\n      className={cn(\n        { [s.avatar]: !isSelectedPost },\n        {\n          [s.postSelectedTheme1]: isSelectedPost && theme === 'theme1',\n        },\n        {\n          [s.postSelectedTheme2]: isSelectedPost && theme === 'theme2',\n        }\n      )}\n    >\n      <Avatar\n        size='medium'\n        id={profile?.userId || null}\n        photo={profile?.photos.large || unknown}\n      />\n    </div>\n  )\n}\n\nexport default ProfileAvatarPost\n","import { RootStateType } from '../store'\n\nexport const getProfile = (state: RootStateType) =>\n  state.profilePage.info.profile\n\nexport const getStatus = (state: RootStateType) => state.profilePage.info.status\n\nexport const getShowSuccessSave = (state: RootStateType) =>\n  state.profilePage.info.showSuccessSave\n\nexport const getErrorProfileContacts = (state: RootStateType) =>\n  state.profilePage.info.errorProfileContacts\n\nexport const getPosts = (state: RootStateType) => state.profilePage.wall.posts\n\nexport const getPostsForDelete = (state: RootStateType) =>\n  new Set(state.profilePage.wall.postsForDelete)\n\nexport const getEditModeProfile = (state: RootStateType) =>\n  state.profilePage.info.isEditModeProfile\n","import React, {\n  useState,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n  memo,\n  useCallback,\n} from 'react'\n\nimport cn from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './ProfilePost.module.scss'\n\nimport Name from '../../../../components/Name/Name'\nimport Prompt from '../../../../components/Prompt/Prompt'\nimport ProfileAvatarPost from './ProfileAvatarPost/ProfileAvatarPost'\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../../../services/hooks/useApp'\n\nimport {\n  setLikeOnPost,\n  deleteLikeOnPost,\n} from '../../../../store/reducers/profile-wall-reducer'\nimport { getPostsForDelete } from '../../../../store/selectors/profile-selectors'\n\nimport { PostType, ProfileType } from '../../../../types/types'\n\ntype PropsType = {\n  post: PostType\n  profile: ProfileType | null\n  idPostFirst: number\n  isShowPrompt: boolean\n  isShowAnimation: boolean\n  isCancelDeletion: boolean\n  isSelectedAllPosts: boolean\n  isHiddenAllLikeAndXAndPrompt: boolean\n  setIsShowPrompt: Dispatch<SetStateAction<boolean>>\n  setIsCancelDeletion: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndXAndPrompt: Dispatch<SetStateAction<boolean>>\n  handleDeleteOnePost: (idPost: number) => void\n}\n\nconst ProfilePost: React.FC<PropsType> = (props) => {\n  const {\n    post: { idPost, message, likesCount, isLikeClick },\n    profile,\n    idPostFirst,\n    isShowPrompt,\n    setIsShowPrompt,\n    isShowAnimation,\n    isCancelDeletion,\n    isSelectedAllPosts,\n    handleDeleteOnePost,\n    setIsCancelDeletion,\n    isHiddenAllLikeAndXAndPrompt,\n    setIsHiddenAllLikeAndXAndPrompt,\n  } = props\n\n  const postsForDelete = useAppSelector(getPostsForDelete)\n\n  const [isSelectedPost, setIsSelectedPost] = useState(false)\n  const [isClickDeletePost, setIsClickDeletePost] = useState(false)\n\n  useEffect(() => {\n    if (isHiddenAllLikeAndXAndPrompt) {\n      setIsShowPrompt(false)\n    }\n  }, [isHiddenAllLikeAndXAndPrompt, setIsShowPrompt])\n\n  useEffect(() => {\n    if (isSelectedAllPosts || postsForDelete.has(idPost)) {\n      setIsSelectedPost(true)\n    } else {\n      setIsSelectedPost(false)\n    }\n  }, [isSelectedAllPosts, postsForDelete, idPost])\n\n  useEffect(() => {\n    setIsSelectedPost(false)\n    setIsCancelDeletion(false)\n  }, [isCancelDeletion, setIsCancelDeletion])\n\n  useEffect(() => {\n    if (postsForDelete.size === 0) {\n      // return all X and likes if there are no more selected posts\n      setIsHiddenAllLikeAndXAndPrompt(false)\n    }\n  }, [postsForDelete, setIsHiddenAllLikeAndXAndPrompt])\n\n  return (\n    <article\n      className={cn(s.postContainer, {\n        [s.postContainerDelete]:\n          isClickDeletePost || (isShowAnimation && postsForDelete.has(idPost)),\n      })}\n    >\n      <div className={cn(s.post, { [s.postSelected]: isSelectedPost })}>\n        <div className={s.columnLeft}>\n          <ProfileAvatarPost\n            idPost={idPost}\n            profile={profile}\n            postsForDelete={postsForDelete}\n            isSelectedPost={isSelectedPost}\n            setIsSelectedPost={setIsSelectedPost}\n            setIsHiddenAllLikeAndXAndPrompt={setIsHiddenAllLikeAndXAndPrompt}\n          />\n        </div>\n\n        {idPostFirst === idPost && isShowPrompt && (\n          <Prompt.DeletingProfilePosts />\n        )}\n\n        <div className={s.columnCenter}>\n          <Name id={profile?.userId} name={profile?.fullName} size='normal' />\n          <div className={s.message}>{message}</div>\n        </div>\n\n        {!isHiddenAllLikeAndXAndPrompt ? (\n          <div className={s.columnRight}>\n            <ButtonDeletePost\n              idPost={idPost}\n              handleDeleteOnePost={handleDeleteOnePost}\n              setIsClickDeletePost={setIsClickDeletePost}\n            />\n            <ButtonSetLike\n              idPost={idPost}\n              likesCount={likesCount}\n              isLikeClick={isLikeClick}\n            />\n          </div>\n        ) : (\n          <div className={s.plugColumnRight} />\n        )}\n      </div>\n    </article>\n  )\n}\n\ntype ButtonDeletePostPropsType = {\n  idPost: number\n  handleDeleteOnePost: (idPost: number) => void\n  setIsClickDeletePost: Dispatch<SetStateAction<boolean>>\n}\n\nconst ButtonDeletePost: React.FC<ButtonDeletePostPropsType> = memo(\n  ({ idPost, handleDeleteOnePost, setIsClickDeletePost }) => {\n    const handleDeletePost = useCallback(() => {\n      setIsClickDeletePost(true)\n      setTimeout(() => handleDeleteOnePost(idPost), 300)\n    }, [handleDeleteOnePost, idPost, setIsClickDeletePost])\n\n    return (\n      <IconButton title='Delete post' size='small' onClick={handleDeletePost}>\n        <CloseIcon />\n      </IconButton>\n    )\n  }\n)\n\ntype ButtonSetLikePropsType = Omit<PostType, 'message'>\n\nconst ButtonSetLike: React.FC<ButtonSetLikePropsType> = memo(\n  ({ idPost, likesCount, isLikeClick }) => {\n    const dispatch = useAppDispatch()\n\n    const handleSetLike = useCallback(() => {\n      if (!isLikeClick) {\n        dispatch(setLikeOnPost({ idPost }))\n      } else {\n        dispatch(deleteLikeOnPost({ idPost }))\n      }\n    }, [dispatch, idPost, isLikeClick])\n\n    return (\n      <div className={s.wrapLike}>\n        <span className={s.likesCount}>\n          {likesCount > 0 ? `+${likesCount}` : ''}\n        </span>\n        <IconButton title='Like' size='small' onClick={handleSetLike}>\n          <ThumbUpAltIcon\n            className={cn(s.like, { [s.noLike]: !isLikeClick })}\n          />\n        </IconButton>\n      </div>\n    )\n  }\n)\n\nexport default memo(ProfilePost)\n","import { PropsWithChildren, useEffect } from 'react'\nimport { PayloadActionCreator } from '@reduxjs/toolkit'\nimport { useAppDispatch } from './useApp'\n\nimport { PostType, ThemeType } from '../../types/types'\n\ntype ActionPostsType = PayloadActionCreator<PostType[]>\ntype ActionThemeType = PayloadActionCreator<ThemeType>\n\ntype PropsType = {\n  key: string\n  value: ThemeType | PostType[]\n  action: ActionPostsType | ActionThemeType\n}\n\ntype HookType = (props: PropsWithChildren<PropsType>) => void\n\nconst useLocalStorage: HookType = ({ key, value, action }) => {\n  const dispatch = useAppDispatch()\n\n  // reading and applying theme from Local Storage\n  useEffect(() => {\n    const currentValueJson = localStorage.getItem(key)\n\n    if (currentValueJson) {\n      dispatch(action(JSON.parse(currentValueJson)))\n    }\n  }, [action, key, dispatch])\n\n  // writing a theme to Local Storage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n}\n\nexport default useLocalStorage\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState, memo } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport PostAddIcon from '@material-ui/icons/PostAdd'\nimport { IconButton, TextField } from '@material-ui/core'\nimport s from './ProfileWall.module.scss'\nimport stylesAdaptiveButtons from './ProfileButtonsPostsDelete/ProfileButtonsPostsDelete.module.scss'\n\nimport ProfileButtonsPostsDelete from './ProfileButtonsPostsDelete/ProfileButtonsPostsDelete'\nimport ProfilePost from './ProfilePost/ProfilePost'\nimport NoElement from '../../../components/NoElement/NoElement'\nimport useLocalStorage from '../../../services/hooks/useLocalStorage'\nimport { useAppDispatch, useAppSelector } from '../../../services/hooks/useApp'\n\nimport {\n  getPosts,\n  getProfile,\n  getPostsForDelete,\n} from '../../../store/selectors/profile-selectors'\nimport {\n  addPost,\n  deletePost,\n  initializePosts,\n} from '../../../store/reducers/profile-wall-reducer'\nimport { getTheme } from '../../../store/selectors/app-selectors'\n\nimport { PostType } from '../../../types/types'\n\nconst ProfileWall: React.FC = () => {\n  const posts = useAppSelector(getPosts)\n  const profile = useAppSelector(getProfile)\n  const postsForDelete = useAppSelector(getPostsForDelete)\n  const dispatch = useAppDispatch()\n\n  const [isShowPrompt, setIsShowPrompt] = useState(true)\n  const [isShowAnimation, setIsShowAnimation] = useState(false)\n  const [isCancelDeletion, setIsCancelDeletion] = useState(false)\n  const [isSelectedAllPosts, setIsSelectedAllPosts] = useState(false)\n  const [isHiddenAllLikeAndXAndPrompt, setIsHiddenAllLikeAndXAndPrompt] =\n    useState(false)\n\n  useLocalStorage({ key: 'posts', value: posts, action: initializePosts })\n\n  const handleDeleteOnePost = useCallback(\n    (idPost: number) => {\n      dispatch(deletePost({ idPost }))\n    },\n    [dispatch]\n  )\n\n  useEffect(() => {\n    if (postsForDelete.size === posts.length) {\n      setIsSelectedAllPosts(true)\n    } else {\n      setIsSelectedAllPosts(false)\n    }\n  }, [postsForDelete.size, posts.length])\n\n  const postsElements = posts.map((p: PostType) => (\n    <ProfilePost\n      key={p.idPost}\n      post={{\n        idPost: p.idPost,\n        message: p.message,\n        likesCount: p.likesCount,\n        isLikeClick: p.isLikeClick,\n      }}\n      profile={profile}\n      idPostFirst={posts[0].idPost}\n      isShowPrompt={isShowPrompt}\n      setIsShowPrompt={setIsShowPrompt}\n      isSelectedAllPosts={isSelectedAllPosts}\n      isHiddenAllLikeAndXAndPrompt={isHiddenAllLikeAndXAndPrompt}\n      setIsHiddenAllLikeAndXAndPrompt={setIsHiddenAllLikeAndXAndPrompt}\n      isShowAnimation={isShowAnimation}\n      isCancelDeletion={isCancelDeletion}\n      setIsCancelDeletion={setIsCancelDeletion}\n      handleDeleteOnePost={handleDeleteOnePost}\n    />\n  ))\n\n  return (\n    <section className={s.container}>\n      <h1 className={s.visuallyHidden}>Profile wall</h1>\n\n      <ProfileButtonsPostsDelete\n        posts={posts}\n        postsForDelete={postsForDelete}\n        isSelectedAllPosts={isSelectedAllPosts}\n        setIsSelectedAllPosts={setIsSelectedAllPosts}\n        setIsHiddenAllLikeAndXAndPrompt={setIsHiddenAllLikeAndXAndPrompt}\n        setIsCancelDeletion={setIsCancelDeletion}\n        setIsShowAnimation={setIsShowAnimation}\n      />\n\n      {postsForDelete.size === 0 && <AddPostForm />}\n\n      <div className={s.posts}>\n        {postsElements}\n\n        {!posts.length && <NoElement elements='posts' writeSomething />}\n      </div>\n    </section>\n  )\n}\n\nconst AddPostForm: React.FC = memo(() => {\n  const stylesAddPostButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: '10px 0 10px 10px',\n    width: '140px',\n  }\n\n  const theme = useAppSelector(getTheme)\n  const dispatch = useAppDispatch()\n\n  const [newPostTextLocal, setNewPostTextLocal] = useState('')\n\n  const handleAddPost = () => {\n    if (!newPostTextLocal.trim()) {\n      return\n    }\n    dispatch(addPost({ newPostText: newPostTextLocal }))\n    setNewPostTextLocal('')\n  }\n\n  const handleChangeTextField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewPostTextLocal(e.target.value)\n  }\n\n  return (\n    <div className={s.form}>\n      <TextField\n        name='newPostText'\n        placeholder='Enter the post text...'\n        multiline\n        fullWidth\n        variant='outlined'\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        inputProps={{ maxLength: 1000, value: newPostTextLocal }}\n        onChange={handleChangeTextField}\n      />\n      <div className={stylesAdaptiveButtons.buttonDesktop}>\n        <Button\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={stylesAddPostButton}\n          endIcon={<PostAddIcon />}\n          onClick={handleAddPost}\n        >\n          Add post\n        </Button>\n      </div>\n      <div hidden className={stylesAdaptiveButtons.buttonMobile}>\n        <IconButton\n          title='Add post'\n          aria-label='Add post'\n          style={{ marginLeft: 5 }}\n          onClick={handleAddPost}\n        >\n          <PostAddIcon color={theme === 'theme1' ? 'primary' : 'secondary'} />\n        </IconButton>\n      </div>\n    </div>\n  )\n})\n\nexport default memo(ProfileWall)\n","import React from 'react'\nimport s from './ProfilePlug.module.scss'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfilePlug: React.FC<PropsType> = ({ isOwner }) => {\n  return (\n    <div className={s.container}>\n      <div className={s.columnLeft}>\n        <div className={s.avatar} />\n        {isOwner && <div className={s.button} />}\n      </div>\n\n      <div className={s.columnRight}>\n        <div className={s.nameWrap}>\n          <div className={s.name} />\n        </div>\n\n        <div className={s.status} />\n\n        <div className={s.titleOne} />\n        <div className={s.text} />\n        <div className={s.titleTwo} />\n        <div className={s.text} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfilePlug\n","import React, { memo } from 'react'\nimport { ProfileType, СontactsType } from '../../../../types/types'\nimport s from './ProfileData.module.scss'\n\ntype PropsType = {\n  profile: ProfileType\n}\n\nconst ProfileData: React.FC<PropsType> = ({ profile }) => (\n  <div className={s.container}>\n    <div className={s.block}>\n      {profile.aboutMe && (\n        <div className={s.aboutMe}>\n          <div className={s.title}>About me:</div>\n          <div className={s.text}>{profile.aboutMe}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.block}>\n      <div className={s.job}>\n        <div className={s.title}>Job search:</div>\n        {profile.lookingForAJob ? (\n          <div className={s.text}>Now looking for a job!</div>\n        ) : (\n          <div className={s.text}>I&#39;m not looking for a job</div>\n        )}\n      </div>\n    </div>\n\n    <div className={s.block}>\n      {profile.lookingForAJobDescription && (\n        <div className={s.job}>\n          <div className={s.title}>Professional skills:</div>\n          <div className={s.text}>{profile.lookingForAJobDescription}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.block}>\n      {Object.values(profile.contacts).some((el) => el && el !== '') && (\n        <div className={s.contacts}>\n          <div className={s.title}>My contacts</div>\n          {Object.keys(profile.contacts).map((key) => (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key as keyof СontactsType]}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n)\n\ntype ContactPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\nconst Contact: React.FC<ContactPropsType> = memo(\n  ({ contactTitle, contactValue }) => (\n    <>\n      {contactValue && (\n        <div className={s.contact}>\n          <span className={s.contactTitle}>{contactTitle}:</span>\n          <div className={s.contactTextWrap}>\n            <a className={s.contactText} href={contactValue}>\n              {contactValue.replace(/(?:https?):\\/\\/([^/\\s]+)[^\\s]*/gi, '$1')}\n            </a>\n          </div>\n        </div>\n      )}\n    </>\n  )\n)\n\nexport default ProfileData\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    borderRadius: '5px 5px 0 0',\n    padding: theme.spacing(1),\n    minHeight: '30px',\n    lineHeight: '25px',\n    backgroundColor: '#4f4f4f',\n  },\n}))\n\nexport default useStyles\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\n\nconst useOutsideAlerter = (\n  alerter: React.RefObject<HTMLDivElement>,\n  action: Dispatch<SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (\n        alerter.current &&\n        !alerter.current.contains(e.target as HTMLInputElement)\n      ) {\n        action(false)\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [alerter, action])\n}\n\nexport default useOutsideAlerter\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  Dispatch,\n  SetStateAction,\n} from 'react'\n\nimport { Button, TextField } from '@material-ui/core'\nimport SaveIcon from '@material-ui/icons/Save'\nimport cn from 'classnames'\nimport s from './ProfileStatus.module.scss'\n// eslint-disable-next-line max-len\nimport stylesField from '../../../../components/FieldWithCounter/FieldWithCounter.module.scss'\nimport useStyles from './stylesCustomMaterialUI'\n\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../../../services/hooks/useApp'\nimport useOutsideAlerter from '../../../../services/hooks/useOutsideAlerter'\n\nimport { getTheme } from '../../../../store/selectors/app-selectors'\nimport { getStatus } from '../../../../store/selectors/profile-selectors'\n\nimport { updateStatus } from '../../../../store/reducers/profile-info-reducer'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileStatus = ({ isOwner }: PropsType) => {\n  const status = useAppSelector(getStatus)\n\n  const [editMode, setEditMode] = useState(false)\n  const [statusLocal, setStatusLocal] = useState(status)\n\n  useEffect(() => {\n    setStatusLocal(status)\n  }, [status])\n\n  const statusRef = useRef<HTMLDivElement | null>(null)\n  useOutsideAlerter(statusRef, setEditMode)\n\n  return (\n    <div ref={statusRef} className={s.container}>\n      {isOwner && !editMode && (\n        <Status status={status} setEditMode={setEditMode} />\n      )}\n\n      {!isOwner && status && <div className={s.statusNotMy}>{status}</div>}\n\n      {editMode && (\n        <StatusForm\n          statusLocal={statusLocal}\n          setStatusLocal={setStatusLocal}\n          setEditMode={setEditMode}\n        />\n      )}\n    </div>\n  )\n}\n\ntype StatusPropsType = {\n  status: string\n  setEditMode: Dispatch<SetStateAction<boolean>>\n}\n\nconst Status: React.FC<StatusPropsType> = ({ status, setEditMode }) => {\n  const handleClick = () => {\n    setEditMode(true)\n  }\n\n  return (\n    // outer div and input for keyboard operation\n    <div title='Change status' aria-hidden='true' onChange={handleClick}>\n      <input className={s.visuallyHidden} aria-label='Change status profile' />\n      <div\n        aria-hidden='true'\n        className={cn(s.statusMy, s.elementInteractive)}\n        onClick={handleClick}\n      >\n        {status || <span className={s.noStatus}>Your status is empty</span>}\n      </div>\n    </div>\n  )\n}\n\ntype StatusFormPropsType = {\n  statusLocal: string\n  setStatusLocal: Dispatch<SetStateAction<string>>\n  setEditMode: Dispatch<SetStateAction<boolean>>\n}\n\nconst StatusForm: React.FC<StatusFormPropsType> = ({\n  statusLocal,\n  setStatusLocal,\n  setEditMode,\n}) => {\n  const classes = useStyles()\n\n  const stylesSaveAndButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    boxShadow: '2px 2px 5px var(--color-darkBlueTransparent)',\n    margin: 10,\n    width: '100%',\n  }\n\n  const theme = useAppSelector(getTheme)\n  const dispatch = useAppDispatch()\n\n  const [isEditInputStatusForm, setIsEditInputStatusForm] = useState(false)\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleFocusInput = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n\n  const handleBlurInput = () => {\n    setIsHiddenCounter(true)\n  }\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value.length)\n    setIsEditInputStatusForm(true)\n    setStatusLocal(e.currentTarget.value)\n  }\n\n  const handleSaveStatus = () => {\n    dispatch(updateStatus(statusLocal))\n    setIsEditInputStatusForm(false)\n    setEditMode(false)\n  }\n\n  return (\n    <>\n      <div className={s.statusEditMode}>\n        <TextField\n          autoFocus\n          multiline\n          fullWidth\n          name='newStatusText'\n          placeholder='Your status...'\n          inputProps={{ maxLength: 300 }}\n          className={classes.status}\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          value={statusLocal}\n          onChange={handleChangeInput}\n          onFocus={handleFocusInput}\n          onBlur={handleBlurInput}\n        />\n\n        <div className={s.buttonAndCounter}>\n          <div className={s.buttonWrap}>\n            <Button\n              onClick={handleSaveStatus}\n              disabled={!isEditInputStatusForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              style={stylesSaveAndButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </div>\n\n          <span\n            className={cn(\n              stylesField.count,\n              { [stylesField.countHidden]: isHiddenCounter },\n              { [stylesField.countYellow]: count >= 290 },\n              { [stylesField.countRed]: count === 300 }\n            )}\n          >\n            {count} of 300\n          </span>\n        </div>\n      </div>\n      <div className={s.plug} />\n    </>\n  )\n}\n\nexport default ProfileStatus\n","import { useState } from 'react'\n\nimport cn from 'classnames'\nimport s from './FieldWithCounter.module.scss'\n\ntype PropsType = {\n  renderContent: (\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    handleFocus: (e: React.FocusEvent<HTMLInputElement>) => void,\n    handleBlur: () => void\n  ) => JSX.Element\n  maxLength: number\n  setIsEditInputProfileForm: (bool: boolean) => void\n}\n\nconst FieldWithCounter: React.FC<PropsType> = (props) => {\n  const { maxLength, renderContent, setIsEditInputProfileForm } = props\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsEditInputProfileForm(true)\n    setCount(e.target.value.length)\n  }\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n  const handleBlur = () => {\n    setIsHiddenCounter(true)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {renderContent(handleInput, handleFocus, handleBlur)}\n\n      <span\n        className={cn(\n          s.count,\n          { [s.countHidden]: isHiddenCounter },\n          { [s.count_color_yellow]: count >= maxLength - 10 },\n          { [s.count_color_red]: count === maxLength }\n        )}\n      >\n        {count} of {maxLength}\n      </span>\n    </div>\n  )\n}\n\nexport default FieldWithCounter\n","import { TextField } from '@material-ui/core'\nimport { useAppSelector } from '../../services/hooks/useApp'\nimport { getTheme } from '../../store/selectors/app-selectors'\n\nimport s from './RenderTextField.module.scss'\n\nconst RenderTextField = (props) => {\n  const {\n    label,\n    input,\n    placeholder,\n    multiline,\n    variant,\n    inputProps,\n    onInput,\n    onFocus,\n    meta: { touched, error, warning },\n    fullWidth,\n    ...custom\n  } = props\n\n  const theme = useAppSelector(getTheme)\n\n  return (\n    <>\n      <TextField\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        label={label}\n        InputLabelProps={{ htmlFor: label }}\n        inputProps={{ ...inputProps, id: label }}\n        onInput={onInput}\n        onFocus={onFocus}\n        variant={variant}\n        multiline={multiline}\n        fullWidth={fullWidth}\n        placeholder={placeholder}\n        {...input}\n        {...custom}\n      />\n      {touched &&\n        ((error && <span className={s.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </>\n  )\n}\n\nexport default RenderTextField\n","import { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useAppSelector } from '../../services/hooks/useApp'\nimport { getTheme } from '../../store/selectors/app-selectors'\n\nconst RenderCheckbox = ({ input, label }) => {\n  const theme = useAppSelector(getTheme)\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={!!input.value}\n            onChange={input.onChange}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={{ marginLeft: 5, padding: 6 }}\n          />\n        }\n        label={label}\n        labelPlacement='start'\n        style={{ marginLeft: 0 }}\n      />\n    </div>\n  )\n}\n\nexport default RenderCheckbox\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport FieldWithCounter from '../../../../components/FieldWithCounter/FieldWithCounter'\nimport RenderTextField from '../../../../components/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../../../../components/RenderFormElement/RenderCheckbox'\nimport s from './ProfileDataForm.module.scss'\n\nimport { ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  initialValues: ProfileType\n  errorProfileContacts: string\n  setIsEditInputProfileForm: Dispatch<SetStateAction<boolean>>\n}\n\nconst Form: React.FC<\n  InjectedFormProps<ProfileType, OwnPropsType> & OwnPropsType\n> = (props) => {\n  const {\n    handleSubmit,\n    initialValues,\n    errorProfileContacts,\n    setIsEditInputProfileForm,\n  } = props\n\n  const handleEditInput = () => {\n    setIsEditInputProfileForm(true)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h1 className={s.titleForm}>Edit profile</h1>\n\n      <FieldDataForm\n        label='Name:'\n        name='fullName'\n        placeholder='Your name'\n        maxLength={100}\n        multiline='false'\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n\n      <FieldDataForm\n        label='About me:'\n        name='aboutMe'\n        placeholder='Write about yourself!'\n        maxLength={1000}\n        multiline='true'\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n\n      <div className={s.block}>\n        <Field\n          component={RenderCheckbox}\n          onChange={handleEditInput}\n          name='lookingForAJob'\n          label='Are you looking for a job?'\n        />\n      </div>\n\n      <FieldDataForm\n        label='Professional skills:'\n        name='lookingForAJobDescription'\n        placeholder='What you can do?'\n        maxLength={1000}\n        multiline='true'\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n\n      <address className={s.block}>\n        <div className={s.titleAllContacts}>Contacts:</div>\n\n        {errorProfileContacts ? (\n          <div className={s.errorProfileContacts}>{errorProfileContacts}</div>\n        ) : (\n          <></>\n        )}\n\n        {Object.keys(initialValues.contacts).map((key) => (\n          <div className={s.contact} key={key}>\n            <div className={s.titleContact}>{key}:</div>\n\n            <Field\n              component={RenderTextField}\n              onInput={handleEditInput}\n              name={`contacts.${key}`}\n              placeholder='https://...'\n              multiline\n              fullWidth\n            />\n          </div>\n        ))}\n      </address>\n    </form>\n  )\n}\n\ntype FieldDataFormPropsType = {\n  label: string\n  name: string\n  placeholder: string\n  maxLength: number\n  multiline: 'true' | 'false'\n  setIsEditInputProfileForm: Dispatch<SetStateAction<boolean>>\n}\n\nconst FieldDataForm: React.FC<FieldDataFormPropsType> = (props) => {\n  const {\n    label,\n    name,\n    placeholder,\n    maxLength,\n    multiline,\n    setIsEditInputProfileForm,\n  } = props\n\n  return (\n    <div className={s.block}>\n      <FieldWithCounter\n        renderContent={(handleInput, handleFocus, handleBlur) => (\n          <Field\n            component={RenderTextField}\n            label={label}\n            name={name}\n            placeholder={placeholder}\n            inputProps={{ maxLength }}\n            multiline={multiline === 'true'}\n            fullWidth\n            variant='filled'\n            onInput={handleInput}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n          />\n        )}\n        maxLength={maxLength}\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n    </div>\n  )\n}\n\nconst ProfileDataForm = reduxForm<ProfileType, OwnPropsType>({\n  form: 'editProfile',\n})(Form)\n\nexport default ProfileDataForm\n","export default __webpack_public_path__ + \"static/media/camera.b8f081b1.svg\";","import React from 'react'\n\nimport cn from 'classnames'\nimport s from './ProfileInputChangeAvatar.module.scss'\nimport camera from '../../../../assets/img/icons/camera.svg'\n\ntype PropsType = {\n  isOwner: boolean\n  isEditModeProfile: boolean\n  handleChangeAvatar: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst ProfileInputChangeAvatar: React.FC<PropsType> = ({\n  isOwner,\n  isEditModeProfile,\n  handleChangeAvatar,\n}) => (\n  <>\n    {isOwner && !isEditModeProfile && (\n      <div className={s.container} title='Change avatar'>\n        <label htmlFor='file_out'>\n          <input\n            type='file'\n            id='file_out'\n            className={s.visuallyHidden}\n            onChange={handleChangeAvatar}\n          />\n          <span\n            className={cn(s.wrapImg, s.elementInteractive)}\n            style={{ borderRadius: '50%' }}\n          >\n            <img src={camera} alt='change avatar' />\n          </span>\n        </label>\n      </div>\n    )}\n  </>\n)\n\nexport default ProfileInputChangeAvatar\n","import React, { useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { submit } from 'redux-form'\n\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './ProfileInfoContainer.module.scss'\n\nimport ProfilePlug from './ProfilePlug/ProfilePlug'\nimport ProfileData from './ProfileData/ProfileData'\nimport Avatar from '../../../components/Avatar/Avatar'\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\nimport Preloader from '../../../components/Preloader/Preloader'\nimport ButtonFollow from '../../../components/ButtonFollow/ButtonFollow'\nimport ProfileInputChangeAvatar from './ProfileInputChangeAvatar/ProfileInputChangeAvatar'\nimport { useAppDispatch, useAppSelector } from '../../../services/hooks/useApp'\n\nimport { getIsFollowed } from '../../../store/reducers/users-reducer'\nimport { getTheme } from '../../../store/selectors/app-selectors'\nimport {\n  getEditModeProfile,\n  getErrorProfileContacts,\n  getProfile,\n  getShowSuccessSave,\n} from '../../../store/selectors/profile-selectors'\nimport {\n  setEditModeProfile,\n  savePhotoThunk,\n  saveProfileThunk,\n} from '../../../store/reducers/profile-info-reducer'\n\nimport { ProfileType } from '../../../types/types'\n\n// when going to the profile page, scroll up to the name\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    const fullName = document.getElementById('scrollToTopOnMount')\n    fullName?.scrollIntoView(false)\n  }, [])\n  return null\n}\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileInfoContainer: React.FC<PropsType> = ({ isOwner }) => {\n  const stylesSaveAndCancelButton: React.CSSProperties = {\n    fontSize: 12,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: 10,\n  }\n\n  const stylesEditButton: React.CSSProperties = {\n    fontSize: 12,\n    marginTop: 20,\n  }\n\n  // for ProfileInfoDataForm\n  const errorProfileContacts = useAppSelector(getErrorProfileContacts)\n\n  const theme = useAppSelector(getTheme)\n  const profile = useAppSelector(getProfile)\n  const showSuccessSave = useAppSelector(getShowSuccessSave)\n  const isEditModeProfile = useAppSelector(getEditModeProfile)\n  const dispatch = useAppDispatch()\n\n  const [isEditInputProfileForm, setIsEditInputProfileForm] = useState(false)\n\n  type IsFollowedType = boolean | undefined | unknown\n  const [isFollowed, setIsFollowed] = useState<IsFollowedType>(undefined)\n\n  useEffect(() => {\n    const request = async () => {\n      if (profile) {\n        const response = await dispatch(getIsFollowed(profile.userId))\n        setIsFollowed(response.payload)\n      }\n    }\n    request()\n  }, [dispatch, profile])\n\n  const onSubmitProfile = (values: ProfileType) => {\n    dispatch(saveProfileThunk(values))\n  }\n\n  const handleChangeAvatar = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      dispatch(savePhotoThunk(e.target.files[0]))\n    }\n  }\n\n  const handleEditProfile = () => {\n    dispatch(setEditModeProfile({ bool: true }))\n  }\n\n  const handleSaveProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(submit('editProfile'))\n  }\n\n  const handleCancelProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(setEditModeProfile({ bool: false }))\n  }\n\n  if (!profile) {\n    return (\n      <>\n        <Preloader display='default' />\n        <ProfilePlug isOwner={isOwner} />\n      </>\n    )\n  }\n\n  return (\n    <section className={s.container}>\n      <h1 className={s.visuallyHidden}>Profile information</h1>\n\n      <div className={s.columnLeft}>\n        <div className={s.avatarWrap}>\n          <Avatar photo={profile.photos.large} size='extra-large' id={null} />\n          <ProfileInputChangeAvatar\n            isOwner={isOwner}\n            isEditModeProfile={isEditModeProfile}\n            handleChangeAvatar={handleChangeAvatar}\n          />\n        </div>\n\n        {isOwner && !isEditModeProfile ? (\n          <Button\n            onClick={handleEditProfile}\n            variant='outlined'\n            style={stylesEditButton}\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\n          >\n            Edit profile\n          </Button>\n        ) : (\n          <div className={s.buttonFollow}>\n            <ButtonFollow\n              id={profile.userId}\n              followed={isFollowed}\n              setIsFollowed={setIsFollowed}\n            />\n          </div>\n        )}\n\n        {isEditModeProfile && (\n          <div className={s.buttonsSaveAndCancelProfile}>\n            <Button\n              onClick={handleSaveProfile}\n              disabled={!isEditInputProfileForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n            <Button\n              onClick={handleCancelProfile}\n              variant='outlined'\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<CloseIcon />}\n            >\n              Cancel\n            </Button>\n          </div>\n        )}\n\n        {isEditModeProfile && showSuccessSave && (\n          <ShowSuccessSavePortal>\n            <div className={s.successSave}>{showSuccessSave}</div>\n          </ShowSuccessSavePortal>\n        )}\n      </div>\n\n      <div className={s.columnRight}>\n        {!isEditModeProfile && (\n          <div id='scrollToTopOnMount' className={s.fullName}>\n            {profile.fullName}\n          </div>\n        )}\n\n        {!isEditModeProfile && <ProfileStatus isOwner={isOwner} />}\n\n        {isEditModeProfile ? (\n          <ProfileDataForm\n            initialValues={profile}\n            onSubmit={onSubmitProfile}\n            errorProfileContacts={errorProfileContacts}\n            setIsEditInputProfileForm={setIsEditInputProfileForm}\n          />\n        ) : (\n          <ProfileData profile={profile} />\n        )}\n      </div>\n\n      {/* when you go to the profile page, the scroll will be reset */}\n      <ScrollToTopOnMount />\n    </section>\n  )\n}\n\nconst ShowSuccessSavePortal = ({ children }: { children: React.ReactNode }) => {\n  const el: HTMLDivElement = document.createElement('div')\n  document.body.append(el)\n\n  return createPortal(children, el)\n}\n\nexport default ProfileInfoContainer\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport ProfileWall from './ProfileWall/ProfileWall'\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer'\nimport withAuthRedirect from '../../services/hoc/withAuthRedirect'\nimport { useAppDispatch } from '../../services/hooks/useApp'\n\nimport { getEditModeProfile } from '../../store/selectors/profile-selectors'\nimport {\n  getStatus,\n  getUserProfile,\n  setEditModeProfile,\n} from '../../store/reducers/profile-info-reducer'\nimport { getAuthorizedUserID } from '../../store/selectors/auth-selectors'\n\nconst ProfileContainer: React.FC = () => {\n  const authorizedUserID = useSelector(getAuthorizedUserID)\n  const isEditModeProfile = useSelector(getEditModeProfile)\n  const dispatch = useAppDispatch()\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const match: any = useParams()\n  const userId = Number(match.userId)\n  const isOwner = userId === authorizedUserID\n\n  useEffect(() => {\n    dispatch(getUserProfile(userId as number))\n    dispatch(getStatus(userId as number))\n\n    return () => {\n      if (isEditModeProfile) {\n        dispatch(setEditModeProfile({ bool: false }))\n      }\n    }\n  }, [authorizedUserID, dispatch, isEditModeProfile, userId])\n\n  return (\n    <main>\n      <ProfileInfoContainer isOwner={isOwner} />\n      {!isEditModeProfile && isOwner && <ProfileWall />}\n    </main>\n  )\n}\n\nexport default withAuthRedirect(ProfileContainer)\n","export default __webpack_public_path__ + \"static/media/preloaderStart.a6528613.svg\";","import React from 'react'\nimport preloaderStart from '../../assets/img/preloader/preloaderStart.svg'\nimport s from './Preloader.module.scss'\n\nconst PreloaderStart: React.FC = () => {\n  return (\n    <div className={s.container}>\n      <div className={s.wrap}>\n        <img src={preloaderStart} alt='preloader' />\n      </div>\n    </div>\n  )\n}\n\nexport default PreloaderStart\n","export default __webpack_public_path__ + \"static/media/logo.15f621b4.svg\";","import React, { useEffect, memo, useCallback } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport InvertColorsIcon from '@material-ui/icons/InvertColors'\nimport { IconButton } from '@material-ui/core'\nimport s from './Header.module.scss'\nimport logo from '../../assets/img/icons/logo.svg'\n\nimport Avatar from '../../components/Avatar/Avatar'\nimport useLocalStorage from '../../services/hooks/useLocalStorage'\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/useApp'\n\nimport {\n  getAuthorizedUserID,\n  getIsAuth,\n  getLogin,\n  getMyPhoto,\n} from '../../store/selectors/auth-selectors'\nimport { getTheme } from '../../store/selectors/app-selectors'\nimport { logoutThunk } from '../../store/reducers/auth-reducer'\nimport { setTheme } from '../../store/reducers/app-reducer'\n\nimport { ThemeType } from '../../types/types'\n\nconst Header: React.FC = () => {\n  const isAuth = useAppSelector(getIsAuth)\n  const login = useAppSelector(getLogin)\n  const myID = useAppSelector(getAuthorizedUserID)\n  const myPhoto = useAppSelector(getMyPhoto)\n  const theme = useAppSelector(getTheme)\n  const dispatch = useAppDispatch()\n\n  useLocalStorage({ key: 'theme', value: theme, action: setTheme })\n\n  useEffect(() => {\n    const colors = {\n      cyan: `var(--color-cyan-${theme})`,\n      cyanLight: `var(--color-cyanLight-${theme})`,\n      cyanMedium: `var(--color-cyanMedium-${theme})`,\n      cyanDark: `var(--color-cyanDark-${theme})`,\n      darkBlue: `var(--color-darkBlue-${theme})`,\n      darkBlueTransparent: `var(--color-darkBlueTransparent-${theme})`,\n    }\n\n    const keys = Object.keys(colors)\n    const values = Object.values(colors)\n\n    for (let i = 0; i < keys.length; i++) {\n      document.body.style.setProperty(`--color-${keys[i]}`, values[i])\n    }\n  }, [theme])\n\n  const handleToggleTheme = useCallback(() => {\n    dispatch(setTheme(theme === 'theme1' ? 'theme2' : 'theme1'))\n  }, [dispatch, theme])\n\n  const handleLogout = useCallback(() => {\n    dispatch(logoutThunk())\n  }, [dispatch])\n\n  return (\n    <header className={s.header}>\n      <Logo />\n      <div className={s.rightColumn}>\n        {isAuth ? (\n          <>\n            <div className={s.loginAndPhoto}>\n              <Avatar photo={myPhoto} size='small' id={myID} />\n              <span className={s.loginName}>{login}</span>\n            </div>\n            <ButtonChangeTheme\n              theme={theme}\n              handleToggleTheme={handleToggleTheme}\n            />\n            <ButtonLogout handleLogout={handleLogout} />\n          </>\n        ) : (\n          <ButtonChangeTheme\n            theme={theme}\n            handleToggleTheme={handleToggleTheme}\n          />\n        )}\n      </div>\n    </header>\n  )\n}\n\nconst Logo: React.FC = memo(() => (\n  <NavLink className={s.logoAndTitle} to='/profile'>\n    <img src={logo} alt='logo' />\n    <span className={s.headerTitleDesktop}>Social network</span>\n    <span hidden className={s.headerTitleMobile}>\n      SN\n    </span>\n  </NavLink>\n))\n\ntype ButtonChangeThemePropsType = {\n  theme: ThemeType\n  handleToggleTheme: () => void\n}\n\nconst ButtonChangeTheme: React.FC<ButtonChangeThemePropsType> = ({\n  theme,\n  handleToggleTheme,\n}) => (\n  <>\n    <span className={s.buttonThemeDesktop}>\n      <Button\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        style={{ padding: '6px 12px', marginRight: '12px' }}\n        onClick={handleToggleTheme}\n        startIcon={<InvertColorsIcon />}\n      >\n        Change theme\n      </Button>\n    </span>\n\n    <span hidden className={s.buttonThemeMobile}>\n      <IconButton\n        onClick={handleToggleTheme}\n        aria-label='changeTheme'\n        style={{ margin: '0 12px' }}\n        title='Change theme'\n      >\n        <InvertColorsIcon\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n        />\n      </IconButton>\n    </span>\n  </>\n)\n\nconst ButtonLogout: React.FC<{ handleLogout: () => void }> = memo(\n  ({ handleLogout }) => (\n    <>\n      <span className={s.buttonLogoutDesktop}>\n        <Button\n          onClick={handleLogout}\n          variant='outlined'\n          style={{ marginRight: '12px' }}\n          startIcon={<ExitToAppIcon />}\n        >\n          Log out\n        </Button>\n      </span>\n      <span hidden className={s.buttonLogoutMobile}>\n        <IconButton title='Logout of profile' onClick={handleLogout}>\n          <ExitToAppIcon />\n        </IconButton>\n      </span>\n    </>\n  )\n)\n\nexport default Header\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Navbar.module.scss'\nimport { getAuthorizedUserID } from '../../store/selectors/auth-selectors'\n\nimport { useAppSelector } from '../../services/hooks/useApp'\n\nconst Navbar: React.FC = () => {\n  const authorizedUserID = useAppSelector(getAuthorizedUserID)\n  const { pathname } = useLocation()\n\n  const profileUrl = `/profile/${authorizedUserID}`\n\n  const pages = [\n    { id: 1, name: 'Profile', to: profileUrl, exact: true },\n    { id: 2, name: 'Chat', to: '/chat', exact: false },\n    { id: 3, name: 'Find Users', to: '/users', exact: false },\n    { id: 4, name: 'Friends', to: '/friends', exact: false },\n  ]\n\n  type PageType = {\n    id: number\n    name: string\n    to: string\n    exact: boolean\n  }\n\n  return (\n    <nav className={s.nav}>\n      <ul>\n        {pages.map((p: PageType) => (\n          <li key={p.id}>\n            <NavLink\n              exact={p.exact}\n              to={p.to}\n              activeClassName={s.active}\n              className={s.navLink}\n              replace\n            >\n              <svg\n                width='24'\n                height='24'\n                viewBox='0 0 24 24'\n                className={cn(s.navLinkImg, {\n                  [s.activeIcon]: pathname === p.to,\n                })}\n              >\n                {/\\/profile*/.test(p.to)\n                  ? profilePath\n                  : p.to === '/chat'\n                  ? chatPath\n                  : p.to === '/users'\n                  ? usersPath\n                  : friendsPath}\n              </svg>\n              {p.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n\nconst profilePath = (\n  <path d='M12 4a4 4 0 014 4 4 4 0 01-4 4 4 4 0 01-4-4 4 4 0 014-4m0 10c4.42 0 8 1.79 8 4v2H4v-2c0-2.21 3.58-4 8-4z' />\n)\n\nconst chatPath = (\n  <path d='M20 2H4a2 2 0 00-2 2v18l4-4h14a2 2 0 002-2V4a2 2 0 00-2-2z' />\n)\n\nconst usersPath = (\n  <path d='M15.5 12a4.48 4.48 0 013.81 6.9l3.08 3.1L21 23.39l-3.12-3.07A4.5 4.5 0 1115.5 12m0 2a2.5 2.5 0 00-2.5 2.5 2.5 2.5 0 002.5 2.5 2.5 2.5 0 002.5-2.5 2.5 2.5 0 00-2.5-2.5M10 4a4 4 0 014 4c0 .91-.31 1.75-.82 2.43-.86.32-1.63.83-2.27 1.47L10 12a4 4 0 01-4-4 4 4 0 014-4M2 20v-2c0-2.12 3.31-3.86 7.5-4a6.56 6.56 0 00.5 6H2z' />\n)\n\nconst friendsPath = (\n  <path d='M12 5.5A3.5 3.5 0 0115.5 9a3.5 3.5 0 01-3.5 3.5A3.5 3.5 0 018.5 9 3.5 3.5 0 0112 5.5M5 8c.56 0 1.08.15 1.53.42a5.54 5.54 0 001.13 3.96A3 3 0 015 14a3 3 0 01-3-3 3 3 0 013-3m14 0a3 3 0 013 3 3 3 0 01-3 3 3 3 0 01-2.66-1.62 5.54 5.54 0 001.13-3.96c.45-.27.97-.42 1.53-.42M5.5 18.25c0-2.07 2.91-3.75 6.5-3.75s6.5 1.68 6.5 3.75V20h-13v-1.75M0 20v-1.5c0-1.39 1.89-2.56 4.45-2.9a4.04 4.04 0 00-.95 2.65V20H0m24 0h-3.5v-1.75c0-1.03-.36-1.97-.95-2.65 2.56.34 4.45 1.51 4.45 2.9V20z' />\n)\n\nexport default Navbar\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport cn from 'classnames'\nimport Button from '@material-ui/core/Button'\nimport s from './Auth.module.scss'\nimport RenderTextField from '../../components/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../../components/RenderFormElement/RenderCheckbox'\n\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/useApp'\n\nimport {\n  getAuthorizedUserID,\n  getCaptchaURL,\n  getIsAuth,\n} from '../../store/selectors/auth-selectors'\nimport { getTheme } from '../../store/selectors/app-selectors'\nimport { loginThunk } from '../../store/reducers/auth-reducer'\n\nimport { LoginType } from '../../types/types'\n\nconst validate = (values: LoginType) => {\n  type ErrorsType = {\n    email?: string\n    password?: string\n    captcha?: string\n  }\n\n  const errors: ErrorsType = {}\n\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n\n  return errors\n}\n\ntype OwnPropsType = {\n  captchaURL: string | null\n  handleEnterTestAccount: () => void\n}\n\nconst Auth: React.FC = () => {\n  const isAuth = useAppSelector(getIsAuth)\n  const captchaURL = useAppSelector(getCaptchaURL)\n  const userID = useAppSelector(getAuthorizedUserID)\n  const dispatch = useAppDispatch()\n\n  const onSubmit: (param: LoginType) => void = (param) => {\n    // const { email, password, rememberMe, captcha } = param\n    dispatch(loginThunk(param))\n  }\n\n  const handleEnterTestAccount = () => {\n    const email = 'free@samuraijs.com'\n    const password = 'free'\n    dispatch(\n      loginThunk({\n        email,\n        password,\n        rememberMe: false,\n        captcha: null,\n      })\n    )\n  }\n\n  if (isAuth) {\n    return <Redirect to={`/profile/${userID}`} />\n  }\n\n  return (\n    <main className={s.container}>\n      <div className={s.body}>\n        <h1>Log in</h1>\n        <LoginReduxForm\n          onSubmit={onSubmit}\n          captchaURL={captchaURL}\n          handleEnterTestAccount={handleEnterTestAccount}\n        />\n      </div>\n    </main>\n  )\n}\n\nconst LoginForm: React.FC<\n  InjectedFormProps<LoginType, OwnPropsType> & OwnPropsType\n> = ({ handleSubmit, handleEnterTestAccount, error, captchaURL }) => {\n  const stylesLoginButton: React.CSSProperties = {\n    fontSize: 16,\n    fontWeight: 700,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const stylesTestLoginButton: React.CSSProperties = {\n    marginBottom: '15px',\n    ...stylesLoginButton,\n  }\n\n  const theme = useAppSelector(getTheme)\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.loginBlockSubstrate}>\n        <div className={s.loginBlock}>\n          <div className={s.wrapElementForm}>\n            <Field\n              component={RenderTextField}\n              autoComplete='username'\n              name='email'\n              label='Email:'\n              type='email'\n              fullWidth\n            />\n          </div>\n          <div className={s.wrapElementForm}>\n            <Field\n              component={RenderTextField}\n              autoComplete='current-password'\n              name='password'\n              label='Password:'\n              type='password'\n              fullWidth\n            />\n          </div>\n          <div className={cn(s.wrapElementForm, s.wrapCheckbox)}>\n            <Field\n              component={RenderCheckbox}\n              name='rememberMe'\n              label='Remember me'\n            />\n          </div>\n\n          {captchaURL && <img src={captchaURL} alt='captcha' />}\n          {captchaURL && (\n            <Field component={RenderTextField} fullWidth name='captcha' />\n          )}\n\n          <div className={s.wrapElementForm}>\n            <Button\n              type='submit'\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesLoginButton}\n            >\n              Log in\n            </Button>\n\n            {error && (\n              <article className={s.error}>\n                {error === 'You are not authorized' ? (\n                  <>\n                    <p>1. You are either not authorized</p>\n                    <p>or</p>\n                    <p>\n                      2. Please, unblock third party cookies or show all cookies\n                      or add an exception for <br />\n                      <u>ignatov-ru.github.io</u>\n                      <br /> to resolve (see browser settings)\n                    </p>\n                  </>\n                ) : (\n                  error\n                )}\n              </article>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <p>or</p>\n\n      <Button\n        onClick={handleEnterTestAccount}\n        variant='contained'\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        fullWidth\n        style={stylesTestLoginButton}\n      >\n        Login to test account\n      </Button>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm<LoginType, OwnPropsType>({\n  form: 'loginForm',\n  validate,\n})(LoginForm)\n\nexport default Auth\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error })\n  }\n\n  render() {\n    const { error } = this.state\n    const { children } = this.props\n\n    if (error) {\n      return (\n        <div>\n          <h2>Something went wrong</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error?.toString()}\n          </details>\n        </div>\n      )\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useEffect, lazy, Suspense } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport ProfileContainer from './pages/Profile/ProfileContainer'\nimport PreloaderStart from './components/Preloader/PreloaderStart'\nimport Header from './parts/Header/Header'\nimport Navbar from './parts/Navbar/Navbar'\nimport Auth from './pages/Auth/Auth'\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\nimport Preloader from './components/Preloader/Preloader'\n\nimport s from './App.module.scss'\n\nimport { getInitialized } from './store/selectors/app-selectors'\nimport { getAuthorizedUserID } from './store/selectors/auth-selectors'\nimport { initializeApp } from './store/reducers/app-reducer'\nimport { useAppDispatch, useAppSelector } from './services/hooks/useApp'\n\nconst SuspendedChat = lazy(() => import('./pages/Chat/Chat'))\nconst SuspendedUsers = lazy(() => import('./pages/Users/UsersContainer'))\nconst SuspendedFriends = lazy(() => import('./pages/Friends/FriendsContainer'))\n\nconst App: React.FC = () => {\n  const userID = useAppSelector(getAuthorizedUserID)\n  const initialized = useAppSelector(getInitialized)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(initializeApp())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <PreloaderStart />\n  }\n\n  return (\n    <div className={s.fon}>\n      <div className={s.container}>\n        <div className={s.appWrapper}>\n          <Header />\n          <Navbar />\n\n          <div className={s.appWrapperContent}>\n            <ErrorBoundary>\n              <Suspense fallback={<Preloader display='default' />}>\n                <Switch>\n                  <Redirect from='/profile/undefined' to='/' />\n\n                  <Route\n                    path='/profile/:userId'\n                    render={() => <ProfileContainer />}\n                  />\n\n                  <Route path='/chat' render={() => <SuspendedChat />} />\n\n                  <Route path='/friends' render={() => <SuspendedFriends />} />\n\n                  <Route path='/users' render={() => <SuspendedUsers />} />\n\n                  <Route path='/login' render={() => <Auth />} />\n\n                  <Redirect exact from='/' to={`/profile/${userID}`} />\n\n                  <Redirect from='*' to='/' />\n                </Switch>\n              </Suspense>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './assets/styles/theme.css'\nimport {\n  createTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport store from './store/store'\nimport App from './App'\n\nlet theme = createTheme({\n  palette: {\n    type: 'dark',\n    // color of main buttons, active links in navigation,\n    // decorative lines, borders for forms elements\n    primary: {\n      main: '#00bcd4',\n      // 1st theme, blue\n    },\n    secondary: {\n      main: '#00d482',\n      // 2nd theme, green\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfilePlug_container__1nOYx\",\"columnLeft\":\"ProfilePlug_columnLeft__10vj3\",\"columnRight\":\"ProfilePlug_columnRight__AmGm-\",\"avatar\":\"ProfilePlug_avatar__1twUn\",\"button\":\"ProfilePlug_button__3Q7Mp\",\"name\":\"ProfilePlug_name__2LtWK\",\"status\":\"ProfilePlug_status__2l4Xo\",\"titleOne\":\"ProfilePlug_titleOne__2F27b\",\"titleTwo\":\"ProfilePlug_titleTwo__xFbUQ\",\"text\":\"ProfilePlug_text__2rXf7\",\"nameWrap\":\"ProfilePlug_nameWrap__12Cry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3McmD\",\"logoAndTitle\":\"Header_logoAndTitle__1ADjK\",\"headerTitleDesktop\":\"Header_headerTitleDesktop__3G29D\",\"headerTitleMobile\":\"Header_headerTitleMobile__2Y6gV\",\"rightColumn\":\"Header_rightColumn__3diRA\",\"loginAndPhoto\":\"Header_loginAndPhoto__22Vk2\",\"loginName\":\"Header_loginName__30Fyo\",\"buttonThemeDesktop\":\"Header_buttonThemeDesktop__3XLdl\",\"buttonThemeMobile\":\"Header_buttonThemeMobile__38PZ-\",\"buttonLogoutDesktop\":\"Header_buttonLogoutDesktop__10k3e\",\"buttonLogoutMobile\":\"Header_buttonLogoutMobile__2ChnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileStatus_visuallyHidden__1KsGa\",\"elementInteractive\":\"ProfileStatus_elementInteractive__33LBJ\",\"container\":\"ProfileStatus_container__1axHX\",\"statusEditMode\":\"ProfileStatus_statusEditMode__Mz435\",\"buttonAndCounter\":\"ProfileStatus_buttonAndCounter__2oLUV\",\"buttonWrap\":\"ProfileStatus_buttonWrap__3gxqe\",\"plug\":\"ProfileStatus_plug__2bfnV\",\"statusMy\":\"ProfileStatus_statusMy__37TgA\",\"statusNotMy\":\"ProfileStatus_statusNotMy__3Hyg0\",\"noStatus\":\"ProfileStatus_noStatus__Us33C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__t1qxs\",\"body\":\"Auth_body__3kRx1\",\"loginBlockSubstrate\":\"Auth_loginBlockSubstrate__1hvQB\",\"loginBlock\":\"Auth_loginBlock__2r2M3\",\"wrapElementForm\":\"Auth_wrapElementForm__1_7w8\",\"wrapCheckbox\":\"Auth_wrapCheckbox__rVBkU\",\"error\":\"Auth_error__3hSx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapButtons\":\"ProfileButtonsPostsDelete_wrapButtons__1UwEP\",\"buttons\":\"ProfileButtonsPostsDelete_buttons__2zqkd\",\"buttonDesktop\":\"ProfileButtonsPostsDelete_buttonDesktop__2DCwA\",\"buttonMobile\":\"ProfileButtonsPostsDelete_buttonMobile__R0_qV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"FieldWithCounter_count__2aUjJ\",\"countHidden\":\"FieldWithCounter_countHidden__1eZeF\",\"count_color_yellow\":\"FieldWithCounter_count_color_yellow__2jAAt\",\"count_color_red\":\"FieldWithCounter_count_color_red__subZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileInfoContainer_visuallyHidden__2RQPI\",\"elementInteractive\":\"ProfileInfoContainer_elementInteractive__3qkqY\",\"container\":\"ProfileInfoContainer_container__3skVG\",\"columnLeft\":\"ProfileInfoContainer_columnLeft__2JvrH\",\"avatarWrap\":\"ProfileInfoContainer_avatarWrap__2OMRR\",\"columnRight\":\"ProfileInfoContainer_columnRight__2-Pkh\",\"iconButtonEditProfile\":\"ProfileInfoContainer_iconButtonEditProfile__2Ih5v\",\"fullName\":\"ProfileInfoContainer_fullName__3gT47\",\"buttonFollow\":\"ProfileInfoContainer_buttonFollow__4ziEM\",\"buttonsSaveAndCancelProfile\":\"ProfileInfoContainer_buttonsSaveAndCancelProfile__3IYLD\",\"successSave\":\"ProfileInfoContainer_successSave__3TQMQ\",\"anim\":\"ProfileInfoContainer_anim__1_MYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__3qxwb\",\"titleForm\":\"ProfileDataForm_titleForm__1fJqM\",\"block\":\"ProfileDataForm_block__2XgMr\",\"contact\":\"ProfileDataForm_contact__1t6wX\",\"titleAllContacts\":\"ProfileDataForm_titleAllContacts__3D-cf\",\"titleContact\":\"ProfileDataForm_titleContact__2C_0w\",\"errorProfileContacts\":\"ProfileDataForm_errorProfileContacts__Fknfe\"};","import { UserType } from '../../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype GetUsersType = {\n  items: UserType[]\n  totalCount: number\n  error: string\n}\n\nconst usersAPI = {\n  async getUsers(\n    currentPage = 1,\n    pageSize: number,\n    term?: string,\n    friend?: boolean\n  ) {\n    const response = await instance.get<GetUsersType>(\n      `users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`\n    )\n    return response.data\n  },\n  async isFollowed(id: number) {\n    const response = await instance.get<boolean>(`follow/${id}`)\n    return response.data\n  },\n  async followUser(id: number) {\n    const response = await instance.post<DefaultResponseType>(\n      `follow/${id}`,\n      {}\n    )\n    return response.data\n  },\n  async unfollowUser(id: number) {\n    const response = await instance.delete<DefaultResponseType>(`follow/${id}`)\n    return response.data\n  },\n}\n\nexport default usersAPI\n","import { PayloadAction, createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { ResultCodesEnum } from '../../services/api/api'\nimport usersAPI from '../../services/api/users-api'\nimport { UserType } from '../../types/types'\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    users: [] as UserType[],\n    pageSize: 10,\n    totalUsersCount: 0,\n    isFetching: true,\n    // disabling the button after pressing\n    followingInProgress: [] as number[], // array of users ID\n  },\n  reducers: {\n    followSuccess: (state, action: PayloadAction<{ userID: number }>) => {\n      state.users = state.users.map((u) => {\n        if (u.id === action.payload.userID) {\n          return { ...u, followed: true }\n        }\n        return u\n      })\n    },\n\n    unfollowSuccess: (state, action: PayloadAction<{ userID: number }>) => {\n      state.users = state.users.map((u) => {\n        if (u.id === action.payload.userID) {\n          return { ...u, followed: false }\n        }\n        return u\n      })\n    },\n\n    setUsers: (state, action: PayloadAction<{ users: UserType[] }>) => {\n      state.users = [...action.payload.users]\n    },\n\n    addUsers: (state, action: PayloadAction<{ users: UserType[] }>) => {\n      state.users = [...state.users, ...action.payload.users]\n    },\n\n    setTotalUsersCount: (\n      state,\n      action: PayloadAction<{ totalUsersCount: number }>\n    ) => {\n      state.totalUsersCount = action.payload.totalUsersCount\n    },\n\n    clearUsers: (state) => {\n      state.users = []\n    },\n\n    toggleIsFetching: (\n      state,\n      action: PayloadAction<{ isFetching: boolean }>\n    ) => {\n      state.isFetching = action.payload.isFetching\n    },\n\n    toggleFollowingProgress: (\n      state,\n      action: PayloadAction<{ isFetching: boolean; userID: number }>\n    ) => {\n      const { userID } = action.payload\n\n      state.followingInProgress = action.payload.isFetching\n        ? [...state.followingInProgress, userID]\n        : state.followingInProgress.filter((id) => id !== userID)\n    },\n  },\n})\n\nexport const {\n  followSuccess,\n  unfollowSuccess,\n  setUsers,\n  addUsers,\n  setTotalUsersCount,\n  clearUsers,\n  toggleIsFetching,\n  toggleFollowingProgress,\n} = usersSlice.actions\n\ntype GetUsersPropsType = {\n  page: number\n  term: string\n  friend?: boolean\n}\n\nexport const getUsers = createAsyncThunk(\n  'users/getUsers',\n  async (props: GetUsersPropsType, { dispatch, getState }) => {\n    const { page, term, friend } = props\n\n    dispatch(toggleIsFetching({ isFetching: true }))\n    const {\n      users: { pageSize },\n    } = getState() as { users: { pageSize: number } }\n    const response = await usersAPI.getUsers(page, pageSize, term, friend)\n\n    // primary download\n    if (term.length === 0 && page === 1) {\n      dispatch(setUsers({ users: response.items }))\n    }\n    // get more users\n    if (page > 1) {\n      dispatch(addUsers({ users: response.items }))\n    }\n    // primary search\n    if (term.length > 0 && page === 1) {\n      dispatch(clearUsers())\n      dispatch(setUsers({ users: response.items }))\n    }\n\n    dispatch(setTotalUsersCount({ totalUsersCount: response.totalCount }))\n    dispatch(toggleIsFetching({ isFetching: false }))\n  }\n)\n\nexport const getIsFollowed = createAsyncThunk(\n  'users/getIsFollowed',\n  async (id: number) => {\n    const response = await usersAPI.isFollowed(id)\n    return response\n  }\n)\n\nexport const follow = createAsyncThunk(\n  'users/follow',\n  async (id: number, { dispatch }) => {\n    dispatch(toggleFollowingProgress({ isFetching: true, userID: id }))\n\n    const response = await usersAPI.followUser(id)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(followSuccess({ userID: id }))\n    }\n\n    dispatch(toggleFollowingProgress({ isFetching: false, userID: id }))\n  }\n)\n\nexport const unfollow = createAsyncThunk(\n  'users/unfollow',\n  async (id: number, { dispatch }) => {\n    dispatch(toggleFollowingProgress({ isFetching: true, userID: id }))\n\n    const response = await usersAPI.unfollowUser(id)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(unfollowSuccess({ userID: id }))\n    }\n\n    dispatch(toggleFollowingProgress({ isFetching: false, userID: id }))\n  }\n)\n\nexport default usersSlice.reducer\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootStateType, AppDispatchType } from '../../store/store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatchType>()\n\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_default\":\"Preloader_container_default__3RN-e\",\"container_block\":\"Preloader_container_block__peBSS\",\"wrap\":\"Preloader_wrap__3RjI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__3gUyD\",\"avatar_size_small\":\"Avatar_avatar_size_small__OBWoj\",\"avatar_size_medium\":\"Avatar_avatar_size_medium__ZA50V\",\"avatar_size_large\":\"Avatar_avatar_size_large__2uQ9n\",\"avatar_size_extraLarge\":\"Avatar_avatar_size_extraLarge__2VlfS\"};","import React, { memo } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport unknown from '../../assets/img/no_photo.svg'\nimport s from './Avatar.module.scss'\n\ntype PropsType = {\n  photo: string | null\n  size: 'small' | 'medium' | 'large' | 'extra-large'\n}\n\ntype OwnPropsType = {\n  id: number | null\n}\n\nconst Avatar: React.FC<PropsType & OwnPropsType> = ({ photo, size, id }) => {\n  // Проверка тестового аккаунта с id = 1079:\n  // установленное фото на тестовый аккаунт удаляется через короткое время\n  // на сервере и, если с этого аккаунта написано сообщение в чат, то\n  // при отрисовке этого сообщения (с удалённым фото) в ответ приходит\n  // ошибка вместо null | undefined, вскоре сервер опять присылает null\n  // вместо фото, но это происходит не сразу. Для этого случая эта проверка\n  let photoTrue\n  if (photo?.includes('1079')) {\n    photoTrue = null\n  } else {\n    photoTrue = photo\n  }\n\n  return (\n    <>\n      {id ? (\n        <NavLink to={`/profile/${id}`} replace>\n          <AvatarBody photo={photoTrue} size={size} />\n        </NavLink>\n      ) : (\n        <AvatarBody photo={photoTrue} size={size} />\n      )}\n    </>\n  )\n}\n\nconst AvatarBody: React.FC<PropsType> = ({ photo, size }) => {\n  return (\n    <div className={s.avatarWrap}>\n      <div\n        className={cn(\n          s.avatar,\n          { [s.avatar_size_extraLarge]: size === 'extra-large' },\n          { [s.avatar_size_large]: size === 'large' },\n          { [s.avatar_size_medium]: size === 'medium' },\n          { [s.avatar_size_small]: size === 'small' }\n        )}\n      >\n        <img src={photo || unknown} alt='avatar' />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Avatar)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2z3nZ\",\"navLink\":\"Navbar_navLink__3hWaY\",\"navLinkImg\":\"Navbar_navLinkImg__1JeBW\",\"active\":\"Navbar_active__3PiPu\",\"activeIcon\":\"Navbar_activeIcon__GMe5P\"};"],"sourceRoot":""}