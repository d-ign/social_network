{"version":3,"sources":["services/hooks/useResizeWindow.tsx","components/User/User.module.scss","components/Search/Search.tsx","components/Search/Search.module.scss","services/hooks/useObserver.tsx","components/User/Tooltip/Tooltip.tsx","components/User/User.tsx","pages/Users/Users.module.scss","services/hooks/useQueryUrl.tsx","pages/Users/Users.tsx","pages/Users/UsersContainer.tsx"],"names":["useResizeWindow","useState","window","innerWidth","widthScreen","setWidthScreen","useEffect","handleResizeWindow","addEventListener","removeEventListener","module","exports","Search","props","pathname","termOfUrl","searchUsers","totalUsersCount","isFetching","stylesInput","p","pl","width","isShowPrompt","setIsShowPrompt","handleChange","useCallback","e","target","value","handleDebounce","useMemo","debounce","cancel","className","s","container","searchWrap","searchIcon","placeholder","inputProps","sx","onChange","onInput","searchCount","toString","replace","SearchUsers","memo","useObserver","elementTrigger","isCanLoad","callback","observer","useRef","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","Tooltip","element","children","User","user","id","photos","name","status","followed","symbolCount","setSymbolCount","wrapAvatarNameAndStatus","wrapAvatar","Avatar","photo","large","size","nameAndStatus","WithTooltip","Name","Status","ButtonFollow","length","wrapName","useQueryUrl","history","useHistory","setTermOfUrl","parsed","queryString","parse","location","search","substr","term","Users","pageSize","useAppSelector","getPageSize","users","getUsersSelector","getIsFetching","getTotalUsersCount","dispatch","useAppDispatch","useLocation","pageNumber","setPageNumber","isShowMoreUsersButton","setIsShowMoreUsersButton","maxPageCount","Math","ceil","getUsers","page","handleShowMoreUsers","lastElement","React","visuallyHidden","Prompt","PaginationUsers","NoElement","elements","wrapUsers","map","u","ref","cn","buttonLoadMore","hiddenButtonLoadMore","IconButton","title","onClick","withAuthRedirect","Preloader"],"mappings":"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","file":"static/js/6.7182ae80.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\ntype HookType = () => number\n\nconst useResizeWindow: HookType = () => {\n  const [widthScreen, setWidthScreen] = useState(window.innerWidth)\n\n  useEffect(() => {\n    const handleResizeWindow = () => setWidthScreen(window.innerWidth)\n\n    window.addEventListener('resize', handleResizeWindow)\n\n    return () => {\n      window.removeEventListener('resize', handleResizeWindow)\n    }\n  }, [widthScreen, setWidthScreen])\n\n  return widthScreen\n}\n\nexport default useResizeWindow\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2wfAk\",\"wrapAvatarNameAndStatus\":\"User_wrapAvatarNameAndStatus__3ZFGx\",\"wrapAvatar\":\"User_wrapAvatar__3xjij\",\"nameAndStatus\":\"User_nameAndStatus__1MJOp\",\"wrapName\":\"User_wrapName__14Fu7\",\"status\":\"User_status__bn8rk\"};","import React, { useCallback, memo, useMemo, useEffect, useState } from 'react'\nimport debounce from 'lodash/debounce'\n\nimport InputBase from '@mui/material/InputBase'\nimport SearchIcon from '@mui/icons-material/Search'\nimport s from './Search.module.scss'\n\nimport Prompt from '../Prompt/Prompt'\n\ntype PropsType = {\n  pathname: string\n  termOfUrl: string\n  isFetching: boolean\n  totalUsersCount: number\n  searchUsers: (term: string) => void\n}\n\nconst Search: React.FC<PropsType> = (props) => {\n  const { pathname, termOfUrl, searchUsers, totalUsersCount, isFetching } =\n    props\n\n  const stylesInput = {\n    p: '1, 1, 1, 0',\n    pl: 'calc(1em + 32px)', // vertical padding + font size from searchIcon\n    width: '100%',\n  }\n\n  const [isShowPrompt, setIsShowPrompt] = useState(true)\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      searchUsers(e.target.value)\n      setIsShowPrompt(false)\n    },\n    [searchUsers]\n  )\n\n  const handleDebounce = useMemo(\n    () => debounce(handleChange, 600),\n    [handleChange]\n  )\n\n  useEffect(() => {\n    return function cleanup() {\n      handleDebounce.cancel()\n    }\n  })\n\n  return (\n    <div className={s.container}>\n      <div className={s.searchWrap}>\n        <div className={s.searchIcon}>\n          <SearchIcon />\n        </div>\n        {pathname === '/users' && (\n          <InputBase\n            placeholder='Search by name...'\n            inputProps={{ 'aria-label': 'search' }}\n            sx={stylesInput}\n            value={termOfUrl}\n            onChange={handleChange}\n          />\n        )}\n        {pathname === '/friends' && (\n          <InputBase\n            placeholder='Search by name...'\n            inputProps={{ 'aria-label': 'search' }}\n            sx={stylesInput}\n            onInput={handleDebounce}\n          />\n        )}\n      </div>\n      <div className={s.searchCount}>\n        Total: {totalUsersCount.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')}\n        {/* adding space between numbers: (? = pattern) + - greedy repeating\n        the last pattern one or more times to the end of the line $ */}\n      </div>\n\n      {isShowPrompt && !isFetching && (\n        <Prompt.SearchUsers pathname={pathname} />\n      )}\n    </div>\n  )\n}\n\nexport default memo(Search)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__1sCS3\",\"searchWrap\":\"Search_searchWrap__1VAEz\",\"searchIcon\":\"Search_searchIcon__3oISE\",\"searchCount\":\"Search_searchCount__31o5E\",\"search\":\"Search_search__ntywA\"};","import { useEffect, useRef, PropsWithChildren } from 'react'\n\ntype PropsType = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  elementTrigger: React.RefObject<any>\n  isCanLoad: boolean\n  isFetching: boolean\n  callback: () => void\n}\n\ntype HookType = (props: PropsWithChildren<PropsType>) => void\n\nconst useObserver: HookType = ({\n  elementTrigger,\n  isCanLoad,\n  isFetching,\n  callback,\n}) => {\n  const observer = useRef<IntersectionObserver | undefined>()\n\n  useEffect(() => {\n    if (isFetching) return\n\n    if (observer.current) observer.current.disconnect()\n\n    const _callback = (entries: IntersectionObserverEntry[]) => {\n      // when the ref disappears from the visibility zone,\n      // the callback will not work\n      if (entries[0].isIntersecting && isCanLoad) {\n        callback()\n      }\n    }\n\n    observer.current = new IntersectionObserver(_callback)\n    observer.current.observe(elementTrigger.current)\n  }, [isFetching, callback, isCanLoad, elementTrigger])\n}\n\nexport default useObserver\n","import React, { memo } from 'react'\nimport './Tooltip.module.scss'\n\ntype PropsType = {\n  element: string\n  children: React.ReactNode\n}\n\nconst Tooltip: React.FC<PropsType> = ({ element, children }) => {\n  return <div data-tooltip={element}>{children}</div>\n}\n\nexport default memo(Tooltip)\n","import React, { useEffect, useState, memo } from 'react'\n\nimport s from './User.module.scss'\n\nimport Name from '../Name/Name'\nimport Avatar from '../Avatar/Avatar'\nimport Tooltip from './Tooltip/Tooltip'\nimport ButtonFollow from '../ButtonFollow/ButtonFollow'\nimport useResizeWindow from '../../services/hooks/useResizeWindow'\n\nimport { UserType } from '../../types/types'\n\nconst User: React.FC<{ user: UserType }> = (props) => {\n  const {\n    user: { id, photos, name, status, followed },\n  } = props\n\n  const [symbolCount, setSymbolCount] = useState(19)\n  const widthScreen = useResizeWindow()\n\n  useEffect(() => {\n    if (widthScreen <= 735) {\n      setSymbolCount(10)\n    }\n  }, [widthScreen])\n\n  return (\n    <article className={s.user}>\n      <div className={s.wrapAvatarNameAndStatus}>\n        <div className={s.wrapAvatar}>\n          <Avatar photo={photos.large} size='large' id={id} />\n        </div>\n        <div className={s.nameAndStatus}>\n          <WithTooltip.Name id={id} name={name} symbolCount={symbolCount} />\n          <WithTooltip.Status status={status} symbolCount={symbolCount} />\n        </div>\n      </div>\n      <ButtonFollow id={id} followed={followed} />\n    </article>\n  )\n}\n\ntype NameWithTooltipPropsType = {\n  id: number\n  name: string\n  symbolCount: number\n}\n\ntype StatusWithTooltipPropsType = {\n  status: string\n  symbolCount: number\n}\n\nconst WithTooltip = {\n  Name: memo<NameWithTooltipPropsType>(({ id, name, symbolCount }) => (\n    <>\n      {name?.length > symbolCount ? (\n        <Tooltip element={name}>\n          <div className={s.wrapName}>\n            <Name id={id} name={name} />\n          </div>\n        </Tooltip>\n      ) : (\n        <div className={s.wrapName}>\n          <Name id={id} name={name} />\n        </div>\n      )}\n    </>\n  )),\n\n  Status: memo<StatusWithTooltipPropsType>(({ status, symbolCount }) => (\n    <>\n      {status?.length > symbolCount ? (\n        <Tooltip element={status}>\n          <div className={s.status}>\n            <i>{status}</i>\n          </div>\n        </Tooltip>\n      ) : (\n        <div className={s.status}>\n          <i>{status}</i>\n        </div>\n      )}\n    </>\n  )),\n}\n\nexport default memo(User)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"Users_visuallyHidden__1Hqf2\",\"elementInteractive\":\"Users_elementInteractive__1wNUn\",\"container\":\"Users_container__2qzjv\",\"wrapUsers\":\"Users_wrapUsers__3HYNC\",\"buttonLoadMore\":\"Users_buttonLoadMore__30Hx-\",\"hiddenButtonLoadMore\":\"Users_hiddenButtonLoadMore__1dofL\",\"users\":\"Users_users__231_B\"};","import {\n  useEffect,\n  useState,\n  PropsWithChildren,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport { useHistory } from 'react-router-dom'\nimport queryString from 'query-string'\n\ntype HookType = (\n  props: PropsWithChildren<{ pathname: string }>\n) => [string, Dispatch<SetStateAction<string>>]\n\nconst useQueryUrl: HookType = ({ pathname }) => {\n  const history = useHistory()\n  const [termOfUrl, setTermOfUrl] = useState('')\n\n  // get from URL term, if present\n  useEffect(() => {\n    const parsed = queryString.parse(history.location.search.substr(1)) as {\n      term: string\n    } // substr(1) = delete ? at the beginning\n\n    if (parsed.term) {\n      setTermOfUrl(parsed.term)\n    }\n  }, [history.location.search, pathname, setTermOfUrl])\n\n  // push entered from search into URL\n  useEffect(() => {\n    history.replace({\n      pathname,\n      search: termOfUrl ? `?term=${termOfUrl}` : '',\n    })\n  }, [termOfUrl, history, pathname])\n\n  return [termOfUrl, setTermOfUrl]\n}\n\nexport default useQueryUrl\n","import React, { useState, useEffect, useCallback, memo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport IconButton from '@mui/material/IconButton'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport s from './Users.module.scss'\n\nimport User from '../../components/User/User'\nimport Search from '../../components/Search/Search'\nimport Prompt from '../../components/Prompt/Prompt'\nimport NoElement from '../../components/NoElement/NoElement'\nimport useQueryUrl from '../../services/hooks/useQueryUrl'\nimport useObserver from '../../services/hooks/useObserver'\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/useApp'\n\nimport {\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsersSelector,\n} from '../../store/selectors/users-selectors'\nimport { getUsers } from '../../store/reducers/users-reducer'\n\nimport { UserType } from '../../types/types'\n\nconst Users: React.FC = () => {\n  const pageSize = useAppSelector(getPageSize)\n  const users = useAppSelector(getUsersSelector)\n  const isFetching = useAppSelector(getIsFetching)\n  const totalUsersCount = useAppSelector(getTotalUsersCount)\n\n  const dispatch = useAppDispatch()\n  const { pathname } = useLocation()\n  const [termOfUrl, setTermOfUrl] = useQueryUrl({ pathname })\n\n  // eslint-disable-next-line prefer-const\n  let [pageNumber, setPageNumber] = useState(1)\n  const [isShowMoreUsersButton, setIsShowMoreUsersButton] = useState(true)\n\n  const maxPageCount = Math.ceil(totalUsersCount / pageSize)\n\n  // for Search\n  const searchUsers = useCallback(\n    (term: string) => {\n      setPageNumber(1)\n      setTermOfUrl(term)\n      dispatch(getUsers({ page: 1, term }))\n\n      if (maxPageCount === pageNumber) {\n        setIsShowMoreUsersButton(false)\n      }\n      if (maxPageCount > pageNumber) {\n        setIsShowMoreUsersButton(true)\n      }\n    },\n    [dispatch, maxPageCount, pageNumber, setTermOfUrl]\n  )\n\n  useEffect(() => {\n    if (totalUsersCount > pageSize) {\n      setIsShowMoreUsersButton(true)\n    } else {\n      setIsShowMoreUsersButton(false)\n    }\n  }, [maxPageCount, totalUsersCount, pageSize])\n\n  useEffect(() => {\n    dispatch(getUsers({ page: 1, term: termOfUrl }))\n  }, [termOfUrl, pathname, dispatch])\n\n  const handleShowMoreUsers = useCallback(() => {\n    if (maxPageCount > pageNumber) {\n      setPageNumber(++pageNumber)\n      dispatch(getUsers({ page: pageNumber, term: termOfUrl }))\n    }\n    if (maxPageCount === pageNumber) {\n      setIsShowMoreUsersButton(false)\n    }\n  }, [dispatch, maxPageCount, pageNumber, termOfUrl])\n\n  // removing a prompt\n  const [isShowPrompt, setIsShowPrompt] = useState(true)\n  const lastElement = React.useRef<HTMLDivElement>(null)\n\n  useObserver({\n    elementTrigger: lastElement,\n    isCanLoad: pageNumber === 1,\n    isFetching,\n    callback: () => setIsShowPrompt(false),\n  })\n\n  return (\n    <main className={s.container}>\n      <h1 className={s.visuallyHidden}>Users</h1>\n      {pageNumber === 1 && !isFetching && isShowPrompt && (\n        <Prompt.PaginationUsers pathname={pathname} />\n      )}\n\n      <Search\n        pathname={pathname}\n        termOfUrl={termOfUrl}\n        isFetching={isFetching}\n        searchUsers={searchUsers}\n        totalUsersCount={totalUsersCount}\n      />\n\n      {totalUsersCount === 0 && !isFetching && <NoElement elements='users' />}\n\n      <div className={s.wrapUsers}>\n        <div className={s.users}>\n          {users.map((u: UserType) => (\n            <User\n              key={u.id}\n              user={{\n                id: u.id,\n                name: u.name,\n                status: u.status,\n                followed: u.followed,\n                photos: u.photos,\n              }}\n            />\n          ))}\n        </div>\n\n        <div\n          ref={lastElement}\n          className={cn(s.buttonLoadMore, {\n            [s.hiddenButtonLoadMore]: !isShowMoreUsersButton,\n          })}\n        >\n          <IconButton\n            title='Load more users'\n            onClick={handleShowMoreUsers}\n            size='large'\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default memo(Users)\n","import React from 'react'\n\nimport Users from './Users'\nimport Preloader from '../../components/Preloader/Preloader'\nimport { useAppSelector } from '../../services/hooks/useApp'\nimport withAuthRedirect from '../../services/hoc/withAuthRedirect'\n\nimport { getIsFetching } from '../../store/selectors/users-selectors'\n\nconst UsersContainer = () => {\n  const isFetching = useAppSelector(getIsFetching)\n\n  return (\n    <>\n      {isFetching ? <Preloader /> : null}\n      <Users />\n    </>\n  )\n}\n\nexport default withAuthRedirect(UsersContainer)\n"],"sourceRoot":""}