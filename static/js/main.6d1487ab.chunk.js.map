{"version":3,"sources":["components/Profile/Wall/Wall.module.css","components/hoc/withAuthRedirect.js","redux/messages-reducer.js","img/no_photo.png","utils/objects-helpers.js","redux/users-reducer.js","components/Profile/Wall/Post/Post.module.css","components/Profile/ProfileInfo/ProfileData.module.css","components/Profile/ProfileInfo/ProfileDataForm.module.css","api/api.js","redux/auth-reducer.js","redux/profile-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/hoc/withSuspense.js","img/icons/logo.svg","img/icons/logout.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","img/avatar_2.jpg","components/Profile/Wall/Post/Post.jsx","components/Profile/Wall/Wall.jsx","components/Profile/Wall/WallContainer.jsx","components/common/ElementCustom/InputCustom.jsx","components/common/inputCount/inputCount.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/common/ElementCustom/renderTextField.js","components/common/ElementCustom/renderCheckbox.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","img/icons/camera.svg","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/GlobalError/GlobalError.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfoContainer.module.css","components/Navbar/Navbar.module.css","components/Login/Login.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.module.css","img/preloader.svg","components/common/Preloader/Preloader.jsx","App.module.css"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessage","newMessageBody","type","messagesReducer","action","updateObjectInArray","items","itemID","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsersThunk","page","dispatch","usersAPI","getUsers","then","data","totalCount","count","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","follow","followUser","bind","unfollow","unfollowUser","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaURLAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaURL","setAuthUserData","payload","getCaptchaURLAC","getAuthUserDataThunk","logoutThunk","authReducer","ADD_POST","SET_USER","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","SHOW_SUCCESS_SAVE","SHOW_ERROR_PROFILE_CONTACTS","posts","likesCount","showSuccessSave","errorProfileContacts","setStatus","savePhotoSuccessAC","photos","showSuccessSaveProfile","showErrorProfileContacts","getUserProfile","userId","profileReducer","newPost","newPostText","p","postID","photo","INITIALIZED_SUCCESS","SHOW_GLOBAL_ERROR","initialized","globalError","appReducer","reason","reducers","combineReducers","profilePage","messagesPage","usersPage","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","Preloader","Header","className","s","header","logoAndTitle","src","logo","alt","headerTitle","loginName","buttonDesctop","Button","onClick","variant","style","margin","startIcon","buttonMobile","HeaderContainer","render","withRouter","nav","activeClassName","active","navLink","xmlns","version","width","height","fill","location","pathname","navLinkImg","viewBox","d","Post","pageWall__newPost","avatar","PostReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","Wall","postsElements","pageWall","pageWall__title","values","addPost","useStyles","makeStyles","theme","inputProfileStatus","paddingLeft","spacing","paddingRight","backgroundColor","borderRadius","handleFocusCount","e","target","select","document","getElementById","textContent","value","length","elem","display","fontSize","position","right","top","handleBlurCount","handleInputCount","num","wrap","color","ProfileStatusWithHooks","classes","useState","editMode","setEditMode","useEffect","wrapper","Input","onInput","autoFocus","inputProps","maxLength","multiline","rowsMax","onFocus","onBlur","fullWidth","onChange","currentTarget","buttons","buttonWrap","statusEmpty","renderTextField","label","input","meta","touched","error","warning","custom","TextField","renderCheckbox","FormControlLabel","control","Checkbox","checked","labelPlacement","marginLeft","initialValues","titleForm","cn","wrapForCount","countStyle","titleAllContacts","Object","keys","contacts","key","titleContact","Contact","contactTitle","contactValue","contact","contactText","href","ProfileData","containerForm","aboutMe","title","text","job","lookingForAJob","lookingForAJobDescription","ScrollToTopOnMount","scrollTo","ProfileInfoContainer","containerMain","columnLeft","avatarWrap","large","unknown","isOwner","camera","htmlFor","wrapImg","editPhotoInput","files","savePhotoThunk","marginTop","buttonsSaveAndCancelProfile","submit","successSave","columnRight","fullName","saveProfileThunk","ProfileContainer","match","params","authorizedUserID","history","push","refreshProfile","prevProps","WallContainer","PureComponent","getState","setTimeout","LoginReduxForm","validate","errors","forEach","field","test","row","rowCheckbox","fontWeight","formError","loginThunk","stopSubmit","_error","url","body","GlobalError","DialogsContainer","lazy","UsersContainer","App","initializeAppThunk","addEventListener","event","showGlobalErrorThunk","once","passive","fon","container","appWrapper","appWrapperContent","path","from","exact","AppContainer","Promise","all","showGlobalErrorAC","createMuiTheme","palette","primary","main","cyan","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","preloader"],"mappings":"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","file":"static/js/main.6d1487ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWall\":\"Wall_pageWall__1-MWp\",\"pageWall__title\":\"Wall_pageWall__title__2QIQW\"};","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  \r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect;","// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: '1', name: 'Denis' },\r\n    { id: '2', name: 'Andrey' },\r\n    { id: '3', name: 'Alexandr' },\r\n    { id: '4', name: 'Alisa' },\r\n  ],\r\n\r\n  messages: [\r\n    { id: '1', message: 'Hi!' },\r\n    { id: '2', message: 'lalalalalalala' },\r\n    { id: '3', message: 'How are you?' },\r\n  ],\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n  // копируем только то, что планируем изменять; внутренние объекты массива (с id которые) мы менять не планируем, поэтому их копию и не делаем\r\n  // stateCopy = 'копия state' или copy of state\r\n\r\n  switch (action.type) {\r\n    // case UPDATE_NEW_MESSAGE_BODY:\r\n    //   return {\r\n    //     ...state,\r\n    //     newMessageBody: action.body\r\n    //   };\r\n\r\n    case SEND_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [\r\n          ...state.messages, \r\n          { id: '6', \r\n          message: action.newMessageBody }\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// updateNewMessageBody (читается: обновить ТЕЛО нового сообщения) то же самое, что и \"body of new message\"\r\n// больше его не надо, т.к. за состояние сообщения теперь отвечает библиотека redux-form\r\n// export const updateNewMessageBody = (symbol) => ({\r\n//   type: UPDATE_NEW_MESSAGE_BODY,\r\n//   body: symbol\r\n// });\r\nexport const sendMessage = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default messagesReducer;","export default __webpack_public_path__ + \"static/media/no_photo.aa2f7ace.png\";","export const updateObjectInArray = (items, itemID, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemID) {\r\n      return { ...u, ...newObjProps }\r\n    }\r\n    return u\r\n  })\r\n}","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/objects-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 50,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true, // Preloader - крутилка во время ожидания ответа от сервера. is - это означает вопрос: получен? Вообще смотреть на последнее слово, оно ообозначает то, что находится в значении\r\n  followingInProgress: [], // disabled button после нажатия\r\n};\r\n\r\n// здесь в зависимости от type в action который к нас пришел мы возвращаем новый объект на основе старого state (копируем) и вносит свои изменения (перезаписываем одно из свойств)\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(\r\n          state.users, action.userID, 'id', { followed: true }),\r\n        // users: state.users.map(u => {\r\n        //   if (u.id === action.userID) {\r\n        //     return { ...u, followed: true }\r\n        //   }\r\n        //   return u\r\n        // })\r\n      }\r\n    }\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(\r\n          state.users, action.userID, 'id', { followed: false }),\r\n\r\n        // users: state.users.map(u => {\r\n        //   if (u.id === action.userID) {\r\n        //     return { ...u, followed: false }\r\n        //   }\r\n        //   return u\r\n        // })\r\n      }\r\n    }\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      }\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      }\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        // делаем блокировку только одной кнопки подписки пока идёт запрос и возвращается ответ с сервера, а не всех\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userID]\r\n          : state.followingInProgress.filter(id => id !== action.userID), // filter вернёт новый массив, поэтому копию не нужно делать\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// это action creators = call backs, которые dispatch-ит connect (сам за кадром) и они возвращают action (объекты), который сам redux берёт и отправляет в соответствующий reducer, и после определяется совпадающий case, делается копия state, они сравниваются и отличия перерисовывается (ререндериваються) - перерисовывается UI\r\nconst followSuccess = (userID) => ({ type: FOLLOW, userID });\r\nconst unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID });\r\n\r\n// получить всех пользователей\r\nconst setUsers = (users) => ({ type: SET_USERS, users: users });\r\n// установить текущую страницу, на которую кликаем\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage }); // или currentPage просто\r\n// установить общее кол-во пользователей\r\nconst setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nconst toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userID) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID });\r\n\r\n\r\n\r\n\r\n// создатель \"санки\"\r\nexport const getUsersThunk = (page, pageSize) => {\r\n  // возвращаем \"санку\", замкнув параметр выше\r\n  return (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.getUsers(page, pageSize).then(data => {\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n      dispatch(toggleIsFetching(false));\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, id));\r\n\r\n  const response = await apiMethod(id);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(id))\r\n  }\r\n\r\n  dispatch(toggleFollowingProgress(false, id));\r\n}\r\n\r\nexport const follow = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, \r\n      usersAPI.followUser.bind(usersAPI), followSuccess)\r\n  }\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, \r\n      usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWall__newPost\":\"Post_pageWall__newPost__3K832\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ProfileData_containerForm__3mx3W\",\"wrap\":\"ProfileData_wrap__rre8b\",\"aboutMe\":\"ProfileData_aboutMe__1097U\",\"job\":\"ProfileData_job__1RlV3\",\"contacts\":\"ProfileData_contacts__2wvAD\",\"title\":\"ProfileData_title__11R4l\",\"text\":\"ProfileData_text__3mDxR\",\"contact\":\"ProfileData_contact__3Nuyc\",\"contactTitle\":\"ProfileData_contactTitle__4K4s9\",\"contactText\":\"ProfileData_contactText__2FsvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__2KAks\",\"titleForm\":\"ProfileDataForm_titleForm__3DwgM\",\"wrap\":\"ProfileDataForm_wrap__3IHGJ\",\"contacts\":\"ProfileDataForm_contacts__2R49s\",\"titleAllContacts\":\"ProfileDataForm_titleAllContacts__3Zqbl\",\"titleContact\":\"ProfileDataForm_titleContact__3KXe1\",\"countStyle\":\"ProfileDataForm_countStyle__seWzX\",\"wrapForCount\":\"ProfileDataForm_wrapForCount__3lFuS\",\"errorProfileContacts\":\"ProfileDataForm_errorProfileContacts__1WMOk\"};","// Слой (Layer) доступа к данным (Data Access Layer — DAL), он занимается типом запроса, url и такое всё - это его ответсвенность. Находится между BLL и сервером. UI общается только с BLL, BLL с DAL, DAL с сервером\r\nimport * as axios from 'axios';\r\n\r\n\r\n// создание отдельного экземпляра axios для работы с конкретной айпишкой, конкретной версией, на разных серверах + уход от повторения некоторых данных\r\nconst instance = axios.create({\r\n  withCredentials: true, // цепляем куку при запросе с локального хоста на домен соц. сети, чтобы сказать, что мы это мы, что мы зарегались уже на домене соц. сети, пустите нас :)\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '9fe42175-1733-4793-9c3f-72022637a8a0' // ключ доступа нужен всем запросам кроме get\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => response.data)\r\n  },\r\n\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`, {})\r\n  },\r\n\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`)\r\n  },\r\n\r\n  getProfile(id) {\r\n    console.warn('Obsolete method. Please, use profileAPI object.')\r\n    return profileAPI.getProfile(id)\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n  getProfile(id) {\r\n    return instance.get(`profile/${id}`)\r\n  },\r\n  getStatus(id) {\r\n    return instance.get(`profile/status/${id}`)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status })\r\n  },\r\n  savePhotoAPI(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    \r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  },\r\n  saveProfileAPI(profile) {\r\n    return instance.put(`profile`, profile)\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance.post('/auth/login', { email, password, rememberMe, captcha })\r\n  },\r\n  logout() {\r\n    return instance.delete('/auth/login')\r\n  }\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaURLAPI() {\r\n    return instance.get(`security/get-captcha-url`)\r\n  },\r\n};","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n  userID: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaURL: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setAuthUserData = (userID, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userID, email, login, isAuth }\r\n});\r\nconst getCaptchaURLAC = (captchaURL) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS,\r\n  payload: { captchaURL }\r\n});\r\n\r\nexport const getAuthUserDataThunk = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nconst getCaptchaURLThunk = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaURLAPI();\r\n  const captcha = response.data.url;\r\n  dispatch(getCaptchaURLAC(captcha))\r\n}\r\n\r\nexport const loginThunk = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserDataThunk())\r\n    dispatch(getCaptchaURLAC(null))\r\n  }\r\n\r\n  if (response.data.resultCode === 1) {\r\n    const message = response.data.messages;\r\n    const action = stopSubmit('loginForm', {\r\n      _error: message.length > 0 ? message[0] : 'Some error'\r\n    });\r\n    // Some error - на всякий случай, если с сервера придёт пустое сообщение при ошибке\r\n    dispatch(action);\r\n  }\r\n\r\n  if (response.data.resultCode === 10) {\r\n    dispatch(getCaptchaURLThunk())\r\n  }\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n  const response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { usersAPI, profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER = 'SET-USER';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst SHOW_SUCCESS_SAVE = 'SHOW_SUCCESS_SAVE';\r\nconst SHOW_ERROR_PROFILE_CONTACTS = 'SHOW_ERROR_PROFILE_CONTACTS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: '1', message: 'Стена Привет!', likesCount: 12 },\r\n    { id: '2', message: 'Стена Как дела?', likesCount: 4 },\r\n  ],\r\n\r\n  profile: null,\r\n  status: '',\r\n  showSuccessSave: '',\r\n  errorProfileContacts: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [\r\n          ...state.posts,\r\n          newPost\r\n        ],\r\n      }\r\n    }\r\n    case SET_USER: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postID)\r\n      }\r\n    }\r\n    case SAVE_PHOTO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photo: action.photo }\r\n      }\r\n    }\r\n    case SHOW_SUCCESS_SAVE: {\r\n      return {\r\n        ...state,\r\n        showSuccessSave: action.message,\r\n      }\r\n    }\r\n    case SHOW_ERROR_PROFILE_CONTACTS: {\r\n      return {\r\n        ...state,\r\n        errorProfileContacts: action.message,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (postID) => ({ type: DELETE_POST, postID });\r\n\r\nconst setUserProfile = (profile) => ({ type: SET_USER, profile });\r\nconst setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nconst savePhotoSuccessAC = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\nconst showSuccessSaveProfile = (message) => ({ type: SHOW_SUCCESS_SAVE, message });\r\nconst showErrorProfileContacts = (message) => ({ type: SHOW_ERROR_PROFILE_CONTACTS, message });\r\n\r\nexport const getUserProfile = (userId) => {\r\n  return (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n      .then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n      });\r\n  }\r\n};\r\n\r\nexport const getStatus = (id) => {\r\n  return (dispatch) => {\r\n    profileAPI.getStatus(id)\r\n      .then(response => {\r\n        dispatch(setStatus(response.data));\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport const savePhotoThunk = (photos) => async (dispatch) => {\r\n  const response = await profileAPI.savePhotoAPI(photos);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccessAC(response.data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfileThunk = (formData) => async (dispatch, getState) => {\r\n  let response = await profileAPI.saveProfileAPI(formData);\r\n  const userID = getState().auth.userID;\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userID));\r\n    dispatch(showSuccessSaveProfile('Data saved successfully!'));\r\n    setTimeout(dispatch, 4000, showSuccessSaveProfile(''));\r\n    dispatch(showErrorProfileContacts(''));\r\n  }\r\n  \r\n  if (response.data.resultCode === 1) {\r\n    // заготовка для показа ошибки конкретного поля\r\n    // let key = response.data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\r\n    // dispatch(stopSubmit('editProfile', {\r\n    //   contacts: { [key]: response.data.messages[0] },\r\n    // }));\r\n    dispatch(showErrorProfileContacts(response.data.messages[0]))\r\n  }\r\n};\r\n\r\nexport default profileReducer;","import { getAuthUserDataThunk } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nconst SHOW_GLOBAL_ERROR = 'SHOW_GLOBAL_ERROR';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n  globalError: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    }\r\n    case SHOW_GLOBAL_ERROR: {\r\n      return {\r\n        ...state,\r\n        globalError: action.reason,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\nconst showGlobalErrorAC = (reason) => ({ type: SHOW_GLOBAL_ERROR, reason });\r\n\r\nexport const initializeAppThunk = () => (dispatch) => {\r\n  Promise.all([\r\n    dispatch(getAuthUserDataThunk()),\r\n    // ...\r\n  ]).then(() => {\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\nexport const showGlobalErrorThunk = (reason) => (dispatch) => {\r\n  dispatch(showGlobalErrorAC(reason))\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore, compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport authReducer from './auth-reducer';\r\nimport messagesReducer from './messages-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n\r\n","import React, { Suspense } from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return <Suspense fallback={<Preloader />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/logo.cebb0f3e.svg\";","export default __webpack_public_path__ + \"static/media/logout.8e3cc1f3.svg\";","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../img/icons/logo.svg';\r\nimport logout from '../../img/icons/logout.svg';\r\nimport s from './Header.module.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <NavLink className={s.logoAndTitle} to={'/profile'}>\r\n        <img src={logo} alt='logo' />\r\n        <span className={s.headerTitle}>Social network</span>\r\n      </NavLink>\r\n\r\n      <div className={s.login}>\r\n        {props.isAuth\r\n          ? <>\r\n            <span className={s.loginName}>{props.login}</span>\r\n            <span className={s.buttonDesctop}>\r\n              <Button\r\n                onClick={props.logoutThunk}\r\n                variant=\"outlined\"\r\n                style={{ margin: 16 }}\r\n                startIcon={<ExitToAppIcon />}>\r\n                Log out\r\n              </Button>\r\n            </span>\r\n            <span className={s.buttonMobile}>\r\n              <Button\r\n                onClick={props.logoutThunk}\r\n                variant=\"outlined\"\r\n                style={{ margin: 16 }}\r\n              ><img src={logout} alt=\"logout\" />\r\n              </Button>\r\n            </span>\r\n          </>\r\n          : <Redirect to=\"/login\" />\r\n        }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logoutThunk } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render = () => <Header {...this.props} />\r\n}\r\n\r\n// это то, что придёт в контейнерную компоненту HeaderContainer, она прокинет через пропсы в функциональную компоненту Header, которая достанет их из пропсов и использует как-то\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n};\r\nexport default connect(mapStateToProps, {\r\n  logoutThunk\r\n})(HeaderContainer);","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n\r\n  return (\r\n    <nav className={s.nav} id='navbar'>\r\n      <NavLink to=\"/profile\" activeClassName={s.active} className={s.navLink}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\"\r\n          fill={props.location.pathname === '/profile' ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}\r\n          viewBox=\"0 0 24 24\"><path d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\r\n        </svg>\r\n        Profile\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/dialogs\" activeClassName={s.active} className={s.navLink}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\"\r\n          fill={props.location.pathname === '/dialogs' ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}\r\n          viewBox=\"0 0 24 24\"><path d=\"M20,2H4A2,2 0 0,0 2,4V22L6,18H20A2,2 0 0,0 22,16V4C22,2.89 21.1,2 20,2Z\" />\r\n        </svg>\r\n        Messages\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/users\" activeClassName={s.active} className={s.navLink}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\"\r\n          fill={props.location.pathname === '/users' ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}\r\n          viewBox=\"0 0 24 24\"><path d=\"M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z\" />\r\n        </svg>\r\n        Find Users\r\n      </NavLink>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default withRouter(Navbar);","export default __webpack_public_path__ + \"static/media/avatar_2.e0878a2c.jpg\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport avatar from '../../../../img/avatar_2.jpg';\r\n\r\nconst Post = (props) => {\r\n  return(\r\n\r\n    <div className={s.pageWall__newPost}>\r\n      <img src={avatar} alt=\"avatar\"/>\r\n      {props.message}\r\n      {props.likesCount} <button>like</button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './Wall.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n// import { maxLengthCreator } from '../../../utils/validators/validators';\r\n// import { Element } from '../../common/FormsControls/FormsControls';\r\n\r\nconst Wall = (props) => {\r\n\r\n  let postsElements = props.posts.map(p =>\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let handleAddPost = (values) => {\r\n    // values - введённые данные в форме (name='newPostText' см. у Field)\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.pageWall}>\r\n      <span className={s.pageWall__title}>Стена</span>\r\n      <PostReduxForm onSubmit={handleAddPost} />\r\n      {postsElements}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n// const maxLength30 = maxLengthCreator(30);\r\n// const Textarea = Element(\"textarea\");\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name='newPostText'\r\n        component=\"textarea\"\r\n        // validate={[maxLength30]}\r\n        placeholder='Write post...'\r\n      />\r\n      <button>Добавить пост</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ form: 'profileNewPostForm' })(AddNewPostForm);\r\n\r\nexport default Wall;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport Wall from './Wall';\r\n\r\n// class WallContainer extends React.Component {\r\n\r\n  // componentDidMount() {\r\n    // this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n  // }\r\n\r\n  // пишем через стрелочную функцию, чтобы сохранить контекст вызова, чтобы не использовать bind\r\n  // onPageChanged = (pageNumber) => {\r\n  //   this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n  //   this.props.setCurrentPage(pageNumber);\r\n  // }\r\n\r\n//   render() {\r\n//     return <>\r\n//       {this.props.isFetching ? <Preloader /> : null}\r\n\r\n//       <Wall\r\n//         totalUsersCount={this.props.totalUsersCount}\r\n//         pageSize={this.props.pageSize}\r\n//         currentPage={this.props.currentPage}\r\n//         onPageChanged={this.onPageChanged}\r\n//         users={this.props.users}\r\n\r\n//         follow={this.props.follow}\r\n//         unfollow={this.props.unfollow}\r\n//         followingInProgress={this.props.followingInProgress}\r\n//       />\r\n//     </>\r\n//   }\r\n// }\r\n\r\n\r\n// эта функция запускается при каждом изменнеии, создается новый объект и затем сравнивается со старым объектом. если бы мы не делали копию объекта в reducer, то ничего бы не перерисовывалось\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n};\r\n\r\n// перерисовка происходит после обнаружения, что появился новый объект. А он создастся после изменений, т.к. мы придерживаемся иммутабельности и старые объекты не меняем\r\nexport default connect(mapStateToProps, {\r\n  addPost\r\n})(Wall);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputProfileStatus: {\r\n    height: '60px',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    backgroundColor: '#4F4F4F', \r\n    borderRadius: '3px 3px 3px 0',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","// Памятка:\r\n//1. import { handleInputCount, handleFocusCount, handleBlurCount} from '../../../common/inputCount/inputCount';\r\n//2. Передать в input: \r\n      // name='...'\r\n      // onInput={handleInputCount.bind(null, num100)}\r\n      // onFocus={handleFocusCount}\r\n      // onBlur={handleBlurCount}\r\n//3. Добавить в компоненту: \r\n      //const num100 = 100;\r\n//4. Добавить в компоненту: \r\n      // <span id='statusWrapCount' className={s.countStyle}><span id='statusCount'></span> of 100</span>\r\n//5. Задать родителю span-a: \r\n      // position: relative;\r\n//6. Если нужно, чтобы не был виден счётчик при первом отображении input, применить:\r\n      // .countStyle {display: none;}\r\n\r\nexport const handleFocusCount = (e) => {\r\n  e.target.select();\r\n\r\n  document.getElementById(e.target.name + 'Count').textContent = e.target.value.length;\r\n\r\n  const elem = document.getElementById(e.target.name + 'WrapCount');\r\n  elem.style.display = 'inline-block';\r\n  elem.style.fontSize = '10px';\r\n  elem.style.position = 'absolute';\r\n  elem.style.right = '10px';\r\n  elem.style.top = 0;\r\n}\r\n\r\nexport const handleBlurCount = (e) => {\r\n  document.getElementById(e.target.name + 'WrapCount').style.display = 'none';\r\n}\r\n\r\nexport const handleInputCount = (num, e) => {\r\n  const wrap = e.target.name + 'WrapCount';\r\n  const count = e.target.name + 'Count';\r\n  const length = e.target.value.length;\r\n\r\n  if (length < num - 10) document.getElementById(wrap).style.color = 'white';\r\n  if (length >= num - 10) document.getElementById(wrap).style.color = 'yellow';\r\n  if (length === num) document.getElementById(wrap).style.color = 'red';\r\n\r\n  document.getElementById(count).textContent = e.target.value.length\r\n}","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileStatusWithHooks.module.css';\r\n\r\nimport { Input, Button } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport useStyles from '../../../common/ElementCustom/InputCustom';\r\nimport { handleInputCount, handleFocusCount, handleBlurCount } from '../../../common/inputCount/inputCount';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => setEditMode(true);\r\n  const onStatusChange = (e) => setStatus(e.currentTarget.value);\r\n  const cancelEditMode = () => setEditMode(false);\r\n\r\n  const saveStatus = () => {\r\n    props.updateStatus(status);\r\n    setEditMode(false);\r\n  }\r\n\r\n  const num300 = 300;\r\n\r\n  return <div className={s.wrapper}>\r\n    {editMode\r\n      ? <>\r\n        <Input\r\n          name='status'\r\n          onInput={handleInputCount.bind(null, num300)}\r\n          autoFocus\r\n          inputProps={{ maxLength: 300 }}\r\n          className={classes.inputProfileStatus}\r\n          multiline={true}\r\n          rowsMax='2'\r\n          onFocus={handleFocusCount}\r\n          onBlur={handleBlurCount}\r\n          fullWidth={true}\r\n          onChange={onStatusChange}\r\n          placeholder={'Your status...'}\r\n          value={status} />\r\n\r\n        <div className={s.buttons}>\r\n          <div className={s.buttonWrap}>\r\n            <Button\r\n              onClick={saveStatus}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ color: '#fff', margin: 10, width: '100%' }}\r\n              startIcon={<SaveIcon />}\r\n            >Save</Button>\r\n          </div>\r\n          <div className={s.buttonWrap}>\r\n            <Button\r\n              onClick={cancelEditMode}\r\n              variant=\"outlined\"\r\n              style={{ margin: 10, width: '100%' }}\r\n              startIcon={<CloseIcon />}\r\n            >Cancel</Button>\r\n          </div>\r\n\r\n          <span id='statusWrapCount'>\r\n            <span id='statusCount'></span> of 300\r\n          </span>\r\n        </div>\r\n      </>\r\n\r\n      : <div className={s.status} onClick={activateEditMode}>\r\n        {props.status ||\r\n          <span className={s.statusEmpty}>\r\n            Your status is empty\r\n          </span>\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import { TextField } from '@material-ui/core';\r\n\r\nconst renderTextField = (props) => {\r\n  const { label, input, placeholder, multiline, variant, inputProps, onInput, onFocus, meta: { touched, error, warning }, fullWidth, ...custom } = props;\r\n\r\n  return <>\r\n    <TextField\r\n      label={label}\r\n      placeholder={placeholder}\r\n      inputProps={inputProps}\r\n      onInput={onInput}\r\n      onFocus={onFocus}\r\n      variant={variant}\r\n      multiline={multiline}\r\n      fullWidth={fullWidth}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n    {\r\n      touched && (\r\n        (error &&\r\n          <span style={{ color: 'red' }}>{error}</span>)\r\n        || (warning && <span>{warning}</span>)\r\n      )\r\n    }\r\n  </>\r\n}\r\n\r\nexport default renderTextField;","import { FormControlLabel, Checkbox } from '@material-ui/core';\r\n\r\nconst renderCheckbox = ({ input, label }) => {\r\n  return <div>\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={input.value ? true : false}\r\n          onChange={input.onChange}\r\n        />}\r\n      label={label}\r\n      labelPlacement=\"start\"\r\n      style={{ marginLeft: 0 }}\r\n    />\r\n  </div>\r\n}\r\n\r\nexport default renderCheckbox;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport renderTextField from '../../common/ElementCustom/renderTextField';\r\nimport renderCheckbox from '../../common/ElementCustom/renderCheckbox';\r\nimport s from './ProfileDataForm.module.css';\r\nimport cn from 'classnames';\r\n\r\nimport { handleInputCount, handleFocusCount, handleBlurCount } from '../../common/inputCount/inputCount';\r\n\r\nconst ProfileDataForm = (props) => {\r\n  const { handleSubmit, initialValues, ...custom } = props;\r\n\r\n  const num100 = 100;\r\n  const num1000 = 1000;\r\n\r\n  return <form onSubmit={handleSubmit} className={s.form}>\r\n\r\n    <h1 className={s.titleForm}>Edit profile</h1>\r\n\r\n    <div className={cn(s.wrap, s.wrapForCount)}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='fullName'\r\n        label='Name:'\r\n        placeholder='Your name'\r\n        variant=\"filled\"\r\n        fullWidth={true}\r\n        inputProps={{ maxLength: 100 }}\r\n        onInput={handleInputCount.bind(null, num100)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n      />\r\n      <span id='fullNameWrapCount' className={s.countStyle}>\r\n        <span id='fullNameCount'></span> of 100\r\n      </span>\r\n    </div>\r\n\r\n    <div className={cn(s.wrap, s.wrapForCount)}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='aboutMe'\r\n        label='About me:'\r\n        placeholder='Write about yourself!'\r\n        multiline={true}\r\n        fullWidth={true}\r\n        variant=\"filled\"\r\n        inputProps={{ maxLength: 1000 }}\r\n        onInput={handleInputCount.bind(null, num1000)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n      />\r\n      <span id='aboutMeWrapCount' className={s.countStyle}>\r\n        <span id='aboutMeCount'></span> of 1000\r\n      </span>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <Field\r\n        component={renderCheckbox}\r\n        name='lookingForAJob'\r\n        label='Are you looking for a job?'\r\n      />\r\n    </div>\r\n\r\n    <div className={cn(s.wrap, s.wrapForCount)}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='lookingForAJobDescription'\r\n        label='Professional skills:'\r\n        placeholder='What you can do?'\r\n        multiline={true}\r\n        fullWidth={true}\r\n        variant=\"filled\"\r\n        inputProps={{ maxLength: 1000 }}\r\n        onInput={handleInputCount.bind(null, num1000)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n      />\r\n      <span id='lookingForAJobDescriptionWrapCount' className={s.countStyle}>\r\n        <span id='lookingForAJobDescriptionCount'></span> of 1000\r\n      </span>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.titleAllContacts}>Contacts:</div>\r\n\r\n      <div className={s.errorProfileContacts}>\r\n        {custom.errorProfileContacts}\r\n      </div>\r\n\r\n      {Object.keys(initialValues.contacts).map(key => {\r\n        return <div className={s.contacts} key={key}>\r\n          <div className={s.titleContact}>{key}:</div>\r\n          <Field\r\n            component={renderTextField}\r\n            name={'contacts.' + key}\r\n          />\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'editProfile',\r\n})(ProfileDataForm);\r\n","import React from 'react';\r\nimport s from './ProfileData.module.css';\r\n\r\nconst ProfileData = ({ profile }) => {\r\n  return <div className={s.containerForm}>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.aboutMe}>\r\n        <div className={s.title}>About me:</div>\r\n        <div className={s.text}>{profile.aboutMe}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.job}>\r\n        <div className={s.title}>Job search:</div>\r\n        {profile.lookingForAJob\r\n          ? <div className={s.text}>Now looking for a job!</div>\r\n          : <div className={s.text}>I'm not looking for a job</div>}\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.job}>\r\n        <div className={s.title}>Professional skills:</div>\r\n        <div className={s.text}>{profile.lookingForAJobDescription}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.contacts}>\r\n        <div className={s.title}>My contacts</div>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <Contact\r\n            key={key}\r\n            contactTitle={key}\r\n            contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  </div >\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (<>\r\n    {contactValue\r\n      && <div className={s.contact}>\r\n        <span className={s.contactTitle}>{contactTitle}:</span>\r\n        <a className={s.contactText} href={contactValue}>{contactValue}</a>\r\n      </div>}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProfileData;","export default __webpack_public_path__ + \"static/media/camera.12909c41.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { submit } from 'redux-form';\r\n\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileData from './ProfileData';\r\n\r\nimport camera from '../../../img/icons/camera.svg';\r\nimport unknown from '../../../img/no_photo.png';\r\nimport s from './ProfileInfoContainer.module.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// при переходе на старницу профиля скрол обнулится\r\nfunction ScrollToTopOnMount() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return null;\r\n}\r\n\r\nconst ProfileInfo = ({ dispatch, ...props }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhotoThunk(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.containerMain}>\r\n\r\n      {/* при переходе на старницу профиля скрол обнулится */}\r\n      <ScrollToTopOnMount />\r\n\r\n      <div className={s.columnLeft}>\r\n        <div className={s.avatarWrap}>\r\n          <div className={s.avatar}>\r\n            <img src={props.profile.photos.large || unknown} alt=\"avatar\" />\r\n            {props.isOwner && !editMode &&\r\n              <div className={s.camera}>\r\n                <label htmlFor=\"file_out\">\r\n                  <div className={s.wrapImg}>\r\n                    <img src={camera} alt=\"icon\" />\r\n                  </div>\r\n                </label>\r\n                <input\r\n                  id=\"file_out\"\r\n                  className={s.editPhotoInput}\r\n                  type=\"file\"\r\n                  onChange={onMainPhotoSelected} />\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        {props.isOwner && !editMode\r\n          && <Button\r\n            onClick={() => setEditMode(true)}\r\n            variant=\"outlined\"\r\n            style={{ fontSize: 12, marginTop: 10 }}\r\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\r\n          >Edit profile</Button>\r\n        }\r\n\r\n        {editMode && <div className={s.buttonsSaveAndCancelProfile}>\r\n          <Button\r\n            onClick={() => dispatch(submit('editProfile'))}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth={true}\r\n            style={{ fontSize: 12, color: '#fff', margin: 10 }}\r\n            startIcon={<SaveIcon />}\r\n          >Save</Button>\r\n          <Button\r\n            onClick={() => setEditMode(false)}\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            style={{ fontSize: 12, color: '#fff', margin: 10 }}\r\n            startIcon={<CloseIcon />}\r\n          >Cancel</Button>\r\n        </div>}\r\n\r\n        {editMode && props.showSuccessSave &&\r\n          <div className={s.successSave}>\r\n            {props.showSuccessSave}\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n\r\n      <div className={s.columnRight}>\r\n\r\n        {!editMode && <div className={s.fullName}>{props.profile.fullName}</div>}\r\n\r\n        {!editMode && <ProfileStatusWithHooks\r\n            status={props.status}\r\n            updateStatus={props.updateStatus} />\r\n        }\r\n\r\n        {editMode\r\n          ? <ProfileDataForm\r\n            initialValues={props.profile}\r\n            errorProfileContacts={props.errorProfileContacts}\r\n            onSubmit={formData => props.saveProfileThunk(formData)}\r\n          />\r\n          : <ProfileData {...props} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileInfoContainer = connect()(ProfileInfo);\r\n\r\nexport default ProfileInfoContainer;","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\n\r\nimport { getUserProfile, getStatus, updateStatus, savePhotoThunk, saveProfileThunk } from '../../redux/profile-reducer';\r\n\r\nimport WallContainer from './Wall/WallContainer';\r\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer';\r\n\r\nclass ProfileContainer extends React.PureComponent {\r\n  refreshProfile() {\r\n    \r\n    let userId = this.props.match.params.userId;\r\n    \r\n    if (!userId) {\r\n      userId = this.props.authorizedUserID;\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // рендер при переходе с одной страницы на другую\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      <ProfileInfoContainer\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus} \r\n        isOwner={!this.props.match.params.userId}\r\n        savePhotoThunk={this.props.savePhotoThunk}\r\n        saveProfileThunk={this.props.saveProfileThunk}\r\n        showSuccessSave={this.props.showSuccessSave}\r\n        errorProfileContacts={this.props.errorProfileContacts}\r\n        />\r\n      <WallContainer />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userID,\r\n    isAuth: state.auth.isAuth,\r\n    showSuccessSave: state.profilePage.showSuccessSave,\r\n    errorProfileContacts: state.profilePage.errorProfileContacts,\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhotoThunk,\r\n    saveProfileThunk,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { loginThunk, logoutThunk } from '../../redux/auth-reducer';\r\nimport s from './Login.module.css';\r\nimport cn from 'classnames';\r\n\r\nimport renderTextField from '../common/ElementCustom/renderTextField';\r\nimport renderCheckbox from '../common/ElementCustom/renderCheckbox';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'email',\r\n    'password',\r\n    'captcha'\r\n  ]\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n\r\n  if (values.email\r\n    && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.loginThunk(\r\n      formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={`/profile/${props.id}`} />\r\n  }\r\n\r\n  return <div className={s.wrap}>\r\n    <div className={s.body}>\r\n      <h1>Log in</h1>\r\n      <LoginReduxForm\r\n        onSubmit={onSubmit}\r\n        logoutThunk={logoutThunk}\r\n        captchaURL={props.captchaURL} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaURL }) => {\r\n  return <>\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={s.row}>\r\n        <Field\r\n          component={renderTextField}\r\n          name='email'\r\n          label='Email:'\r\n          type=\"email\"\r\n          fullWidth={true}\r\n        />\r\n      </div>\r\n      <div className={s.row}>\r\n        <Field\r\n          component={renderTextField}\r\n          name='password'\r\n          label='Password:'\r\n          type=\"password\"\r\n          fullWidth={true}\r\n        />\r\n      </div>\r\n      <div className={cn(s.row, s.rowCheckbox)}>\r\n        <Field\r\n          component={renderCheckbox}\r\n          name='rememberMe'\r\n          label='Remember me'\r\n        />\r\n      </div>\r\n\r\n      {captchaURL && <img src={captchaURL} alt='captcha' />}\r\n      {captchaURL &&\r\n        <Field\r\n          component={renderTextField}\r\n          fullWidth={true}\r\n          name='captcha' />\r\n      }\r\n\r\n      <div className={s.row}>\r\n        <Button\r\n          type='submit'\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ width: '100%', fontSize: 16, fontWeight: 'bold', color: '#fff' }}\r\n        >Log in</Button>\r\n\r\n        {error &&\r\n          <div className={s.formError}>\r\n            {error}\r\n          </div>\r\n        }\r\n      </div>\r\n    </form>\r\n  </>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate,\r\n})(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  captchaURL: state.auth.captchaURL,\r\n  isAuth: state.auth.isAuth,\r\n  id: state.auth.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginThunk,\r\n  logoutThunk\r\n})(Login);","import React from 'react';\r\n\r\nconst GlobalError = (props) => {\r\n  return <div>Oh, an error occured: \r\n  <div style={{fontWeight: 'bold', color: 'red'}}>{props.error}</div>\r\n  </div>\r\n};\r\n\r\nexport default GlobalError;","import React from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport { initializeAppThunk, showGlobalErrorThunk } from './redux/app-reducer';\r\n\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspense } from './components/hoc/withSuspense';\r\n\r\nimport s from './App.module.css';\r\n\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Login from './components/Login/Login';\r\nimport GlobalError from './components/GlobalError/GlobalError';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeAppThunk();\r\n    \r\n    window.addEventListener('unhandledrejection',\r\n      (event) => this.props.showGlobalErrorThunk(event.reason),\r\n      { once: true, passive: true }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className={s.fon}>\r\n        <div className={s.container}>\r\n\r\n          <div className={s.appWrapper}>\r\n\r\n            {this.props.globalError && <Redirect to=\"/error\" />}\r\n\r\n            <HeaderContainer />\r\n            <Navbar />\r\n\r\n            <div className={s.appWrapperContent}>\r\n              <Switch>\r\n\r\n                <Route path='/error'\r\n                  render={() => <GlobalError error={this.props.globalError} />} />\r\n\r\n                <Redirect from='/profile/undefined' to=\"/\" />\r\n\r\n                <Route path='/dialogs'\r\n                  render={withSuspense(DialogsContainer)} />\r\n\r\n                <Route path='/profile/:userId?'\r\n                  component={ProfileContainer} />\r\n\r\n                <Route path='/users'\r\n                  render={withSuspense(UsersContainer)} />\r\n\r\n                <Route path='/login'\r\n                  render={() => <Login login={this.props.login} />} />\r\n\r\n                <Redirect exact from=\"/\" to=\"/profile\" />\r\n\r\n                <Redirect from='*' to=\"/\" />\r\n\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n  globalError: state.app.globalError,\r\n});\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    initializeAppThunk,\r\n    showGlobalErrorThunk,\r\n  })\r\n)(App)\r\n\r\nexport default AppContainer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/redux-store';\r\n\r\nimport AppContainer from './App';\r\n\r\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark', // светлый текст\r\n    primary: {\r\n      main: cyan[600], // #00bcd4\r\n      // синий цвет (кнопки, активные ссылки в навигации, декоративные линии)\r\n    },\r\n    secondary: {\r\n      main: '#4F4F4F',\r\n      // общий фон\r\n    },\r\n    \r\n    // #919191\r\n    // фон светлее общего (hover и текст в profileForm)\r\n\r\n    // #5E5E5E\r\n    // средний серый (фон статуса при редактировании)\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <CssBaseline />\r\n        <AppContainer />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </HashRouter>, document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfoContainer_avatar__owf3n\",\"avatarWrap\":\"ProfileInfoContainer_avatarWrap__1Dv3n\",\"camera\":\"ProfileInfoContainer_camera__1u0pX\",\"wrapImg\":\"ProfileInfoContainer_wrapImg__WweTl\",\"editPhotoInput\":\"ProfileInfoContainer_editPhotoInput__3O6IO\",\"containerMain\":\"ProfileInfoContainer_containerMain__sVz8Q\",\"columnLeft\":\"ProfileInfoContainer_columnLeft__22soQ\",\"columnRight\":\"ProfileInfoContainer_columnRight__1T13r\",\"iconButtonEditProfile\":\"ProfileInfoContainer_iconButtonEditProfile__2X_jF\",\"fullName\":\"ProfileInfoContainer_fullName__3Z0hR\",\"buttonsSaveAndCancelProfile\":\"ProfileInfoContainer_buttonsSaveAndCancelProfile__3Uq7H\",\"successSave\":\"ProfileInfoContainer_successSave__2uPbw\",\"anim\":\"ProfileInfoContainer_anim__2hv0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3R0rh\",\"navLink\":\"Navbar_navLink__3jqZB\",\"navLinkImg\":\"Navbar_navLinkImg__3kMZG\",\"active\":\"Navbar_active__2b-XZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__18LVK\",\"body\":\"Login_body__2Hhs9\",\"row\":\"Login_row__3d41Y\",\"rowCheckbox\":\"Login_rowCheckbox__4sYwU\",\"formError\":\"Login_formError__3j1Nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3vTSi\",\"logoAndTitle\":\"Header_logoAndTitle__1mTjG\",\"headerTitle\":\"Header_headerTitle__2wZ_g\",\"login\":\"Header_login__1LiSF\",\"loginName\":\"Header_loginName__3CaV_\",\"logoutImg\":\"Header_logoutImg__1QW2c\",\"buttonMobile\":\"Header_buttonMobile__3V8e5\",\"buttonDesctop\":\"Header_buttonDesctop__38OBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileStatusWithHooks_wrapper__1hETj\",\"buttons\":\"ProfileStatusWithHooks_buttons__3Gmm6\",\"buttonWrap\":\"ProfileStatusWithHooks_buttonWrap__hPorn\",\"status\":\"ProfileStatusWithHooks_status__15hs0\",\"statusEmpty\":\"ProfileStatusWithHooks_statusEmpty__2Zla4\",\"buttonSave\":\"ProfileStatusWithHooks_buttonSave__3ORh5\",\"buttonCancel\":\"ProfileStatusWithHooks_buttonCancel__2ZVzA\"};","export default __webpack_public_path__ + \"static/media/preloader.a2993579.svg\";","import React from 'react';\r\nimport preloader from '../../../img/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <img src={preloader} alt='preloader'/>\r\n  )\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__Rn3Sm\",\"container\":\"App_container__2T05O\",\"appWrapper\":\"App_appWrapper__1hlCE\",\"appWrapperContent\":\"App_appWrapperContent__1C2YH\"};"],"sourceRoot":""}