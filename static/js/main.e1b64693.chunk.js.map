{"version":3,"sources":["App.module.scss","img/preloader/preloaderTheme1.svg","img/preloader/preloaderTheme2.svg","components/common/Preloader/Preloader.tsx","img/no_photo.svg","components/common/Name/Name.module.scss","components/common/Name/Name.tsx","components/common/NoElement/NoElement.tsx","hoc/withAuthRedirect.tsx","api/users-api.ts","redux/reducers/users-reducer.ts","api/api.ts","api/chat-api.ts","redux/reducers/chat-reducer.ts","components/common/NoElement/NoElement.module.scss","components/common/RenderFormElement/RenderTextField.module.scss","components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","redux/selectors/app-selectors.ts","components/Navbar/Navbar.module.scss","components/Profile/ProfileWall/ProfilePost/ProfilePost.module.scss","redux/selectors/auth-selectors.ts","redux/selectors/profile-selectors.ts","api/profile-api.ts","redux/reducers/profile-reducer.ts","components/Profile/ProfileWall/ProfilePost/ProfilePost.tsx","hooks/useLocalStorage.tsx","components/Profile/ProfileWall/ProfileWall.tsx","img/icons/camera.svg","components/Profile/ProfileInfo/ProfilePlug/ProfilePlug.tsx","components/Profile/ProfileInfo/ProfileStatus/stylesCustomMaterialUI.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/common/FieldWithCounter/FieldWithCounter.tsx","components/common/RenderFormElement/RenderTextField.jsx","components/common/RenderFormElement/RenderCheckbox.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfoContainer.tsx","components/Profile/ProfileContainer.tsx","img/preloader/preloaderStart.svg","components/common/Preloader/PreloaderStart.tsx","img/icons/logo.svg","api/auth-api.ts","api/security-api.ts","redux/reducers/auth-reducer.ts","redux/reducers/app-reducer.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Error/ErrorBoundary.jsx","hoc/withSuspense.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Profile/ProfileInfo/ProfilePlug/ProfilePlug.module.scss","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","components/Header/Header.module.scss","components/Login/Login.module.scss","components/common/FieldWithCounter/FieldWithCounter.module.scss","components/Profile/ProfileInfo/ProfileInfoContainer.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/common/Preloader/Preloader.module.scss","components/Profile/ProfileWall/ProfileWall.module.scss","components/common/Avatar/Avatar.module.scss","components/common/Avatar/Avatar.tsx"],"names":["module","exports","Preloader","display","theme","useSelector","getTheme","className","cn","s","container_default","container_block","wrap","src","preloaderTheme1","preloaderTheme2","alt","Name","id","name","size","name__small","to","replace","NoElement","elements","writeSomething","container","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","usersAPI","getUsers","currentPage","pageSize","term","friend","instance","get","response","data","followUser","post","unfollowUser","delete","initialState","users","totalUsersCount","isFetching","followingInProgress","actions","followSuccess","userID","type","unfollowSuccess","setUsers","addUsers","setTotalUsersCount","count","clearUsers","toggleIsFetching","toggleFollowingProgress","page","dispatch","getState","a","usersPage","length","items","totalCount","_followUnfollowFlow","apiMethod","actionCreator","resultCode","ResultCodesEnum","Success","follow","bind","unfollow","usersReducer","action","map","u","followed","filter","ResultCodeForCaptcha","axios","create","withCredentials","baseURL","headers","ws","subscribers","notifySubscribersAboutStatus","status","forEach","reconnect","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","message","send","messages","payload","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","chatReducer","m","v1","item","index","array","getInitialized","app","initialized","getLogin","login","getIsAuth","getAuthorizedUserID","getCaptchaURL","captchaURL","getMyPhoto","myPhoto","getProfile","profilePage","profile","getStatus","getShowSuccessSave","showSuccessSave","getErrorProfileContacts","errorProfileContacts","getPosts","posts","getPostsForDelete","postsForDelete","getEditModeProfile","isEditModeProfile","profileAPI","updateStatus","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","idPost","likesCount","isLikeClick","initializePosts","addPost","newPostText","deletePost","setPostForDeleting","deletePostForDeleting","clearPostsForDelete","setLikeOnPost","deleteLikeOnPost","setUserProfile","setStatus","savePhotoSuccess","photos","showSuccessSaveProfile","showErrorProfileContacts","setEditModeProfile","bool","getUserProfile","userId","profileReducer","newPost","Date","now","p","ProfilePost","React","memo","isHiddenAllX","setIsHiddenAllX","isShowAnimation","handleDeleteOnePost","addIdPostBeforeDeleting","deleteIdPostBeforeDeleting","useDispatch","useState","isClickDeletePost","setIsClickDeletePost","isSelectedPost","setIsSelectedPost","useEffect","postContainer","postDelete","includes","columnLeft","aria-hidden","avatar","postSelectedTheme1","postSelectedTheme2","onClick","title","Avatar","photo","large","unknown","columnCenter","fullName","columnRight","hidden","IconButton","wrapLike","like","noLike","useLocalStorage","key","value","arr","localStorage","getItem","setItem","stringify","Form","setValue","handleAddPost","trim","form","TextField","placeholder","multiline","fullWidth","variant","color","inputProps","maxLength","onChange","target","buttonBig","Button","style","textShadow","margin","width","endIcon","buttonIcon","aria-label","marginLeft","ProfileWall","setIsShowAnimation","postsElements","basket","height","startIcon","ProfilePlug","isOwner","containerMainPlug","columnLeftPlug","avatarPlug","buttonPlug","columnRightPlug","nameWrapPlug","namePlug","statusPlug","titleOnePlug","textPlug","titleTwoPlug","useStyles","makeStyles","borderRadius","padding","spacing","minHeight","lineHeight","backgroundColor","ProfileStatus","classes","editMode","setEditMode","isEditInputStatusForm","setIsEditInputStatusForm","statusLocal","setStatusLocal","isHiddenCounter","setIsHiddenCounter","setCount","ref","statusRef","useRef","handleClickOutside","current","contains","document","autoFocus","currentTarget","onFocus","select","onBlur","buttonAndCounter","buttonWrap","disabled","boxShadow","stylesField","countHidden","countYellow","countRed","plug","noStatus","statusNotMy","Contact","contactTitle","contactValue","contact","contactTextWrap","contactText","href","ProfileData","containerForm","aboutMe","text","job","lookingForAJob","lookingForAJobDescription","Object","values","contacts","some","el","keys","FieldWithCounter","renderContent","setIsEditInputProfileForm","position","RenderTextField","label","input","onInput","meta","touched","warning","custom","InputLabelProps","htmlFor","RenderCheckbox","FormControlLabel","control","Checkbox","checked","labelPlacement","ProfileDataForm","reduxForm","handleSubmit","initialValues","onSubmit","titleForm","handleInput","handleFocus","handleBlur","Field","component","titleAllContacts","titleContact","ScrollToTopOnMount","getElementById","scrollIntoView","ShowSuccessSavePortal","children","createElement","body","createPortal","ProfileInfoContainer","stylesSaveAndCancelButton","fontSize","isEditInputProfileForm","containerMain","camera","wrapImg","file","files","marginTop","buttonsSaveAndCancelProfile","submit","successSave","Error","saveProfileThunk","ProfileContainer","this","refreshProfile","prevProps","match","params","authorizedUserID","history","PureComponent","compose","withRouter","PreloaderStart","preloaderStart","authAPI","me","email","password","rememberMe","captcha","logout","securityAPI","getAuthUserDataThunk","stopSubmit","_error","myProfile","loginThunk","CaptchaIsRequired","url","logoutThunk","authReducer","appReducer","ButtonChangeTheme","themeLocal","setThemeLocal","handleToggleTheme","buttonThemeDesctop","marginRight","buttonThemeMobile","Header","myID","colors","cyan","cyanLight","cyanMedium","cyanDark","darkBlue","darkBlueTransparent","i","setProperty","header","logoAndTitle","logo","headerTitleDesctop","headerTitleMobile","rightColumn","loginAndPhoto","loginName","buttonLogoutDesctop","buttonLogoutMobile","IconProfile","pathname","profileUrl","viewBox","navLinkImg","activeIcon","d","IconChat","IconUsers","IconFriends","location","nav","exact","activeClassName","active","navLink","LoginReduxForm","validate","errors","test","stylesLoginButton","fontWeight","stylesTestLoginButton","marginBottom","loginBlockSubstrate","loginBlock","row","rowCheckbox","formError","Login","ErrorBoundary","setState","whiteSpace","toString","Component","withSuspense","fallback","ChatContainer","lazy","UsersContainer","FriendsContainer","SuspendedChat","SuspendedUsers","SuspendedFriends","AppContainer","fon","appWrapper","appWrapperContent","from","path","render","rootReducer","combineReducers","formReducer","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","AvatarBody","avatarWrap","extra_large","medium","small","photoTrue"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,WAAa,wBAAwB,kBAAoB,iC,4ECDtH,MAA0B,4CCA1B,MAA0B,4C,gCCkC1BC,IApBwB,SAAC,GAA6B,IAAD,IAA1BC,eAA0B,MAAhB,UAAgB,EAC5DC,EAAQC,YAAYC,KAE1B,OACE,qBACEC,UAAWC,IAAG,eACTC,IAAEC,kBAAgC,YAAZP,GADd,eAERM,IAAEE,gBAA8B,UAAZR,IAH3B,SAME,qBAAKI,UAAWE,IAAEG,KAAlB,SACE,qBACEC,IAAe,WAAVT,EAAqBU,EAAkBC,EAC5CC,IAAI,oB,iCC3BC,QAA0B,sC,oBCCzChB,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,sGCyB3CgB,IAdmB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAA4B,IAAtBC,YAAsB,MAAf,SAAe,EACnE,OACE,+BACE,cAAC,IAAD,CACEb,UAAWC,IAAGC,IAAEU,KAAH,eAAYV,IAAEY,YAAuB,UAATD,IACzCE,GAAE,mBAAcJ,GAAM,UACtBK,SAAO,EAHT,SAKGJ,GAAQ,gB,iCCpBjB,kCAoBeK,IAZwB,SAAC,GAGjC,IAFLC,EAEI,EAFJA,SAEI,IADJC,sBACI,SACJ,OACE,sBAAKnB,UAAWE,IAAEkB,UAAlB,UACE,4CAAaF,EAAb,YAAsC,UAAbA,EAAuB,QAAU,MACzDC,GAAkB,yD,oHCVnBE,EAA6B,SAACC,GAAD,MAA0B,CAC3DC,OAAQD,EAAME,KAAKD,SAQN,SAASE,EACtBC,GAUA,OAAOC,YACLN,EADKM,EAR0D,SAACC,GAAW,IACnEL,EAAyBK,EAAzBL,OAAWM,EADuD,YACzCD,EADyC,YAG1E,OAAKL,EAEE,cAACG,EAAD,eAAuBG,IAFV,cAAC,IAAD,CAAUd,GAAG,gB,4NCctBe,EAzBE,CACTC,SADS,WAMZ,IAAD,4IAJAC,EAIA,+BAJc,EACdC,EAGA,uBAFAC,EAEA,uBADAC,EACA,gCACuBC,IAASC,IAAT,qBACPL,EADO,kBACcC,EADd,iBAC+BC,EAD/B,mBAC8CC,IAFrE,cACMG,EADN,yBAIOA,EAASC,MAJhB,8CAMIC,WAZS,SAYE7B,GAAa,OAAD,0HACJyB,IAASK,KAAT,iBACX9B,GACV,IAHyB,cACrB2B,EADqB,yBAKpBA,EAASC,MALW,8CAOvBG,aAnBS,SAmBI/B,GAAa,OAAD,0HACNyB,IAASO,OAAT,iBAA+ChC,IADzC,cACvB2B,EADuB,yBAEtBA,EAASC,MAFa,+CCtB3BK,EAAe,CACnBC,MAAO,GAEPZ,SAAU,GACVa,gBAAiB,EAEjBC,YAAY,EAEZC,oBAAqB,IAyEVC,EAAU,CACrBC,cAAe,SAACC,GAAD,MAAqB,CAAEC,KAAM,SAAUD,WACtDE,gBAAiB,SAACF,GAAD,MAAqB,CAAEC,KAAM,WAAYD,WAE1DG,SAAU,SAACT,GAAD,MAA6B,CAAEO,KAAM,YAAaP,UAC5DU,SAAU,SAACV,GAAD,MAA6B,CAAEO,KAAM,YAAaP,UAC5DW,mBAAoB,SAACV,GAAD,MACjB,CACCM,KAAM,wBACNK,MAAOX,IAEXY,WAAY,iBAAO,CAAEN,KAAM,gBAE3BO,iBAAkB,SAACZ,GAAD,MACf,CAAEK,KAAM,qBAAsBL,eACjCa,wBAAyB,SAACb,EAAqBI,GAAtB,MACtB,CACCC,KAAM,+BACNL,aACAI,YAIOpB,EACX,SAAC8B,EAAc3B,EAAcC,GAA7B,8CACA,WAAO2B,EAAUC,GAAjB,eAAAC,EAAA,6DACEF,EAASb,EAAQU,kBAAiB,IADpC,SAGyB7B,EAASC,SAC9B8B,EACAE,IAAWE,UAAUhC,SACrBC,EACAC,GAPJ,OAGQG,EAHR,OAWsB,IAAhBJ,EAAKgC,QAAyB,IAATL,GACvBC,EAASb,EAAQK,SAAShB,EAAS6B,QAGjCN,EAAO,GACTC,EAASb,EAAQM,SAASjB,EAAS6B,QAGjCjC,EAAKgC,OAAS,GAAc,IAATL,IACrBC,EAASb,EAAQS,cACjBI,EAASb,EAAQK,SAAShB,EAAS6B,SAGrCL,EAASb,EAAQO,mBAAmBlB,EAAS8B,aAC7CN,EAASb,EAAQU,kBAAiB,IAzBpC,2CADA,yDA8BIU,EAAmB,uCAAG,WAC1BP,EACAnD,EACA2D,EACAC,GAJ0B,SAAAP,EAAA,6DAM1BF,EAASb,EAAQW,yBAAwB,EAAMjD,IANrB,SAOH2D,EAAU3D,GAPP,cASb6D,aAAeC,IAAgBC,SAC1CZ,EAASS,EAAc5D,IAEzBmD,EAASb,EAAQW,yBAAwB,EAAOjD,IAZtB,2CAAH,4DAeZgE,EACX,SAAChE,GAAD,8CACA,WAAOmD,GAAP,SAAAE,EAAA,sEACQK,EACJP,EACAnD,EACAmB,EAASU,WAAWoC,KAAK9C,GACzBmB,EAAQC,eALZ,2CADA,uDAUW2B,EACX,SAAClE,GAAD,8CACA,WAAOmD,GAAP,SAAAE,EAAA,sEACQK,EACJP,EACAnD,EACAmB,EAASY,aAAakC,KAAK9C,GAC3BmB,EAAQI,iBALZ,2CADA,uDAUayB,IAjKM,WAGG,IAFtBxD,EAEqB,uDAFbsB,EACRmC,EACqB,uCACrB,OAAQA,EAAO3B,MACb,IAAK,SACH,OAAO,2BACF9B,GADL,IAEEuB,MAAOvB,EAAMuB,MAAMmC,KAAI,SAACC,GACtB,OAAIA,EAAEtE,KAAOoE,EAAO5B,OACX,2BAAK8B,GAAZ,IAAeC,UAAU,IAEpBD,OAIb,IAAK,WACH,OAAO,2BACF3D,GADL,IAEEuB,MAAOvB,EAAMuB,MAAMmC,KAAI,SAACC,GACtB,OAAIA,EAAEtE,KAAOoE,EAAO5B,OACX,2BAAK8B,GAAZ,IAAeC,UAAU,IAEpBD,OAIb,IAAK,YACH,OAAO,2BACF3D,GADL,IAEEuB,MAAM,YAAKkC,EAAOlC,SAGtB,IAAK,YACH,OAAO,2BACFvB,GADL,IAEEuB,MAAM,GAAD,mBAAMvB,EAAMuB,OAAZ,YAAsBkC,EAAOlC,UAGtC,IAAK,cACH,OAAO,2BACFvB,GADL,IAEEuB,MAAO,KAGX,IAAK,wBACH,OAAO,2BACFvB,GADL,IAEEwB,gBAAiBiC,EAAOtB,QAG5B,IAAK,qBACH,OAAO,2BACFnC,GADL,IAEEyB,WAAYgC,EAAOhC,aAGvB,IAAK,+BACH,OAAO,2BACFzB,GADL,IAEE0B,oBAAqB+B,EAAOhC,WAAP,sBACbzB,EAAM0B,qBADO,CACc+B,EAAO5B,SACtC7B,EAAM0B,oBAAoBmC,QAAO,SAACxE,GAAD,OAAQA,IAAOoE,EAAO5B,YAG/D,QACE,OAAO7B,K,gCCnFb,0GAUYmD,EAKAW,EAfZ,SAEahD,EAFb,OAEwBiD,EAAMC,OAAO,CACnCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACP,UAAW,2C,SAIHhB,O,qBAAAA,I,kBAAAA,M,cAKAW,O,2CAAAA,M,iMCfRM,EAAuB,KAEvBC,EAAc,CAChB,oBAAqB,GACrB,iBAAkB,IAKdC,EAA+B,SAACC,GAChCF,GACFA,EAAY,kBAAkBG,SAAQ,SAAC5F,GAAD,OAAOA,EAAE2F,OAI7CE,EAAY,WAChBH,EAA6B,WAC7BI,WAAWC,EAAe,MAGtBC,EAAiB,SAACC,GACtB,IAAMC,EAAcC,KAAKC,MAAMH,EAAE5D,MAC7BoD,GACFA,EAAY,qBAAqBG,SAAQ,SAAC5F,GAAD,OAAOA,EAAEkG,OAIhDG,EAAc,WAClBX,EAA6B,UAGzBY,EAAe,WACnBZ,EAA6B,SAE7Ba,QAAQC,MAAM,iBAGVC,EAAU,WAAO,IAAD,QAClB,QAAF,EAAAjB,SAAA,SAAIkB,oBAAoB,QAASb,GAC/B,QAAF,EAAAL,SAAA,SAAIkB,oBAAoB,UAAWV,GACjC,QAAF,EAAAR,SAAA,SAAIkB,oBAAoB,OAAQL,GAC9B,QAAF,EAAAb,SAAA,SAAIkB,oBAAoB,QAASJ,IAGnC,SAASP,IAAiB,IAAD,EACvBU,IACE,QAAF,EAAAjB,SAAA,SAAImB,QAEJnB,EAAK,IAAIoB,UACP,gEAGFlB,EAA6B,WAE7BF,EAAGqB,iBAAiB,QAAShB,GAC7BL,EAAGqB,iBAAiB,UAAWb,GAC/BR,EAAGqB,iBAAiB,OAAQR,GAC5Bb,EAAGqB,iBAAiB,QAASP,GAGxB,IAAMQ,EAAU,WAEnBf,KAFSe,EAAU,WAIb,IAAD,EACDrB,IACFA,EAAY,qBAAuB,GACnCA,EAAY,kBAAoB,IAElCgB,IACE,QAAF,EAAAjB,SAAA,SAAImB,SAVKG,EAAU,SAanBC,EACAC,GAEIvB,GAEFA,EAAYsB,GAAWE,KAAKD,IAlBrBF,EAAU,SAwBnBC,EACAC,GAEkB,IAAD,EAAbvB,IAEFA,EAAW,UAAGA,EAAYsB,UAAf,aAAG,EAAwB9B,QAAO,SAACjF,GAAD,OAAOA,IAAMgH,OA7BnDF,EAAU,SAkCTI,GAAkB,IAAD,EACzB,QAAF,EAAA1B,SAAA,SAAI2B,KAAKD,ICvFPxE,EAAe,CACnB0E,SAAU,GACVzB,OAAQ,WA6BJ5C,EACc,SAACqE,GAAD,MACf,CACClE,KAAM,oBACNmE,QAAS,CAAED,cAJXrE,EAMW,SAAC4C,GAAD,MACZ,CACCzC,KAAM,iBACNmE,QAAS,CAAE1B,YAIb2B,EAAwE,KACtEC,EAA2B,SAAC3D,GAQhC,OAL2B,OAAvB0D,IACFA,EAAqB,SAACF,GACpBxD,EAASb,EAAyBqE,MAG/BE,GAGLE,EAA+D,KAC7DC,EAA8B,SAAC7D,GAQnC,OAL8B,OAA1B4D,IACFA,EAAwB,SAAC7B,GACvB/B,EAASb,EAAsB4C,MAG5B6B,GAGIE,EAAyB,yDAAiB,WAAO9D,GAAP,SAAAE,EAAA,sDACrDgD,IACAA,EAAkB,oBAAqBS,EAAyB3D,IAChEkD,EAAkB,iBAAkBW,EAA4B7D,IAHX,2CAAjB,uDAMzB+D,EAAwB,yDAAiB,WAAO/D,GAAP,SAAAE,EAAA,sDACpDgD,EAAoB,oBAAqBS,EAAyB3D,IAClEkD,EAAoB,iBAAkBW,EAA4B7D,IAClEkD,IAHoD,2CAAjB,uDAMxBc,EAAc,SAACV,GAC1B,6BAAO,sBAAApD,EAAA,sDACLgD,EAAoBI,GADf,4CAKMW,IAjFK,WAGI,IAFtBzG,EAEqB,uDAFbsB,EACRmC,EACqB,uCACrB,OAAQA,EAAO3B,MACb,IAAK,oBACH,OAAO,2BACF9B,GADL,IAEEgG,SAAU,sBACLhG,EAAMgG,UADD,YAELvC,EAAOwC,QAAQD,SAAStC,KAAI,SAACgD,GAAD,mBAAC,eAAYA,GAAb,IAAgBrH,GAAIsH,qBACnD9C,QAAO,SAAC+C,EAAMC,EAAOC,GAAd,OAAwBD,GAASC,EAAMlE,OAAS,SAI7D,IAAK,iBACH,OAAO,2BACF5C,GADL,IAEEuE,OAAQd,EAAOwC,QAAQ1B,SAG3B,QACE,OAAOvE,K,oBClCb7B,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,MAAQ,iC,mBCA1BD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,KAAO,0BAA0B,QAAU,6BAA6B,IAAM,yBAAyB,SAAW,8BAA8B,MAAQ,2BAA2B,KAAO,0BAA0B,QAAU,6BAA6B,aAAe,kCAAkC,gBAAkB,qCAAqC,YAAc,mC,gCCCtb,oEAAO,IAAM2I,EAAiB,SAAC/G,GAAD,OAAyBA,EAAMgH,IAAIC,aAEpDxI,EAAW,SAACuB,GAAD,OAAyBA,EAAMgH,IAAIzI,Q,mBCH3DJ,EAAOC,QAAU,CAAC,IAAM,oBAAoB,QAAU,wBAAwB,WAAa,2BAA2B,OAAS,uBAAuB,WAAa,6B,mBCAnKD,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,KAAO,0BAA0B,WAAa,gCAAgC,QAAU,6BAA6B,WAAa,gCAAgC,OAAS,4BAA4B,mBAAqB,wCAAwC,mBAAqB,wCAAwC,aAAe,kCAAkC,QAAU,6BAA6B,YAAc,iCAAiC,SAAW,8BAA8B,WAAa,gCAAgC,KAAO,0BAA0B,OAAS,8B,sDCC7oB,0KAAO,IAAM8I,EAAW,SAAClH,GAAD,OAAyBA,EAAME,KAAKiH,OAE/CC,EAAY,SAACpH,GAAD,OAAyBA,EAAME,KAAKD,QAEhDoH,EAAsB,SAACrH,GAAD,OAAyBA,EAAME,KAAK2B,QAE1DyF,EAAgB,SAACtH,GAAD,OAAyBA,EAAME,KAAKqH,YAEpDC,EAAa,SAACxH,GAAD,OAAyBA,EAAME,KAAKuH,U,oXCRjDC,EAAa,SAAC1H,GAAD,OAAyBA,EAAM2H,YAAYC,SAExDC,EAAY,SAAC7H,GAAD,OAAyBA,EAAM2H,YAAYpD,QAEvDuD,EAAqB,SAAC9H,GAAD,OAChCA,EAAM2H,YAAYI,iBAEPC,EAA0B,SAAChI,GAAD,OACrCA,EAAM2H,YAAYM,sBAEPC,EAAW,SAAClI,GAAD,OAAyBA,EAAM2H,YAAYQ,OAEtDC,EAAoB,SAACpI,GAAD,OAC/BA,EAAM2H,YAAYU,gBAEPC,EAAqB,SAACtI,GAAD,OAChCA,EAAM2H,YAAYY,mB,wDC4BLC,GAvCI,CACXd,WADW,SACArI,GAAoB,OAAD,0HACXyB,KAASC,IAAT,kBAAqC1B,IAD1B,cAC5B2B,EAD4B,yBAE3BA,EAASC,MAFkB,8CAK9B4G,UANW,SAMDxI,GAAa,OAAD,0HACHyB,KAASC,IAAT,yBAAuC1B,IADpC,cACpB2B,EADoB,yBAEnBA,EAASC,MAFU,8CAKtBwH,aAXW,SAWElE,GAAiB,OAAD,0HACVzD,KAAS4H,IAAyB,iBAAkB,CACzEnE,WAF+B,cAC3BvD,EAD2B,yBAI1BA,EAASC,MAJiB,8CAO7B0H,aAlBW,SAkBEC,GAAkB,OAAD,mHAC5BC,EAAW,IAAIC,UACZC,OAAO,QAASH,GAFS,SAGX9H,KAAS4H,IAC9B,gBACAG,EACA,CACE1E,QAAS,CACP,eAAgB,yBARY,cAG5BnD,EAH4B,yBAY3BA,EAASC,MAZkB,8CAe9B+H,eAjCW,SAiCIpB,GAAuB,OAAD,0HAClB9G,KAAS4H,IAAyB,UAAWd,GAD3B,cACnC5G,EADmC,yBAElCA,EAASC,MAFyB,+CCnCvCK,GAAe,CACnB6G,MAAO,CACL,CACEc,OAAQ,EACRnD,QAAQ,uQAIRoD,WAAY,EACZC,aAAa,GAEf,CACEF,OAAQ,EACRnD,QAAS,2DACToD,WAAY,EACZC,aAAa,GAEf,CACEF,OAAQ,EACRnD,QAAQ,wLAGRoD,WAAY,EACZC,aAAa,IAGjBd,eAAgB,GAEhBT,QAAS,KACTrD,OAAQ,GACRwD,gBAAiB,GACjBE,qBAAsB,GACtBM,mBAAmB,GA+HR5G,GAAU,CACrByH,gBAAiB,SAACjB,GAAD,MACd,CAAErG,KAAM,mBAAoBqG,UAE/BkB,QAAS,SAACC,GAAD,MACN,CAAExH,KAAM,WAAYwH,gBACvBC,WAAY,SAACN,GAAD,MAAqB,CAAEnH,KAAM,cAAemH,WAExDO,mBAAoB,SAACP,GAAD,MACjB,CAAEnH,KAAM,sBAAuBmH,WAClCQ,sBAAuB,SAACR,GAAD,MACpB,CAAEnH,KAAM,yBAA0BmH,WACrCS,oBAAqB,iBAAO,CAAE5H,KAAM,2BAEpC6H,cAAe,SAACV,GAAD,MACZ,CAAEnH,KAAM,mBAAoBmH,WAC/BW,iBAAkB,SAACX,GAAD,MACf,CAAEnH,KAAM,sBAAuBmH,WAElCY,eAAgB,SAACjC,GAAD,MACb,CAAE9F,KAAM,WAAY8F,YACvBkC,UAAW,SAACvF,GAAD,MAAqB,CAAEzC,KAAM,aAAcyC,WACtDwF,iBAAkB,SAACC,GAAD,MACf,CAAElI,KAAM,qBAAsBkI,WACjCC,uBAAwB,SAACnE,GAAD,MACrB,CAAEhE,KAAM,oBAAqBgE,YAChCoE,yBAA0B,SAACpE,GAAD,MACvB,CAAEhE,KAAM,8BAA+BgE,YAC1CqE,mBAAoB,SAACC,GAAD,MACjB,CAAEtI,KAAM,2BAA4BsI,UAG5BC,GACX,SAACC,GAAD,8CACA,WAAO9H,GAAP,eAAAE,EAAA,sEACyB8F,GAAWd,WAAW4C,GAD/C,OACQtJ,EADR,OAEEwB,EAASb,GAAQkI,eAAe7I,IAFlC,2CADA,uDAuDauJ,GApNQ,WAGC,IAFtBvK,EAEqB,uDAFbsB,GACRmC,EACqB,uCACrB,OAAQA,EAAO3B,MACb,IAAK,WACH,OAAO,2BACF9B,GADL,IAEE4H,QAASnE,EAAOmE,UAGpB,IAAK,aACH,OAAO,2BACF5H,GADL,IAEEuE,OAAQd,EAAOc,SAGnB,IAAK,mBACH,OAAO,2BACFvE,GADL,IAEEmI,MAAO1E,EAAO0E,QAGlB,IAAK,WACH,IAAMqC,EAAU,CACdvB,OAAQwB,KAAKC,MACb5E,QAASrC,EAAO6F,YAChBJ,WAAY,EACZC,aAAa,GAEf,OAAO,2BACFnJ,GADL,IAEEmI,MAAM,CAAEqC,GAAH,mBAAexK,EAAMmI,UAG9B,IAAK,sBACH,OAAO,2BACFnI,GADL,IAEEqI,eAAe,GAAD,mBAAMrI,EAAMqI,gBAAZ,CAA4B5E,EAAOwF,WAGrD,IAAK,yBACH,OAAO,2BACFjJ,GADL,IAEEqI,eAAe,YACVrI,EAAMqI,eAAexE,QAAO,SAACxE,GAAD,OAAQA,IAAOoE,EAAOwF,aAI3D,IAAK,yBACH,OAAO,2BACFjJ,GADL,IAEEqI,eAAgB,KAGpB,IAAK,cACH,OAAO,2BACFrI,GADL,IAEEmI,MAAOnI,EAAMmI,MAAMtE,QAAO,SAAC8G,GAAD,OAAOA,EAAE1B,SAAWxF,EAAOwF,YAGzD,IAAK,mBACH,OAAO,2BACFjJ,GADL,IAEEmI,MAAM,YACDnI,EAAMmI,MAAMzE,KAAI,SAACiH,GAClB,OAAIA,EAAE1B,SAAWxF,EAAOwF,OACf,2BACF0B,GADL,IAEEzB,aAAcyB,EAAEzB,WAChBC,aAAa,IAGVwB,QAKf,IAAK,sBACH,OAAO,2BACF3K,GADL,IAEEmI,MAAM,YACDnI,EAAMmI,MAAMzE,KAAI,SAACiH,GAClB,OAAIA,EAAE1B,SAAWxF,EAAOwF,OACf,2BACF0B,GADL,IAEEzB,aAAcyB,EAAEzB,WAChBC,aAAa,IAGVwB,QAKf,IAAK,qBACH,OAAO,2BACF3K,GADL,IAEE4H,QAAQ,2BAAM5H,EAAM4H,SAAb,IAAsBoC,OAAQvG,EAAOuG,WAGhD,IAAK,oBACH,OAAO,2BACFhK,GADL,IAEE+H,gBAAiBtE,EAAOqC,UAG5B,IAAK,8BACH,OAAO,2BACF9F,GADL,IAEEiI,qBAAsBxE,EAAOqC,UAGjC,IAAK,2BACH,OAAO,2BACF9F,GADL,IAEEuI,kBAAmB9E,EAAO2G,OAG9B,QACE,OAAOpK,I,QCXE4K,GAxHkDC,IAAMC,MACrE,SAACxK,GAAW,IAAD,EAULA,EARFa,KAAQ8H,EAFD,EAECA,OAAQnD,EAFT,EAESA,QAASoD,EAFlB,EAEkBA,WAAYC,EAF9B,EAE8BA,YACrCvB,EAOEtH,EAPFsH,QACAmD,EAMEzK,EANFyK,aACAC,EAKE1K,EALF0K,gBACAC,EAIE3K,EAJF2K,gBACAC,EAGE5K,EAHF4K,oBACAC,EAEE7K,EAFF6K,wBACAC,EACE9K,EADF8K,2BAGI7M,EAAQC,YAAYC,KACpB4J,EAAiB7J,YAAY4J,GAC7B5F,EAAW6I,cAdR,EAgByCC,oBAAS,GAhBlD,mBAgBFC,EAhBE,KAgBiBC,EAhBjB,OAiBmCF,oBAAS,GAjB5C,mBAiBFG,EAjBE,KAiBcC,EAjBd,KAkCTC,qBAAU,WACsB,IAA1BtD,EAAezF,QAEjBoI,GAAgB,KAEjB,CAAC3C,EAAgB2C,IAepB,OACE,sBACEtM,UAAWC,IAAGC,IAAEgN,cAAH,eACVhN,IAAEiN,WACDN,GACCN,GAAmB5C,EAAeyD,SAAS7C,KAJlD,SAOE,uBAAKvK,UAAWE,IAAEuC,KAAlB,UACE,sBAAKzC,UAAWE,IAAEmN,WAAlB,SACE,sBACEC,cAAY,OACZtN,UAAWC,IAAG,eACTC,IAAEqN,QAAUR,GADJ,eAGR7M,IAAEsN,mBAAqBT,GAA4B,WAAVlN,GAHjC,eAMRK,IAAEuN,mBAAqBV,GAA4B,WAAVlN,IAG9C6N,QAxDkB,WACrBX,GAK2B,IAA1BpD,EAAezF,QAEjBoI,GAAgB,GAElBU,GAAkB,GAClBN,EAA2BnC,KAT3B+B,GAAgB,GAChBU,GAAkB,GAClBP,EAAwBlC,KAqDlBoD,MAAM,wBAZR,SAcE,eAACC,EAAA,EAAD,CACEC,OAAc,OAAP3E,QAAO,IAAPA,OAAA,EAAAA,EAASoC,OAAOwC,QAASC,IAChClN,KAAK,SACLF,GAAE,OAAEuI,QAAF,IAAEA,OAAF,EAAEA,EAAS0C,aAKnB,uBAAK5L,UAAWE,IAAE8N,aAAlB,UACE,eAACtN,EAAA,EAAD,CAAMC,GAAE,OAAEuI,QAAF,IAAEA,OAAF,EAAEA,EAAS0C,OAAQhL,KAAI,OAAEsI,QAAF,IAAEA,OAAF,EAAEA,EAAS+E,WAC1C,sBAAKjO,UAAWE,IAAEkH,QAAlB,SAA4BA,OAG9B,uBAAKpH,UAAWE,IAAEgO,YAAlB,UACE,sBAAKC,OAAQ9B,EAAb,SACE,eAAC+B,EAAA,EAAD,CACET,MAAM,cACN9M,KAAK,QACL6M,QAvDa,WACvBZ,GAAqB,GACrB9G,YAAW,kBAAMwG,EAAoBjC,KAAS,MAkDtC,SAKE,eAAC,IAAD,QAIJ,uBAAKvK,UAAWE,IAAEmO,SAAlB,UACE,uBAAMrO,UAAWE,IAAEsK,WAAnB,SACGA,EAAa,EAAb,WAAqBA,GAAe,KAEvC,eAAC4D,EAAA,EAAD,CAAYT,MAAM,OAAO9M,KAAK,QAAQ6M,QA5D1B,WAIlB5J,EAHG2G,EAGMxH,GAAQiI,iBAAiBX,GAFzBtH,GAAQgI,cAAcV,KA0DzB,SACE,eAAC,IAAD,CACEvK,UAAWC,IAAGC,IAAEoO,KAAH,eAAYpO,IAAEqO,QAAU9D,sB,UC5GxC+D,GA1BS,SACtBC,EACAC,EAEA3J,EAEAmC,GAEA,IAAMpD,EAAW6I,cAGjBM,qBAAU,WAER,IAAM0B,EAAMtI,KAAKC,MAAMsI,aAAaC,QAAQJ,IAExCE,IACF7K,EAASiB,EAAO4J,IACZzH,GAAUA,EAASyH,MAExB,CAAC5J,EAAQ0J,EAAKvH,EAAUpD,IAG3BmJ,qBAAU,WACR2B,aAAaE,QAAQL,EAAKpI,KAAK0I,UAAUL,MACxC,CAACD,EAAKC,KCyFLM,GAA+B,SAAC,GAAe,IAAbnP,EAAY,EAAZA,MAQhCiE,EAAW6I,cARiC,EASxBC,mBAAS,IATe,mBAS3C8B,EAT2C,KASpCO,EAToC,KAW5CC,EAAgB,WACfR,EAAMS,SAGXrL,EAASb,GAAQ0H,QAAQ+D,IACzBO,EAAS,MAGX,OACE,+BACE,uBAAKjP,UAAWE,IAAEkP,KAAlB,UACE,eAACC,EAAA,EAAD,CACEzO,KAAK,cACL0O,YAAY,yBACZC,WAAS,EACTC,WAAS,EACTC,QAAQ,WACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxC8P,WAAY,CAAEC,UAAW,IAAMlB,SAC/BmB,SAAU,SAAC1J,GAAD,OACR8I,EAAS9I,EAAE2J,OAAOpB,UAGtB,sBAAK1O,UAAWE,IAAE6P,UAAlB,SACE,eAACC,EAAA,EAAD,CACEtC,QAASwB,EACTO,QAAQ,YACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxCoQ,MAtCuC,CAC/CP,MAAO,QACPQ,WAAY,+CACZC,OAAQ,mBACRC,MAAO,SAmCCC,QAAS,eAAC,IAAD,IALX,wBAUF,sBAAKlC,QAAM,EAACnO,UAAWE,IAAEoQ,WAAzB,SACE,eAAClC,EAAA,EAAD,CACEmC,aAAW,UACX7C,QAASwB,EACTe,MAAO,CAAEO,WAAY,GACrB7C,MAAM,WAJR,SAME,eAAC,IAAD,CAAa+B,MAAM,sBAQhBe,GAzJe,WAC5B,IAAMhH,EAAQ3J,YAAY0J,GACpBG,EAAiB7J,YAAY4J,GAC7BR,EAAUpJ,YAAYkJ,GACtBnJ,EAAQC,YAAYC,KACpB+D,EAAW6I,cALiB,EAOYC,oBAAS,GAPrB,mBAO3BL,EAP2B,KAOVmE,EAPU,OAQM9D,oBAAS,GARf,mBAQ3BP,EAR2B,KAQbC,EARa,KAUlCkC,GAAgB,QAAS/E,EAAOxG,GAAQyH,iBAExC,IAAM8B,EAAsB,SAACjC,GAC3BzG,EAASb,GAAQ4H,WAAWN,KAqBxBkC,EAA0B,SAAClC,GAC/BzG,EAASb,GAAQ6H,mBAAmBP,KAGhCmC,EAA6B,SAACnC,GAClCzG,EAASb,GAAQ8H,sBAAsBR,KAGnCoG,EAAgBlH,EAAMzE,KAAI,SAACiH,GAAD,OAC9B,eAAC,GAAD,CAEE/C,QAASA,EACTzG,KAAM,CACJ8H,OAAQ0B,EAAE1B,OACVnD,QAAS6E,EAAE7E,QACXoD,WAAYyB,EAAEzB,WACdC,YAAawB,EAAExB,aAEjB4B,aAAcA,EACdC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,oBAAqBA,EACrBC,wBAAyBA,EACzBC,2BAA4BA,GAbvBT,EAAE1B,WAiBX,OACE,uBAAKvK,UAAWE,IAAEkB,UAAlB,UACE,sBACE+M,OAAkC,IAA1BxE,EAAezF,OACvBlE,UAAWC,IAAG,eAAGC,IAAE0Q,OAASjH,EAAezF,OAAS,IAFtD,SAIE,eAAC8L,EAAA,EAAD,CACEtC,QAAS,kBAlDfgD,GAAmB,GAGnBpE,GAAgB,QAEhBtG,YAAW,WACT2D,EAAe7D,SAAQ,SAACmG,GACtBnI,EAASb,GAAQ4H,WAAWoB,OAE9BnI,EAASb,GAAQ+H,uBAGjB0F,GAAmB,KAClB,MAsCGjB,QAAQ,YACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxCoQ,MAAO,CAAEP,MAAO,QAASU,MAAO,OAAQS,OAAQ,QAChDC,UAAW,eAAC,IAAD,IALb,sBAWyB,IAA1BnH,EAAezF,QAAgB,eAAC,GAAD,CAAMrE,MAAOA,IAE7C,uBAAKG,UAAWE,IAAEuJ,MAAlB,UACGkH,GAEClH,EAAMvF,QAAU,eAACjD,GAAA,EAAD,CAAWC,SAAS,QAAQC,gBAAc,W,uEC3GrD,OAA0B,mC,8BC+B1B4P,GAxB0B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1C,OACE,uBAAKhR,UAAWE,KAAE+Q,kBAAlB,UACE,uBAAKjR,UAAWE,KAAEgR,eAAlB,UACE,sBAAKlR,UAAWE,KAAEiR,aACjBH,GAAW,sBAAKhR,UAAWE,KAAEkR,gBAGhC,uBAAKpR,UAAWE,KAAEmR,gBAAlB,UACE,sBAAKrR,UAAWE,KAAEoR,aAAlB,SACE,sBAAKtR,UAAWE,KAAEqR,aAGpB,sBAAKvR,UAAWE,KAAEsR,aAElB,sBAAKxR,UAAWE,KAAEuR,eAClB,sBAAKzR,UAAWE,KAAEwR,WAClB,sBAAK1R,UAAWE,KAAEyR,eAClB,sBAAK3R,UAAWE,KAAEwR,kB,kDCbXE,GAVGC,cAAW,SAAChS,GAAD,MAAY,CACvCgG,OAAQ,CACNiM,aAAc,cACdC,QAASlS,EAAMmS,QAAQ,GACvBC,UAAW,OACXC,WAAY,OACZC,gBAAiB,eC8INC,GApIO,SAAC,GAA4B,IAA1BpB,EAAyB,EAAzBA,QACjBqB,EAAUT,KAUV/L,EAAS/F,YAAYqJ,GACrBtJ,EAAQC,YAAYC,KACpB+D,EAAW6I,cAb+B,EAehBC,oBAAS,GAfO,mBAezC0F,EAfyC,KAe/BC,EAf+B,OAgBU3F,oBAAS,GAhBnB,mBAgBzC4F,EAhByC,KAgBlBC,EAhBkB,OAiBV7F,mBAAS/G,GAjBC,mBAiBzC6M,EAjByC,KAiB5BC,EAjB4B,OAmBF/F,oBAAS,GAnBP,mBAmBzCgG,EAnByC,KAmBxBC,EAnBwB,OAoBtBjG,mBAAS,GApBa,mBAoBzCnJ,EApByC,KAoBlCqP,EApBkC,KAsBhD7F,qBAAU,WACR0F,EAAe9M,KACd,CAACA,IAyCJ,IAjB2BkN,EAiBrBC,EAAYC,iBAA8B,MAGhD,OApB2BF,EAkBTC,EAjBhB/F,qBAAU,WACR,SAASiG,EAAmB/M,GAExB4M,EAAII,UACHJ,EAAII,QAAQC,SAASjN,EAAE2J,SAExByC,GAAY,GAIhB,OADAc,SAAStM,iBAAiB,YAAamM,GAChC,WACLG,SAASzM,oBAAoB,YAAasM,MAE3C,CAACH,IAOJ,uBAAKA,IAAKC,EAAWhT,UAAWE,KAAEkB,UAAWuM,MAAM,gBAAnD,UACG2E,GACC,uBAAKtS,UAAWE,KAAEG,KAAlB,UACE,eAACgP,EAAA,EAAD,CACEiE,WAAS,EACT/D,WAAS,EACTC,WAAS,EACT5O,KAAK,gBACL0O,YAAY,iBACZK,WAAY,CAAEC,UAAW,KACzB5P,UAAWqS,EAAQxM,OACnB6J,MAAiB,WAAV7P,EAAqB,UAAY,YACxC6O,MAAOgE,EACP7C,SA9CgB,SAAC1J,GACzB2M,EAAS3M,EAAE2J,OAAOpB,MAAMxK,QACxBuO,GAAyB,GACzBE,EAAexM,EAAEoN,cAAc7E,QA4CvB8E,QAzDe,SAACrN,GACxBA,EAAE2J,OAAO2D,SACTX,EAAS3M,EAAE2J,OAAOpB,MAAMxK,QACxB2O,GAAmB,IAuDXa,OApDc,WACtBb,GAAmB,MAsDb,uBAAK7S,UAAWE,KAAEyT,iBAAlB,UACE,sBAAK3T,UAAWE,KAAE0T,WAAlB,SACE,eAAC5D,EAAA,EAAD,CACEtC,QAhDW,WACvB5J,EPsJF,SAAC+B,GAAD,8CACA,WAAO/B,GAAP,SAAAE,EAAA,sEACyB8F,GAAWC,aAAalE,GADjD,cAEerB,aAAeC,KAAgBC,SAC1CZ,EAASb,GAAQmI,UAAUvF,IAH/B,2CADA,sDOtJWkE,CAAa2I,IACtBD,GAAyB,GACzBF,GAAY,IA8CAsB,UAAWrB,EACX/C,QAAQ,YACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxCoQ,MA3FmC,CAC/CP,MAAO,QACPQ,WAAY,+CACZ4D,UAAW,+CACX3D,OAAQ,GACRC,MAAO,QAuFKU,UAAW,eAAC,KAAD,IANb,oBAYF,wBACE9Q,UAAWC,IACT8T,KAAYtQ,MADD,eAERsQ,KAAYC,YAAcpB,GAFlB,eAGRmB,KAAYE,YAAcxQ,GAAS,KAH3B,eAIRsQ,KAAYG,SAAqB,MAAVzQ,IAL9B,UAQGA,EARH,mBAcL6O,GAAY,sBAAKtS,UAAWE,KAAEiU,OAE9BnD,IAAYsB,GACX,sBACEhF,cAAY,OACZtN,UAAWE,KAAE2F,OACb6H,QAAS,kBAAM6E,GAAY,IAH7B,SAKG1M,GAAU,uBAAM7F,UAAWE,KAAEkU,SAAnB,qCAIbpD,GAAWnL,GAAU,sBAAK7F,UAAWE,KAAEmU,YAAlB,SAAgCxO,Q,oBCpFvDyO,GAAsCnI,IAAMC,MAChD,gBAAGmI,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAjB,OACE,qCACGA,GACC,uBAAKxU,UAAWE,KAAEuU,QAAlB,UACE,wBAAMzU,UAAWE,KAAEqU,aAAnB,UAAkCA,EAAlC,OACA,sBAAKvU,UAAWE,KAAEwU,gBAAlB,SACE,oBAAG1U,UAAWE,KAAEyU,YAAaC,KAAMJ,EAAnC,SACGA,EAAaxT,QAAQ,mCAAoC,kBASzD6T,GAtE0B,SAAC,GAAD,IAAG3L,EAAH,EAAGA,QAAH,OACvC,uBAAKlJ,UAAWE,KAAE4U,cAAlB,UACE,sBAAK9U,UAAWE,KAAEG,KAAlB,SACG6I,EAAQ6L,SACP,uBAAK/U,UAAWE,KAAE6U,QAAlB,UACE,sBAAK/U,UAAWE,KAAEyN,MAAlB,uBACA,sBAAK3N,UAAWE,KAAE8U,KAAlB,SAAyB9L,EAAQ6L,eAKvC,sBAAK/U,UAAWE,KAAEG,KAAlB,SACE,uBAAKL,UAAWE,KAAE+U,IAAlB,UACE,sBAAKjV,UAAWE,KAAEyN,MAAlB,yBACCzE,EAAQgM,eACP,sBAAKlV,UAAWE,KAAE8U,KAAlB,oCAEA,sBAAKhV,UAAWE,KAAE8U,KAAlB,4CAKN,sBAAKhV,UAAWE,KAAEG,KAAlB,SACG6I,EAAQiM,2BACP,uBAAKnV,UAAWE,KAAE+U,IAAlB,UACE,sBAAKjV,UAAWE,KAAEyN,MAAlB,kCACA,sBAAK3N,UAAWE,KAAE8U,KAAlB,SAAyB9L,EAAQiM,iCAKvC,sBAAKnV,UAAWE,KAAEG,KAAlB,SACG+U,OAAOC,OAAOnM,EAAQoM,UAAUC,MAAK,SAACC,GAAD,OAAQA,GAAa,KAAPA,MAClD,uBAAKxV,UAAWE,KAAEoV,SAAlB,UACE,sBAAKtV,UAAWE,KAAEyN,MAAlB,yBACCyH,OAAOK,KAAKvM,EAAQoM,UAAUtQ,KAAI,SAACyJ,GAAD,OACjC,eAAC6F,GAAD,CAEEC,aAAc9F,EACd+F,aAActL,EAAQoM,SAAS7G,IAF1BA,e,oBCOJiH,GArC+B,SAAC9T,GAAW,IAChDgO,EAAwDhO,EAAxDgO,UAAW+F,EAA6C/T,EAA7C+T,cAAeC,EAA8BhU,EAA9BgU,0BADqB,EAGThJ,oBAAS,GAHA,mBAGhDgG,EAHgD,KAG/BC,EAH+B,OAI7BjG,mBAAS,GAJoB,mBAIhDnJ,EAJgD,KAIzCqP,EAJyC,KAmBvD,OACE,uBAAK7C,MAAO,CAAE4F,SAAU,YAAxB,UACGF,GAfe,SAACxP,GACnByP,GAA0B,GAC1B9C,EAAS3M,EAAE2J,OAAOpB,MAAMxK,WAEN,SAACiC,GACnBA,EAAE2J,OAAO2D,SACTX,EAAS3M,EAAE2J,OAAOpB,MAAMxK,QACxB2O,GAAmB,MAEF,WACjBA,GAAmB,MAOjB,wBACE7S,UAAWC,IACTC,KAAEuD,MADS,eAERvD,KAAE8T,YAAcpB,GAFR,eAGR1S,KAAE+T,YAAcxQ,GAASmM,EAAY,IAH7B,eAIR1P,KAAEgU,SAAWzQ,IAAUmM,IAL9B,UAQGnM,EARH,OAQcmM,S,+BCALkG,GAxCS,SAAClU,GAAW,IAEhCmU,EAWEnU,EAXFmU,MACAC,EAUEpU,EAVFoU,MACA1G,EASE1N,EATF0N,YACAC,EAQE3N,EARF2N,UACAE,EAOE7N,EAPF6N,QACAE,EAME/N,EANF+N,WACAsG,EAKErU,EALFqU,QACAzC,EAIE5R,EAJF4R,QAT+B,EAa7B5R,EAHFsU,KAAQC,EAVuB,EAUvBA,QAASzP,EAVc,EAUdA,MAAO0P,EAVO,EAUPA,QACxB5G,EAEE5N,EAFF4N,UACG6G,EAZ4B,aAa7BzU,EAb6B,2GAe3B/B,EAAQC,YAAYC,KAE1B,OACE,uCACE,eAACsP,EAAA,EAAD,yBACEK,MAAiB,WAAV7P,EAAqB,UAAY,YACxCkW,MAAOA,EACPO,gBAAiB,CAAEC,QAASR,GAC5BpG,WAAU,2BAAOA,GAAP,IAAmBhP,GAAIoV,IACjCE,QAASA,EACTzC,QAASA,EACT/D,QAASA,EACTF,UAAWA,EACXC,UAAWA,EACXF,YAAaA,GACT0G,GACAK,IAELF,IACGzP,GAAS,uBAAM1G,UAAWE,KAAEwG,MAAnB,SAA2BA,KACnC0P,GAAW,gCAAOA,S,oBChBdI,GArBQ,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,MAAOD,EAAY,EAAZA,MACzBlW,EAAQC,YAAYC,KAC1B,OACE,+BACE,eAAC0W,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEC,UAAWZ,EAAMtH,MACjBmB,SAAUmG,EAAMnG,SAChBH,MAAiB,WAAV7P,EAAqB,UAAY,YACxCoQ,MAAO,CAAEO,WAAY,EAAGuB,QAAS,KAGrCgE,MAAOA,EACPc,eAAe,QACf5G,MAAO,CAAEO,WAAY,Q,oBCuHdsG,GAJSC,aAAqC,CAC3D3H,KAAM,eADgB2H,EApHpB,SAACnV,GAAW,IAEZoV,EAIEpV,EAJFoV,aACAC,EAGErV,EAHFqV,cACA1N,EAEE3H,EAFF2H,qBACAqM,EACEhU,EADFgU,0BAGF,OACE,wBAAMsB,SAAUF,EAAchX,UAAWE,KAAEkP,KAA3C,UACE,qBAAIpP,UAAWE,KAAEiX,UAAjB,0BAEA,sBAAKnX,UAAWE,KAAEG,KAAlB,SACE,eAAC,GAAD,CACEsV,cAAe,SAACyB,EAAaC,EAAaC,GAA3B,OACb,eAACC,GAAA,EAAD,CACEC,UAAW1B,GACXnG,WAAY,CAAEC,UAAW,KACzBmG,MAAM,QACNnV,KAAK,WACL0O,YAAY,YACZG,QAAQ,SACRD,WAAS,EACTyG,QAASmB,EACT5D,QAAS6D,EACT3D,OAAQ4D,KAGZ1B,0BAA2BA,EAC3BhG,UAAW,QAIf,sBAAK5P,UAAWE,KAAEG,KAAlB,SACE,eAAC,GAAD,CACEsV,cAAe,SAACyB,EAAaC,EAAaC,GAA3B,OACb,eAACC,GAAA,EAAD,CACEC,UAAW1B,GACXnG,WAAY,CAAEC,UAAW,KACzBL,WAAS,EACTwG,MAAM,YACNnV,KAAK,UACL0O,YAAY,wBACZG,QAAQ,SACRD,WAAS,EACTyG,QAASmB,EACT5D,QAAS6D,EACT3D,OAAQ4D,KAGZ1B,0BAA2BA,EAC3BhG,UAAW,QAIf,sBAAK5P,UAAWE,KAAEG,KAAlB,SACE,eAACkX,GAAA,EAAD,CACEC,UAAWhB,GACX3G,SAAU,WACR+F,GAA0B,IAE5BhV,KAAK,iBACLmV,MAAM,iCAIV,sBAAK/V,UAAWE,KAAEG,KAAlB,SACE,eAAC,GAAD,CACEsV,cAAe,SAACyB,EAAaC,EAAaC,GAA3B,OACb,eAACC,GAAA,EAAD,CACEC,UAAW1B,GACXnG,WAAY,CAAEC,UAAW,KACzBL,WAAS,EACTwG,MAAM,uBACNnV,KAAK,4BACL0O,YAAY,mBACZG,QAAQ,SACRD,WAAS,EACTyG,QAASmB,EACT5D,QAAS6D,EACT3D,OAAQ4D,KAGZ1B,0BAA2BA,EAC3BhG,UAAW,QAIf,uBAAK5P,UAAWE,KAAEG,KAAlB,UACE,sBAAKL,UAAWE,KAAEuX,iBAAlB,uBAEClO,EACC,sBAAKvJ,UAAWE,KAAEqJ,qBAAlB,SAAyCA,IAEzC,+BAGD6L,OAAOK,KAAKwB,EAAc3B,UAAUtQ,KAAI,SAACyJ,GAAD,OACvC,uBAAKzO,UAAWE,KAAEuU,QAAlB,UACE,uBAAKzU,UAAWE,KAAEwX,aAAlB,UAAiCjJ,EAAjC,OAEA,eAAC8I,GAAA,EAAD,CACEC,UAAW1B,GACXG,QAAS,kBAAML,GAA0B,IACzChV,KAAI,mBAAc6N,GAClBa,YAAY,cACZC,WAAS,EACTC,WAAS,MATmBf,eCjF1C,SAASkJ,KAKP,OAJA1K,qBAAU,WACR,IAAMgB,EAAWoF,SAASuE,eAAe,sBACjC,OAAR3J,QAAQ,IAARA,KAAU4J,gBAAe,KACxB,IACI,KAOT,IAoJMC,GAAwB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,SACzBvC,EAAqBnC,SAAS2E,cAAc,OAGlD,OAFA3E,SAAS4E,KAAK5N,OAAOmL,GAEd0C,uBAAaH,EAAUvC,IAGjB2C,GA3JmC,SAAC,GAAiB,IAAfnH,EAAc,EAAdA,QAC7CoH,EAAiD,CACrDC,SAAU,GACV3I,MAAO,QACPQ,WAAY,+CACZC,OAAQ,IASJ5G,EAAuBzJ,YAAYwJ,GAEnCzJ,EAAQC,YAAYC,KACpBmJ,EAAUpJ,YAAYkJ,GAEtBK,EAAkBvJ,YAAYsJ,GAC9BS,EAAoB/J,YAAY8J,GAChC9F,EAAW6I,cArBgD,EAuBLC,oBAAS,GAvBJ,mBAuB1D0L,EAvB0D,KAuBlC1C,EAvBkC,KAiDjE,OAAK1M,EAUH,uBAAKlJ,UAAWE,KAAEqY,cAAlB,UACE,uBAAKvY,UAAWE,KAAEmN,WAAlB,UACE,eAACO,EAAA,EAAD,CAAQC,MAAO3E,EAAQoC,OAAOwC,MAAOjN,KAAK,cAA1C,SACGmQ,IAAYnH,GACX,sBAAK7J,UAAWE,KAAEsY,OAAQ7K,MAAM,gBAAhC,SACE,yBAAO4I,QAAQ,WAAf,UACE,sBAAKvW,UAAWE,KAAEuY,QAAlB,SACE,sBAAKnY,IAAKkY,GAAQ/X,IAAI,WAExB,wBACEE,GAAG,WACHwN,QAAM,EACN/K,KAAK,OACLyM,SA3CU,SAAC1J,GAA4C,IAAD,EbgJrEuS,Ga/IC,UAAIvS,EAAE2J,OAAO6I,aAAb,aAAI,EAAgBzU,SAClBJ,Gb8IH4U,Ea9I2BvS,EAAE2J,OAAO6I,MAAM,Gb8I3C,uCACA,WAAO7U,GAAP,eAAAE,EAAA,sEACyB8F,GAAWG,aAAayO,GADjD,QACQpW,EADR,QAEekC,aAAeC,KAAgBC,SAC1CZ,EAASb,GAAQoI,iBAAiB/I,EAASC,KAAK+I,SAHpD,2CADA,kEa9FO0F,IAAYnH,GACX,eAACmG,EAAA,EAAD,CACEtC,QA9CgB,WACxB5J,EAASb,GAAQwI,oBAAmB,KA8C5BgE,QAAQ,WACRQ,MA3EoC,CAC5CoI,SAAU,GACVO,UAAW,IA0EH9H,UAAW,eAAC,KAAD,CAAUb,MAAO,CAAEoI,SAAU,MAJ1C,0BAUDxO,GACC,uBAAK7J,UAAWE,KAAE2Y,4BAAlB,UACE,eAAC7I,EAAA,EAAD,CACEtC,QAtDc,WACxBkI,GAA0B,GAC1B9R,EAASgV,aAAO,iBAqDNjF,UAAWyE,EACX7I,QAAQ,YACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxC2P,WAAS,EACTS,MAAOmI,EACPtH,UAAW,eAAC,KAAD,IAPb,kBAWA,eAACd,EAAA,EAAD,CACEtC,QA5DgB,WAC1BkI,GAA0B,GAC1B9R,EAASb,GAAQwI,oBAAmB,KA2D1BgE,QAAQ,WACRD,WAAS,EACTS,MAAOmI,EACPtH,UAAW,eAAC,IAAD,IALb,uBAYHjH,GAAqBR,GACpB,eAAC,GAAD,UACE,sBAAKrJ,UAAWE,KAAE6Y,YAAlB,SAAgC1P,SAKtC,uBAAKrJ,UAAWE,KAAEgO,YAAlB,WACIrE,GACA,sBAAKlJ,GAAG,qBAAqBX,UAAWE,KAAE+N,SAA1C,SACG/E,EAAQ+E,YAIXpE,GAAqB,eAAC,GAAD,CAAemH,QAASA,IAE9CnH,EACC,eAAC,GAAD,CACEoN,cAAe/N,EACfgO,SA7Gc,SAAC7B,GACvBvR,Eb4JF,SAACoF,GAAD,8CACA,WAAOpF,EAAUC,GAAjB,iBAAAC,EAAA,sEACyB8F,GAAWQ,eAAepB,GADnD,OACQ5G,EADR,OAEUa,EAAWY,IAAWvC,KAAtB2B,OAEJb,EAASkC,aAAeC,KAAgBC,UAC1CZ,EAAS6H,GAAexI,IACxBW,EAASb,GAAQsI,uBAAuB,6BACxCvF,WAAWlC,EAAU,IAAMb,GAAQsI,uBAAuB,KAC1DzH,EAASb,GAAQuI,yBAAyB,MAGxClJ,EAASkC,aAAeC,KAAgBuU,OAO1ClV,EAASb,GAAQuI,yBAAyBlJ,EAASgF,SAAS,KAlBhE,2CADA,wDa5JW2R,CAAiB5D,KA6GlB9L,qBAAsBA,EACtBqM,0BAA2BA,IAG7B,eAAC,GAAD,CAAa1M,QAASA,OAI1B,eAACyO,GAAD,OA5FA,uCACE,eAAChY,GAAA,EAAD,IACA,eAAC,GAAD,CAAaqR,QAASA,Q,UChExBkI,G,uKACJ,WACEC,KAAKC,mB,gCAGP,SAAmBC,GACCF,KAAKvX,MAAf0X,MAEEC,OAAO3N,SAAWyN,EAAUC,MAAMC,OAAO3N,QACjDuN,KAAKC,mB,kCAIT,WAAwB,IAAD,EAC6BD,KAAKvX,MAA/CiI,EADa,EACbA,kBAAmB4B,EADN,EACMA,mBACvB5B,GACF4B,GAAmB,K,4BAIvB,WAAiB,MAGb0N,KAAKvX,MADC0X,EAFO,EAEPA,MAAOE,EAFA,EAEAA,iBAAkBC,EAFlB,EAEkBA,QAAS9N,EAF3B,EAE2BA,eAAgBxC,EAF3C,EAE2CA,UAEtDyC,GAAyB0N,EAAMC,OAAO3N,OAErCA,IACHA,EAAS4N,IAEPC,EAAQtS,KAAK,UAIjBwE,EAAeC,GACfzC,EAAUyC,K,oBAGZ,WAAyC,IAAD,EACiBuN,KAAKvX,MAApD0X,EAD8B,EAC9BA,MAAOE,EADuB,EACvBA,iBAAkB3P,EADK,EACLA,kBAC3BmH,GAAWsI,EAAMC,OAAO3N,SAAW4N,EAEzC,OACE,uCACE,eAAC,GAAD,CAAsBxI,QAASA,KAC7BnH,GAAqBmH,GAAW,eAAC,GAAD,W,GA5CX7E,IAAMuN,eAyDtBC,eACbhY,aARsB,SAACL,GACvB,MAAO,CACLkY,iBAAkBlY,EAAME,KAAK2B,OAC7B0G,kBAAmBD,EAAmBtI,MAUrB,CACjBqK,kBACAxC,UduGF,SAACxI,GAAD,8CACA,WAAOmD,GAAP,eAAAE,EAAA,sEACyB8F,GAAWX,UAAUxI,GAD9C,OACQ2B,EADR,OAEEwB,EAASb,GAAQmI,UAAU9I,IAF7B,2CADA,uDctGEmJ,mBAAoBxI,GAAQwI,qBAE9BmO,IACAnY,KAZakY,CAabT,IC1Ga,OAA0B,2C,oBCc1BW,GAVkB,WAC/B,OACE,sBAAK7Z,UAAWE,KAAEkB,UAAlB,SACE,sBAAKpB,UAAWE,KAAEG,KAAlB,SACE,sBAAKC,IAAKwZ,GAAgBrZ,IAAI,mB,8DCRvB,OAA0B,iC,SC6C1BsZ,GAhCC,CACRC,GADQ,WACF,OAAD,0HACc5X,KAASC,IAC9B,WAFO,cACHC,EADG,yBAIFA,EAASC,MAJP,8CAMLkG,MAPQ,SAQZwR,EACAC,GAGC,IAAD,wIAFAC,EAEA,gCADAC,EACA,+BADyB,KACzB,SACuBhY,KAASK,KAK9B,cAAe,CACfwX,QACAC,WACAC,aACAC,YAVF,cACM9X,EADN,yBAYOA,EAASC,MAZhB,8CAcI8X,OA1BQ,WA0BE,OAAD,0HACUjY,KAASO,OAA4B,eAD/C,cACPL,EADO,yBAENA,EAASC,MAFH,+CCxBF+X,GATK,CACZ1R,cADY,WACK,OAAD,0HACGxG,KAASC,IAC9B,4BAFkB,cACdC,EADc,yBAIbA,EAASC,MAJI,+CCClBK,GAAe,CACnBO,OAAQ,KACR8W,MAAO,KACPxR,MAAO,KACPlH,QAAQ,EACRsH,WAAY,KACZE,QAAS,MA2BL9F,GACa,SACfE,EACA8W,EACAxR,EACAlH,GAJe,MAKX,CACJ6B,KAAM,gBACNmE,QAAS,CACPpE,SACA8W,QACAxR,QACAlH,YAZA0B,GAgBQ,SAAC4F,GAAD,MAAgC,CAC1CzF,KAAM,0BACNmE,QAAS,CAAEsB,gBAlBT5F,GAqBQ,SAAC4K,GAAD,MAA2B,CACrCzK,KAAM,eACNmE,QAAS,CAAEsG,WAIF0M,GAAuB,yDAAiB,WAAOzW,GAAP,6BAAAE,EAAA,sEAC5B+V,GAAQC,KADoB,WAC7C1X,EAD6C,QAGtCkC,aAAeC,KAAgBC,UAAU,EACvBpC,EAASC,KAA9B5B,EAD2C,EAC3CA,GAAIsZ,EADuC,EACvCA,MAAOxR,EADgC,EAChCA,MACnB3E,EAASb,GAAwBtC,EAAIsZ,EAAOxR,GAAO,KAGjDnG,EAASkC,aAAeC,KAAgBuU,QACpC5R,EAAU9E,EAASgF,SACnBvC,EAASyV,aAAW,YAAa,CACrCC,OAAQrT,EAAQlD,OAAS,EAAIkD,EAAQ,GAAK,eAI5CtD,EAASiB,IAG+B,IAAtCqQ,OAAOK,KAAKnT,EAASC,MAAM2B,OAlBoB,iCAmBzB4F,GAAWd,WAAW1G,EAASC,KAAK5B,IAnBX,OAmB3C+Z,EAnB2C,OAoBjD5W,EAASb,GAAmByX,EAAUpP,OAAOwC,QApBI,4CAAjB,uDA8BvB6M,GACX,SACEV,EACAC,EACAC,EACAC,GAJF,8CAMA,WAAOtW,GAAP,mBAAAE,EAAA,sEACyB+V,GAAQtR,MAAMwR,EAAOC,EAAUC,EAAYC,GADpE,QACQ9X,EADR,QAGekC,aAAeC,KAAgBC,UAC1CZ,EAASyW,MACTzW,EAASb,GAAmB,QAG1BX,EAASkC,aAAeC,KAAgBuU,QACpC5R,EAAU9E,EAASgF,SACnBvC,EAASyV,aAAW,YAAa,CACrCC,OAAQrT,EAAQlD,OAAS,EAAIkD,EAAQ,GAAK,eAI5CtD,EAASiB,IAGPzC,EAASkC,aAAeY,KAAqBwV,mBAC/C9W,EAhCkB,uCAAiB,WAAOA,GAAP,iBAAAE,EAAA,sEAChBsW,GAAY1R,gBADI,OACjCtG,EADiC,OAEjC8X,EAAU9X,EAASuY,IACzB/W,EAASb,GAAmBmX,IAHW,2CAAjB,uDAatB,2CANA,uDA6BWU,GAAc,yDAAiB,WAAOhX,GAAP,SAAAE,EAAA,sEACnB+V,GAAQM,SADW,cAG7B7V,aAAeC,KAAgBC,UAC1CZ,EAASb,GAAwB,KAAM,KAAM,MAAM,IACnDa,EAASb,GAAmB,QALY,2CAAjB,uDASZ8X,GAxHK,WAGI,IAFtBzZ,EAEqB,uDAFbsB,GACRmC,EACqB,uCACrB,OAAQA,EAAO3B,MACb,IAAK,gBACL,IAAK,0BACH,OAAO,2BACF9B,GACAyD,EAAOwC,SAGd,IAAK,eACH,OAAO,2BACFjG,GADL,IAGEyH,QAAShE,EAAOwC,QAAQsG,QAG5B,QACE,OAAOvM,IChCPsB,GAAe,CACnB2F,aAAa,EACb1I,MAAO,UAyBIoD,GACS,iBAAO,CAAEG,KAAM,wBADxBH,GAED,SAACpD,GAAD,MAAuB,CAAEuD,KAAM,eAAgBvD,UAQ5Cmb,GAhCI,WAGK,IAFtB1Z,EAEqB,uDAFbsB,GACRmC,EACqB,uCACrB,OAAQA,EAAO3B,MACb,IAAK,sBACH,OAAO,2BACF9B,GADL,IAEEiH,aAAa,IAGjB,IAAK,eACH,OAAO,2BACFjH,GADL,IAEEzB,MAAOkF,EAAOlF,QAGlB,QACE,OAAOyB,ICuFP2Z,GAAyC,SAACrZ,GAAW,IACjD/B,EAAqC+B,EAArC/B,MAAOqb,EAA8BtZ,EAA9BsZ,WAAYC,EAAkBvZ,EAAlBuZ,cACrBrX,EAAW6I,cAEXyO,EAAoB,WACxBtX,EAASb,GAAgC,WAAfiY,EAA0B,SAAW,WAC/DC,EAA6B,WAAfD,EAA0B,SAAW,WAGrD,OACE,uCACE,uBAAMlb,UAAWE,KAAEmb,mBAAnB,SACE,eAACrL,EAAA,EAAD,CACEN,MAAiB,WAAV7P,EAAqB,UAAY,YACxCoQ,MAAO,CAAE8B,QAAS,WAAYuJ,YAAa,QAC3C5N,QAAS0N,EACTtK,UAAW,eAAC,KAAD,IAJb,4BAUF,uBAAM3C,QAAM,EAACnO,UAAWE,KAAEqb,kBAA1B,SACE,eAACnN,EAAA,EAAD,CACEV,QAAS0N,EACT7K,aAAW,cACXnN,KAAK,SACL6M,MAAO,CAAEE,OAAQ,UACjBxC,MAAM,eALR,SAOE,eAAC,KAAD,CACE+B,MAAiB,WAAV7P,EAAqB,UAAY,sBAOrC2b,GAjIU,WACvB,IAAMja,EAASzB,YAAY4I,MACrBD,EAAQ3I,YAAY0I,MACpBiT,EAAO3b,YAAY6I,MACnBI,EAAUjJ,YAAYgJ,MACtBjJ,EAAQC,YAAYC,KACpB+D,EAAW6I,cANY,EAQOC,mBAAS/M,GARhB,mBAQtBqb,EARsB,KAQVC,EARU,KA8B7B,OApBAlO,qBAAU,WAaR,IAZA,IAAMyO,EAAS,CACbC,KAAK,oBAAD,OAAsBT,EAAtB,KACJU,UAAU,yBAAD,OAA2BV,EAA3B,KACTW,WAAW,0BAAD,OAA4BX,EAA5B,KACVY,SAAS,wBAAD,OAA0BZ,EAA1B,KACRa,SAAS,wBAAD,OAA0Bb,EAA1B,KACRc,oBAAoB,mCAAD,OAAqCd,EAArC,MAGfzF,EAAOL,OAAOK,KAAKiG,GACnBrG,EAASD,OAAOC,OAAOqG,GAEpBO,EAAI,EAAGA,EAAIxG,EAAKvR,OAAQ+X,IAC/B5I,SAAS4E,KAAKhI,MAAMiM,YAApB,kBAA2CzG,EAAKwG,IAAM5G,EAAO4G,MAE9D,CAACpc,EAAOqb,IAEX1M,GAAgB,QAAS3O,EAAOoD,GAAkBkY,GAGhD,0BAAQnb,UAAWE,KAAEic,OAArB,UACE,gBAAC,IAAD,CAASnc,UAAWE,KAAEkc,aAAcrb,GAAG,WAAvC,UACE,sBAAKT,IAAK+b,GAAM5b,IAAI,SACpB,uBAAMT,UAAWE,KAAEoc,mBAAnB,4BACA,uBAAMnO,QAAM,EAACnO,UAAWE,KAAEqc,kBAA1B,mBAKF,sBAAKvc,UAAWE,KAAEsc,YAAlB,SACGjb,EACC,uCACE,uBAAKvB,UAAWE,KAAEuc,cAAlB,UACE,eAAC7O,EAAA,EAAD,CAAQC,MAAO9E,EAASlI,KAAK,QAAQF,GAAI8a,IACzC,uBAAMzb,UAAWE,KAAEwc,UAAnB,SAA+BjU,OAGjC,eAAC,GAAD,CACE5I,MAAOA,EACPqb,WAAYA,EACZC,cAAeA,IAGjB,uBAAMnb,UAAWE,KAAEyc,oBAAnB,SACE,eAAC3M,EAAA,EAAD,CACEtC,QAAS,kBAAM5J,EAASgX,OACxBrL,QAAQ,WACRQ,MAAO,CAAEqL,YAAa,QACtBxK,UAAW,eAAC,KAAD,IAJb,uBASF,uBAAM3C,QAAM,EAACnO,UAAWE,KAAE0c,mBAA1B,SACE,eAACxO,EAAA,EAAD,CACET,MAAM,oBACND,QAAS,kBAAM5J,EAASgX,OAF1B,SAIE,eAAC,KAAD,WAKN,eAAC,GAAD,CACEjb,MAAOA,EACPqb,WAAYA,EACZC,cAAeA,U,oBCpCrB0B,GAAwC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACzD,OACE,sBACE3M,MAAM,KACNS,OAAO,KACPmM,QAAQ,YACRhd,UAAWC,IAAGC,KAAE+c,WAAH,eACV/c,KAAEgd,WAAaJ,IAAaC,IALjC,SASE,uBAAMI,EAAE,sIAKRC,GAAqC,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SAC5C,OACE,sBACE1M,MAAM,KACNS,OAAO,KACPmM,QAAQ,YACRhd,UAAWC,IAAGC,KAAE+c,WAAH,eACV/c,KAAEgd,WAA0B,UAAbJ,IALpB,SASE,uBAAMK,EAAE,+EAKRE,GAAsC,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SAC7C,OACE,sBACE1M,MAAM,KACNS,OAAO,KACPmM,QAAQ,YACRhd,UAAWC,IAAGC,KAAE+c,WAAH,eACV/c,KAAEgd,WAA0B,WAAbJ,IALpB,SASE,uBAAMK,EAAE,qdAKRG,GAAwC,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SAC/C,OACE,sBACE1M,MAAM,KACNS,OAAO,KACPmM,QAAQ,YACRhd,UAAWC,IAAGC,KAAE+c,WAAH,eACV/c,KAAEgd,WAA0B,aAAbJ,IALpB,SASE,uBAAMK,EAAE,wkBAKCvD,gBApH+C,SAAC,GAExD,IADOkD,EACR,EADJS,SAAYT,SAENtD,EAAmB1Z,YAAY6I,MAC/BoU,EAAU,mBAAevD,GAE/B,OACE,uBAAKxZ,UAAWE,KAAEsd,IAAK7c,GAAG,SAA1B,UACE,gBAAC,IAAD,CACE8c,OAAK,EACL1c,GAAIgc,EACJW,gBAAiBxd,KAAEyd,OACnB3d,UAAWE,KAAE0d,QACb5c,SAAO,EALT,UAOE,eAAC,GAAD,CAAa8b,SAAUA,EAAUC,WAAYA,IAP/C,aAWA,gBAAC,IAAD,CACEhc,GAAG,QACH2c,gBAAiBxd,KAAEyd,OACnB3d,UAAWE,KAAE0d,QACb5c,SAAO,EAJT,UAME,eAAC,GAAD,CAAU8b,SAAUA,IANtB,UAUA,gBAAC,IAAD,CACE/b,GAAG,SACH2c,gBAAiBxd,KAAEyd,OACnB3d,UAAWE,KAAE0d,QACb5c,SAAO,EAJT,UAME,eAAC,GAAD,CAAW8b,SAAUA,IANvB,gBAUA,gBAAC,IAAD,CACE/b,GAAG,WACH2c,gBAAiBxd,KAAEyd,OACnB3d,UAAWE,KAAE0d,QACb5c,SAAO,EAJT,UAME,eAAC,GAAD,CAAa8b,SAAUA,IANzB,mB,oBCsIAe,GAAiB9G,aAA6C,CAClE3H,KAAM,YACN0O,SAzKe,SAACzI,GAOhB,IAAM0I,EAAqB,GAS3B,OANE1I,EAAO4E,QACN,4CAA4C+D,KAAK3I,EAAO4E,SAEzD8D,EAAO9D,MAAQ,yBAGV8D,IAuJchH,EAxGnB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAActQ,EAAwB,EAAxBA,MAAOmC,EAAiB,EAAjBA,WACpBoV,EAAoB,CACxB5F,SAAU,GACV6F,WAAY,IACZxO,MAAO,QACPQ,WAAY,gDAGRiO,EAAqB,aACzBC,aAAc,QACXH,GAGCna,EAAW6I,cACX9M,EAAQC,YAAYC,KAS1B,OACE,qCACE,wBAAMmX,SAAUF,EAAhB,UACE,sBAAKhX,UAAWE,KAAEme,oBAAlB,SACE,uBAAKre,UAAWE,KAAEoe,WAAlB,UACE,sBAAKte,UAAWE,KAAEqe,IAAlB,SACE,eAAChH,GAAA,EAAD,CACEC,UAAW1B,GACXlV,KAAK,QACLmV,MAAM,SACN3S,KAAK,QACLoM,WAAS,MAGb,sBAAKxP,UAAWE,KAAEqe,IAAlB,SACE,eAAChH,GAAA,EAAD,CACEC,UAAW1B,GACXlV,KAAK,WACLmV,MAAM,YACN3S,KAAK,WACLoM,WAAS,MAGb,sBAAKxP,UAAWC,IAAGC,KAAEqe,IAAKre,KAAEse,aAA5B,SACE,eAACjH,GAAA,EAAD,CACEC,UAAWhB,GACX5V,KAAK,aACLmV,MAAM,kBAITlN,GAAc,sBAAKvI,IAAKuI,EAAYpI,IAAI,YACxCoI,GACC,eAAC0O,GAAA,EAAD,CAAOC,UAAW1B,GAAiBtG,WAAS,EAAC5O,KAAK,YAGpD,uBAAKZ,UAAWE,KAAEqe,IAAlB,UACE,eAACvO,EAAA,EAAD,CACE5M,KAAK,SACLqM,QAAQ,YACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxC2P,WAAS,EACTS,MAAOgO,EALT,oBAUCvX,GACC,sBAAK1G,UAAWE,KAAEue,UAAlB,SACa,2BAAV/X,EACC,uCACE,oEACA,sCACA,wHAMFA,YAOZ,oCACA,eAACsJ,EAAA,EAAD,CACEtC,QA3EuB,WAI7B5J,EAAS6W,GAHK,qBACG,QAEoB,EAAO,QAwEtClL,QAAQ,YACRC,MAAiB,WAAV7P,EAAqB,UAAY,YACxC2P,WAAS,EACTS,MAAOkO,EALT,2CAmBOO,GA9IS,WACtB,IAAMnd,EAASzB,YAAY4I,MACrBG,EAAa/I,YAAY8I,MACzBzF,EAASrD,YAAY6I,MACrB7E,EAAW6I,cAajB,OAAIpL,EACK,eAAC,IAAD,CAAUR,GAAE,mBAAcoC,KAIjC,sBAAKnD,UAAWE,KAAEG,KAAlB,SACE,uBAAKL,UAAWE,KAAE+X,KAAlB,UACE,yCACA,eAAC4F,GAAD,CAAgB3G,SAnBL,SAAC7B,GAChBvR,EACE6W,GACEtF,EAAO4E,MACP5E,EAAO6E,SACP7E,EAAO8E,WACP9E,EAAO+E,WAa6BvR,WAAYA,UC3CzC8V,G,kDA5Bb,WAAY/c,GAAQ,IAAD,8BACjB,cAAMA,IACDN,MAAQ,CAAEoF,MAAO,MAFL,E,qDAKnB,SAAkBA,GAChByS,KAAKyF,SAAS,CAAElY,Y,oBAGlB,WAAU,IACAA,EAAUyS,KAAK7X,MAAfoF,MACAqR,EAAaoB,KAAKvX,MAAlBmW,SAER,OAAIrR,EAEA,iCACE,uDACA,0BAASuJ,MAAO,CAAE4O,WAAY,YAA9B,gBACGnY,QADH,IACGA,OADH,EACGA,EAAOoY,gBAMT/G,M,GAzBiB5L,IAAM4S,WCQnBC,OAPf,SAA2Btd,GACzB,OAAO,SAACE,GAAD,OACL,eAAC,WAAD,CAAUqd,SAAU,eAACtf,GAAA,EAAD,IAApB,SACE,eAAC+B,EAAD,eAAsBE,Q,qBCYtBsd,GAAgB/S,IAAMgT,MAAK,kBAAM,uDACjCC,GAAiBjT,IAAMgT,MAC3B,kBAAM,iCAEFE,GAAmBlT,IAAMgT,MAC7B,kBAAM,iCAGFG,GAAgBN,GAAaE,IAC7BK,GAAiBP,GAAaI,IAC9BI,GAAmBR,GAAaK,IAqDvBI,GADM7F,aAlDC,WACpB,IAAMzW,EAASrD,YAAY6I,MACrBJ,EAAczI,YAAYuI,KAC1BvE,EAAW6I,cAMjB,OAJAR,IAAMc,WAAU,WACdnJ,ENC8B,uCAAiB,WAAOA,GAAP,SAAAE,EAAA,sEAC3CF,EAASyW,MADkC,OAEjDzW,EAASb,MAFwC,2CAAjB,yDMA7B,CAACa,IAECyE,EAKH,sBAAKvI,UAAWE,KAAEwf,IAAlB,SACE,sBAAK1f,UAAWE,KAAEkB,UAAlB,SACE,uBAAKpB,UAAWE,KAAEyf,WAAlB,UACE,eAAC,GAAD,IACA,eAAC,GAAD,IAEA,sBAAK3f,UAAWE,KAAE0f,kBAAlB,SACE,eAAC,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAUC,KAAK,qBAAqB9e,GAAG,MAEvC,eAAC,IAAD,CACE+e,KAAK,mBACLC,OAAQ,kBAAM,eAAC,GAAD,OAGhB,eAAC,IAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,eAACT,GAAD,OAElC,eAAC,IAAD,CAAOQ,KAAK,WAAWC,OAAQ,kBAAM,eAACP,GAAD,OAErC,eAAC,IAAD,CAAOM,KAAK,SAASC,OAAQ,kBAAM,eAACR,GAAD,OAEnC,eAAC,IAAD,CAAOO,KAAK,SAASC,OAAQ,kBAAM,eAAC,GAAD,OAEnC,eAAC,IAAD,CAAUtC,OAAK,EAACoC,KAAK,IAAI9e,GAAE,mBAAcoC,KAEzC,eAAC,IAAD,CAAU0c,KAAK,IAAI9e,GAAG,oBA9B3B,eAAC,GAAD,O,wCCxBLif,GAAcC,YAAgB,CAClChX,YAAa4C,GACb5H,UAAWa,KACXtD,KAAMuZ,GACNzS,IAAK0S,GACL5L,KAAM8Q,KACNC,KAAMpY,OAwBFqY,GAAmBC,OAAOC,sCAAwC3G,IAOzD4G,GALDC,YACZR,GACAI,GAAiBK,YAAgBC,QClC/B7gB,I,OAAQ8gB,YAAe,CACzBC,QAAS,CACPxd,KAAM,OAGNyd,QAAS,CACPC,KAAM,WAGRC,UAAW,CACTD,KAAM,eAMZjhB,GAAQmhB,YAAoBnhB,IAE5BohB,IAASlB,OACP,eAAC,IAAD,UACE,eAACmB,EAAA,EAAD,CAAerhB,MAAOA,GAAtB,SACE,gBAAC,IAAD,CAAU0gB,MAAOA,GAAjB,UACE,eAACY,EAAA,EAAD,IACA,eAAC,GAAD,WAIN9N,SAASuE,eAAe,U,mBC1C1BnY,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,eAAiB,oCAAoC,gBAAkB,qCAAqC,WAAa,gCAAgC,WAAa,gCAAgC,SAAW,8BAA8B,WAAa,gCAAgC,aAAe,kCAAkC,aAAe,kCAAkC,SAAW,8BAA8B,aAAe,oC,mBCAngBD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,UAAY,mCAAmC,KAAO,8BAA8B,QAAU,iCAAiC,iBAAmB,0CAA0C,aAAe,sCAAsC,qBAAuB,gD,mBCA/TD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,mBAAqB,mCAAmC,kBAAoB,kCAAkC,YAAc,4BAA4B,cAAgB,8BAA8B,UAAY,0BAA0B,mBAAqB,mCAAmC,kBAAoB,kCAAkC,oBAAsB,oCAAoC,mBAAqB,qC,mBCAvgBD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,oBAAsB,mCAAmC,WAAa,0BAA0B,IAAM,mBAAmB,YAAc,2BAA2B,UAAY,2B,mBCAtPD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,YAAc,sCAAsC,YAAc,sCAAsC,SAAW,qC,mBCA7KD,EAAOC,QAAU,CAAC,OAAS,qCAAqC,QAAU,sCAAsC,cAAgB,4CAA4C,WAAa,yCAAyC,YAAc,0CAA0C,sBAAwB,oDAAoD,SAAW,uCAAuC,4BAA8B,0DAA0D,YAAc,0CAA0C,KAAO,qC,mBCA/iBD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,4BAA4B,iBAAmB,wCAAwC,WAAa,kCAAkC,KAAO,4BAA4B,OAAS,8BAA8B,YAAc,mCAAmC,SAAW,kC,mBCAlVD,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,gBAAkB,mCAAmC,KAAO,0B,mBCAvID,EAAOC,QAAU,CAAC,UAAY,+BAA+B,OAAS,4BAA4B,KAAO,0BAA0B,MAAQ,2BAA2B,UAAY,+BAA+B,WAAa,kC,mBCA9ND,EAAOC,QAAU,CAAC,WAAa,2BAA2B,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,8B,6GCqD9L0hB,EAAkC,SAAC,GAIlC,IAHLvT,EAGI,EAHJA,MAGI,IAFJhN,YAEI,MAFG,SAEH,EADJkX,EACI,EADJA,SAEA,OACE,sBAAK/X,UAAWE,IAAEmhB,WAAlB,UACE,qBACErhB,UAAWC,IACTC,IAAEqN,OADS,eAERrN,IAAEohB,YAAuB,gBAATzgB,GAFR,eAGRX,IAAE4N,MAAiB,UAATjN,GAHF,eAIRX,IAAEqhB,OAAkB,WAAT1gB,GAJH,eAKRX,IAAEshB,MAAiB,UAAT3gB,IANjB,SASE,qBAAKP,IAAKuN,GAASE,IAAStN,IAAI,aAEjCsX,MAKQnK,IA3DoC,SAAC,GAK7C,IAOD6T,EAXJ5T,EAII,EAJJA,MAII,IAHJhN,YAGI,MAHG,SAGH,EAFJF,EAEI,EAFJA,GACAoX,EACI,EADJA,SAeA,OALE0J,GADF,OAAI5T,QAAJ,IAAIA,OAAJ,EAAIA,EAAOT,SAAS,SACN,KAEAS,EAIZ,mCACGlN,EACC,cAAC,IAAD,CAASI,GAAE,mBAAcJ,GAAMK,SAAO,EAAtC,SACE,cAACogB,EAAD,CAAYvT,MAAO4T,EAAW5gB,KAAMA,EAApC,SACGkX,MAIL,cAACqJ,EAAD,CAAYvT,MAAO4T,EAAW5gB,KAAMA,EAApC,SACGkX,S","file":"static/js/main.e1b64693.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__2Avml\",\"container\":\"App_container__3kpCf\",\"appWrapper\":\"App_appWrapper__1cqFv\",\"appWrapperContent\":\"App_appWrapperContent__1OUHu\"};","export default __webpack_public_path__ + \"static/media/preloaderTheme1.364be474.svg\";","export default __webpack_public_path__ + \"static/media/preloaderTheme2.6aed94f2.svg\";","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport preloaderTheme1 from '../../../img/preloader/preloaderTheme1.svg'\nimport preloaderTheme2 from '../../../img/preloader/preloaderTheme2.svg'\nimport s from './Preloader.module.scss'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\ntype PropsType = {\n  display?: 'default' | 'block'\n}\n\nconst Preloader: React.FC<PropsType> = ({ display = 'default' }) => {\n  const theme = useSelector(getTheme)\n\n  return (\n    <div\n      className={cn(\n        { [s.container_default]: display === 'default' },\n        { [s.container_block]: display === 'block' }\n      )}\n    >\n      <div className={s.wrap}>\n        <img\n          src={theme === 'theme1' ? preloaderTheme1 : preloaderTheme2}\n          alt='preloader'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Preloader\n","export default __webpack_public_path__ + \"static/media/no_photo.8bf0768a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__EUDyG\",\"name__small\":\"Name_name__small__19ccJ\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Name.module.scss'\n\ntype PropsType = {\n  id: number | undefined\n  name: string | undefined\n  size?: 'small' | 'normal'\n}\n\nconst Name: React.FC<PropsType> = ({ id, name, size = 'normal' }) => {\n  return (\n    <span>\n      <NavLink\n        className={cn(s.name, { [s.name__small]: size === 'small' })}\n        to={`/profile/${id || '/login'}`}\n        replace\n      >\n        {name || 'no name'}\n      </NavLink>\n    </span>\n  )\n}\n\nexport default Name\n","import React from 'react'\nimport s from './NoElement.module.scss'\n\ntype PropsType = {\n  elements: string\n  writeSomething?: boolean\n}\n\nconst NoElement: React.FC<PropsType> = ({\n  elements,\n  writeSomething = false,\n}) => {\n  return (\n    <div className={s.container}>\n      <span>{`No ${elements} ${elements === 'users' ? 'found' : ''}`}</span>\n      {writeSomething && <span>Write something!</span>}\n    </div>\n  )\n}\n\nexport default NoElement\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../redux/redux-store'\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n  isAuth: state.auth.isAuth,\n})\n\ntype MapStatePropsType = {\n  isAuth: boolean\n}\n\n// WCP - пропсы WrappedComponent\nexport default function withAuthRedirect<WCP>(\n  WrappedComponent: React.ComponentType<WCP>\n) {\n  const RedirectComponent: React.FC<MapStatePropsType & unknown> = (props) => {\n    const { isAuth, ...restProps } = props\n\n    if (!isAuth) return <Redirect to='/login' />\n\n    return <WrappedComponent {...(restProps as WCP)} />\n  }\n\n  return connect<MapStatePropsType, never, WCP, AppStateType>(\n    mapStateToPropsForRedirect\n  )(RedirectComponent)\n}\n","import { UserType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype GetUsersType = {\n  items: Array<UserType>\n  totalCount: number\n  error: string\n}\n\nconst usersAPI = {\n  async getUsers(\n    currentPage = 1,\n    pageSize: number,\n    term?: string,\n    friend?: boolean\n  ) {\n    const response = await instance.get<GetUsersType>(\n      `users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`\n    )\n    return response.data\n  },\n  async followUser(id: number) {\n    const response = await instance.post<DefaultResponseType>(\n      `follow/${id}`,\n      {}\n    )\n    return response.data\n  },\n  async unfollowUser(id: number) {\n    const response = await instance.delete<DefaultResponseType>(`follow/${id}`)\n    return response.data\n  },\n}\n\nexport default usersAPI\n","import { Dispatch } from 'redux'\nimport { DefaultResponseType, ResultCodesEnum } from '../../api/api'\nimport usersAPI from '../../api/users-api'\nimport { UserType } from '../../types/types'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nconst initialState = {\n  users: [] as Array<UserType>,\n\n  pageSize: 10,\n  totalUsersCount: 0,\n\n  isFetching: true,\n  // disabling the button after pressing\n  followingInProgress: [] as Array<number>, // array of users ID\n}\n\nconst usersReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'FOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: true }\n          }\n          return u\n        }),\n      }\n    }\n    case 'UNFOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: false }\n          }\n          return u\n        }),\n      }\n    }\n    case 'SET_USERS': {\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    }\n    case 'ADD_USERS': {\n      return {\n        ...state,\n        users: [...state.users, ...action.users],\n      }\n    }\n    case 'CLEAR_USERS': {\n      return {\n        ...state,\n        users: [],\n      }\n    }\n    case 'SET_TOTAL_USERS_COUNT': {\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      }\n    }\n    case 'TOGGLE_IS_FETCHING': {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n    }\n    case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userID]\n          : state.followingInProgress.filter((id) => id !== action.userID),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  followSuccess: (userID: number) => ({ type: 'FOLLOW', userID } as const),\n  unfollowSuccess: (userID: number) => ({ type: 'UNFOLLOW', userID } as const),\n\n  setUsers: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\n  addUsers: (users: Array<UserType>) => ({ type: 'ADD_USERS', users } as const),\n  setTotalUsersCount: (totalUsersCount: number) =>\n    ({\n      type: 'SET_TOTAL_USERS_COUNT',\n      count: totalUsersCount,\n    } as const),\n  clearUsers: () => ({ type: 'CLEAR_USERS' } as const),\n\n  toggleIsFetching: (isFetching: boolean) =>\n    ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const),\n  toggleFollowingProgress: (isFetching: boolean, userID: number) =>\n    ({\n      type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n      isFetching,\n      userID,\n    } as const),\n}\n\nexport const getUsers =\n  (page: number, term: string, friend?: boolean): ThunkType =>\n  async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true))\n\n    const response = await usersAPI.getUsers(\n      page,\n      getState().usersPage.pageSize,\n      term,\n      friend\n    )\n\n    // первичная загрузка\n    if (term.length === 0 && page === 1) {\n      dispatch(actions.setUsers(response.items))\n    }\n    // получение больше пользователей\n    if (page > 1) {\n      dispatch(actions.addUsers(response.items))\n    }\n    // первичный поиск\n    if (term.length > 0 && page === 1) {\n      dispatch(actions.clearUsers())\n      dispatch(actions.setUsers(response.items))\n    }\n\n    dispatch(actions.setTotalUsersCount(response.totalCount))\n    dispatch(actions.toggleIsFetching(false))\n  }\n\ntype DispatchType = Dispatch<ActionsTypes>\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  id: number,\n  apiMethod: (id: number) => Promise<DefaultResponseType>,\n  actionCreator: (id: number) => ActionsTypes\n) => {\n  dispatch(actions.toggleFollowingProgress(true, id))\n  const response = await apiMethod(id)\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actionCreator(id))\n  }\n  dispatch(actions.toggleFollowingProgress(false, id))\n}\n\nexport const follow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.followUser.bind(usersAPI),\n      actions.followSuccess\n    )\n  }\n\nexport const unfollow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.unfollowUser.bind(usersAPI),\n      actions.unfollowSuccess\n    )\n  }\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import axios from 'axios'\n\nexport const instance = axios.create({\n  withCredentials: true, // цепляем cookie к запросу\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': 'ddfbc45b-6923-498e-99d5-3a4897cbb31f',\n  },\n})\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n  CaptchaIsRequired = 10,\n}\n\nexport type DefaultResponseType<D = never, RC = ResultCodesEnum> = {\n  data: D\n  resultCode: RC\n  messages: Array<string> | string\n}\n","let ws: WebSocket | null = null\n\nlet subscribers = {\n  'messages-received': [] as Array<MessagesReceivedSubscriberType>,\n  'status-changed': [] as Array<StatusChangedSubscriberType>,\n}\n\ntype EventsCustomNamesType = 'messages-received' | 'status-changed'\n\nconst notifySubscribersAboutStatus = (status: StatusType) => {\n  if (subscribers) {\n    subscribers['status-changed'].forEach((s) => s(status))\n  }\n}\n\nconst reconnect = () => {\n  notifySubscribersAboutStatus('pending')\n  setTimeout(createChannel, 3000)\n}\n\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e.data)\n  if (subscribers) {\n    subscribers['messages-received'].forEach((s) => s(newMessages))\n  }\n}\n\nconst openHandler = () => {\n  notifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n  notifySubscribersAboutStatus('error')\n  // eslint-disable-next-line no-console\n  console.error('REFRESH PAGE')\n}\n\nconst cleanUp = () => {\n  ws?.removeEventListener('close', reconnect)\n  ws?.removeEventListener('message', messageHandler)\n  ws?.removeEventListener('open', openHandler)\n  ws?.removeEventListener('error', errorHandler)\n}\n\nfunction createChannel() {\n  cleanUp()\n  ws?.close()\n\n  ws = new WebSocket(\n    'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n  )\n\n  notifySubscribersAboutStatus('pending')\n\n  ws.addEventListener('close', reconnect)\n  ws.addEventListener('message', messageHandler)\n  ws.addEventListener('open', openHandler)\n  ws.addEventListener('error', errorHandler)\n}\n\nexport const chatAPI = {\n  start() {\n    createChannel()\n  },\n  stop() {\n    if (subscribers) {\n      subscribers['messages-received'] = []\n      subscribers['status-changed'] = []\n    }\n    cleanUp()\n    ws?.close()\n  },\n  subscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    if (subscribers) {\n      // @ts-ignore\n      subscribers[eventName].push(callback)\n    }\n  },\n\n  // отписка (забираем возможность api уведомлять store)\n  unsubscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    if (subscribers) {\n      // @ts-ignore\n      subscribers = subscribers[eventName]?.filter((s) => s !== callback)\n      // оставляем всех, кроме callback\n    }\n  },\n\n  sendMessage(message: string) {\n    ws?.send(message)\n  },\n}\n\nexport type ChatMessageAPIType = {\n  message: string\n  photo: string\n  userId: number\n  userName: string\n}\n\nexport type StatusType = 'pending' | 'ready' | 'error'\n\ntype MessagesReceivedSubscriberType = (\n  messages: Array<ChatMessageAPIType>\n) => void\n\ntype StatusChangedSubscriberType = (status: StatusType) => void\n","import { FormAction } from 'redux-form'\nimport { Dispatch } from 'redux'\nimport { v1 } from 'uuid'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../../api/chat-api'\n\nexport type ChatMessageType = ChatMessageAPIType & { id: string }\n\nconst initialState = {\n  messages: [] as ChatMessageType[],\n  status: 'pending' as StatusType,\n}\n\nconst chatReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'MESSAGES_RECEIVED': {\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          ...action.payload.messages.map((m) => ({ ...m, id: v1() })),\n        ].filter((item, index, array) => index >= array.length - 100),\n        // TODO v1() - вызов не чистой функции\n      }\n    }\n    case 'STATUS_CHANGED': {\n      return {\n        ...state,\n        status: action.payload.status,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  messagesReceived: (messages: ChatMessageAPIType[]) =>\n    ({\n      type: 'MESSAGES_RECEIVED',\n      payload: { messages },\n    } as const),\n  statusChanged: (status: StatusType) =>\n    ({\n      type: 'STATUS_CHANGED',\n      payload: { status },\n    } as const),\n}\n\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n  // чтобы два раза не вызывалась одна и та же функция,\n  // сначала при подписке, потом при отписке\n  if (_newMessageHandler === null) {\n    _newMessageHandler = (messages) => {\n      dispatch(actions.messagesReceived(messages))\n    }\n  }\n  return _newMessageHandler\n}\n\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\n  // чтобы два раза не вызывалась одна и та же функция,\n  // сначала при подписке, потом при отписке\n  if (_statusChangedHandler === null) {\n    _statusChangedHandler = (status) => {\n      dispatch(actions.statusChanged(status))\n    }\n  }\n  return _statusChangedHandler\n}\n\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.start()\n  chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\n  chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\n}\n\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\n  chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\n  chatAPI.stop()\n}\n\nexport const sendMessage = (message: string): ThunkType => {\n  return async () => {\n    chatAPI.sendMessage(message)\n  }\n}\n\nexport default chatReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoElement_container__kqBdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"RenderTextField_error__1byTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ProfileData_containerForm__K8-oX\",\"wrap\":\"ProfileData_wrap__35mMX\",\"aboutMe\":\"ProfileData_aboutMe__P2lzC\",\"job\":\"ProfileData_job__2Xsrz\",\"contacts\":\"ProfileData_contacts__3Ofnk\",\"title\":\"ProfileData_title__2vA5a\",\"text\":\"ProfileData_text__3l1Mc\",\"contact\":\"ProfileData_contact__2lXgR\",\"contactTitle\":\"ProfileData_contactTitle__3S8nu\",\"contactTextWrap\":\"ProfileData_contactTextWrap__2UriX\",\"contactText\":\"ProfileData_contactText__L91HK\"};","import { AppStateType } from '../redux-store'\n\nexport const getInitialized = (state: AppStateType) => state.app.initialized\n\nexport const getTheme = (state: AppStateType) => state.app.theme\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__33PA9\",\"navLink\":\"Navbar_navLink__18rsh\",\"navLinkImg\":\"Navbar_navLinkImg__214ti\",\"active\":\"Navbar_active__2U-iw\",\"activeIcon\":\"Navbar_activeIcon__3-qcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"ProfilePost_postContainer__35KIf\",\"post\":\"ProfilePost_post__173rt\",\"postDelete\":\"ProfilePost_postDelete__3Svou\",\"holeOut\":\"ProfilePost_holeOut__MiND7\",\"columnLeft\":\"ProfilePost_columnLeft__1Pvhx\",\"avatar\":\"ProfilePost_avatar__3Z3xh\",\"postSelectedTheme1\":\"ProfilePost_postSelectedTheme1__3m7zh\",\"postSelectedTheme2\":\"ProfilePost_postSelectedTheme2__2aLzJ\",\"columnCenter\":\"ProfilePost_columnCenter__2puM0\",\"message\":\"ProfilePost_message__2SAIT\",\"columnRight\":\"ProfilePost_columnRight__pR4nD\",\"wrapLike\":\"ProfilePost_wrapLike__2wFEi\",\"likesCount\":\"ProfilePost_likesCount__3DSIF\",\"like\":\"ProfilePost_like__vBOBH\",\"noLike\":\"ProfilePost_noLike__1dzSj\"};","import { AppStateType } from '../redux-store'\n\nexport const getLogin = (state: AppStateType) => state.auth.login\n\nexport const getIsAuth = (state: AppStateType) => state.auth.isAuth\n\nexport const getAuthorizedUserID = (state: AppStateType) => state.auth.userID\n\nexport const getCaptchaURL = (state: AppStateType) => state.auth.captchaURL\n\nexport const getMyPhoto = (state: AppStateType) => state.auth.myPhoto\n","import { AppStateType } from '../redux-store'\n\nexport const getProfile = (state: AppStateType) => state.profilePage.profile\n\nexport const getStatus = (state: AppStateType) => state.profilePage.status\n\nexport const getShowSuccessSave = (state: AppStateType) =>\n  state.profilePage.showSuccessSave\n\nexport const getErrorProfileContacts = (state: AppStateType) =>\n  state.profilePage.errorProfileContacts\n\nexport const getPosts = (state: AppStateType) => state.profilePage.posts\n\nexport const getPostsForDelete = (state: AppStateType) =>\n  state.profilePage.postsForDelete\n\nexport const getEditModeProfile = (state: AppStateType) =>\n  state.profilePage.isEditModeProfile\n","import { PhotosType, ProfileType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype SavePhotoDataType = {\n  photos: PhotosType\n}\n\nconst profileAPI = {\n  async getProfile(id: number | null) {\n    const response = await instance.get<ProfileType>(`profile/${id}`)\n    return response.data\n  },\n\n  async getStatus(id: number) {\n    const response = await instance.get<string>(`profile/status/${id}`)\n    return response.data\n  },\n\n  async updateStatus(status: string) {\n    const response = await instance.put<DefaultResponseType>('profile/status', {\n      status,\n    })\n    return response.data\n  },\n\n  async savePhotoAPI(photoFile: File) {\n    const formData = new FormData()\n    formData.append('image', photoFile)\n    const response = await instance.put<DefaultResponseType<SavePhotoDataType>>(\n      'profile/photo',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    )\n    return response.data\n  },\n\n  async saveProfileAPI(profile: ProfileType) {\n    const response = await instance.put<DefaultResponseType>('profile', profile)\n    return response.data\n  },\n}\n\nexport default profileAPI\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { PostType, ProfileType, PhotosType } from '../../types/types'\nimport { ResultCodesEnum } from '../../api/api'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  posts: [\n    {\n      idPost: 1,\n      message: `Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Facilis ut quo maiores neque laboriosam. Ratione adipisci\n        reiciendis autem placeat alias necessitatibus pariatur saepe\n        ipsum, temporibus animi, facilis minus doloribus ducimus.`,\n      likesCount: 1,\n      isLikeClick: true,\n    },\n    {\n      idPost: 2,\n      message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n      likesCount: 0,\n      isLikeClick: false,\n    },\n    {\n      idPost: 3,\n      message: `Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Facilis ut quo maiores neque laboriosam. Ratione adipisci\n        reiciendis autem placeat alias necessitatibus...`,\n      likesCount: 0,\n      isLikeClick: false,\n    },\n  ] as Array<PostType>,\n  postsForDelete: [] as Array<number>,\n\n  profile: null as ProfileType | null,\n  status: '',\n  showSuccessSave: '',\n  errorProfileContacts: '',\n  isEditModeProfile: false,\n}\n\nconst profileReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_USER': {\n      return {\n        ...state,\n        profile: action.profile,\n      }\n    }\n    case 'SET_STATUS': {\n      return {\n        ...state,\n        status: action.status,\n      }\n    }\n    case 'INITIALIZE_POSTS': {\n      return {\n        ...state,\n        posts: action.posts,\n      }\n    }\n    case 'ADD_POST': {\n      const newPost = {\n        idPost: Date.now(), // TODO вызов не чистой функции\n        message: action.newPostText,\n        likesCount: 0,\n        isLikeClick: false,\n      }\n      return {\n        ...state,\n        posts: [newPost, ...state.posts],\n      }\n    }\n    case 'SET_POST_FOR_DELETE': {\n      return {\n        ...state,\n        postsForDelete: [...state.postsForDelete, action.idPost],\n      }\n    }\n    case 'DELETE_POST_FOR_DELETE': {\n      return {\n        ...state,\n        postsForDelete: [\n          ...state.postsForDelete.filter((id) => id !== action.idPost),\n        ],\n      }\n    }\n    case 'CLEAR_POSTS_FOR_DELETE': {\n      return {\n        ...state,\n        postsForDelete: [],\n      }\n    }\n    case 'DELETE_POST': {\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.idPost !== action.idPost),\n      }\n    }\n    case 'SET_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: ++p.likesCount,\n                isLikeClick: true,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'DELETE_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: --p.likesCount,\n                isLikeClick: false,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'SAVE_PHOTO_SUCCESS': {\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\n      }\n    }\n    case 'SHOW_SUCCESS_SAVE': {\n      return {\n        ...state,\n        showSuccessSave: action.message,\n      }\n    }\n    case 'SHOW_ERROR_PROFILE_CONTACTS': {\n      return {\n        ...state,\n        errorProfileContacts: action.message,\n      }\n    }\n    case 'TOGGLE_EDIT_MODE_PROFILE': {\n      return {\n        ...state,\n        isEditModeProfile: action.bool,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializePosts: (posts: Array<PostType>) =>\n    ({ type: 'INITIALIZE_POSTS', posts } as const),\n  // удаление одного поста\n  addPost: (newPostText: string) =>\n    ({ type: 'ADD_POST', newPostText } as const),\n  deletePost: (idPost: number) => ({ type: 'DELETE_POST', idPost } as const),\n  // удаление нескольких постов\n  setPostForDeleting: (idPost: number) =>\n    ({ type: 'SET_POST_FOR_DELETE', idPost } as const),\n  deletePostForDeleting: (idPost: number) =>\n    ({ type: 'DELETE_POST_FOR_DELETE', idPost } as const),\n  clearPostsForDelete: () => ({ type: 'CLEAR_POSTS_FOR_DELETE' } as const),\n  // лайк\n  setLikeOnPost: (idPost: number) =>\n    ({ type: 'SET_LIKE_ON_POST', idPost } as const),\n  deleteLikeOnPost: (idPost: number) =>\n    ({ type: 'DELETE_LIKE_ON_POST', idPost } as const),\n\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: 'SET_USER', profile } as const),\n  setStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n  savePhotoSuccess: (photos: PhotosType) =>\n    ({ type: 'SAVE_PHOTO_SUCCESS', photos } as const),\n  showSuccessSaveProfile: (message: string) =>\n    ({ type: 'SHOW_SUCCESS_SAVE', message } as const),\n  showErrorProfileContacts: (message: string) =>\n    ({ type: 'SHOW_ERROR_PROFILE_CONTACTS', message } as const),\n  setEditModeProfile: (bool: boolean) =>\n    ({ type: 'TOGGLE_EDIT_MODE_PROFILE', bool } as const),\n}\n\nexport const getUserProfile =\n  (userId: number | null): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(actions.setUserProfile(response))\n  }\n\nexport const getStatus =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getStatus(id)\n    dispatch(actions.setStatus(response))\n  }\n\nexport const updateStatus =\n  (status: string): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.setStatus(status))\n    }\n  }\n\nexport const savePhotoThunk =\n  (file: File): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.savePhotoAPI(file)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.savePhotoSuccess(response.data.photos))\n    }\n  }\n\nexport const saveProfileThunk =\n  (profile: ProfileType): ThunkType =>\n  async (dispatch, getState) => {\n    const response = await profileAPI.saveProfileAPI(profile)\n    const { userID } = getState().auth\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getUserProfile(userID))\n      dispatch(actions.showSuccessSaveProfile('Data saved successfully!'))\n      setTimeout(dispatch, 4000, actions.showSuccessSaveProfile(''))\n      dispatch(actions.showErrorProfileContacts(''))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      // заготовка для показа ошибки конкретного поля\n      // const key = response.data.messages[0]\n      // .match(/Contacts->(\\w+)/)[1].toLowerCase()\n      // dispatch(stopSubmit('editProfile', {\n      //   contacts: { [key]: response.data.messages[0] },\n      // }));\n      dispatch(actions.showErrorProfileContacts(response.messages[0]))\n    }\n  }\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport CloseIcon from '@material-ui/icons/Close'\nimport unknown from '../../../../img/no_photo.svg'\nimport s from './ProfilePost.module.scss'\n\nimport Avatar from '../../../common/Avatar/Avatar'\nimport Name from '../../../common/Name/Name'\n\nimport { getPostsForDelete } from '../../../../redux/selectors/profile-selectors'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\nimport { actions } from '../../../../redux/reducers/profile-reducer'\n\nimport { PostType, ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  profile: ProfileType | null\n  isShowAnimation: boolean\n  isHiddenAllX: boolean\n  setIsHiddenAllX: Dispatch<SetStateAction<boolean>>\n  handleDeleteOnePost: (idPost: number) => void\n  addIdPostBeforeDeleting: (idPost: number) => void\n  deleteIdPostBeforeDeleting: (idPost: number) => void\n}\n\nconst ProfilePost: React.FC<{ post: PostType } & OwnPropsType> = React.memo(\n  (props) => {\n    const {\n      post: { idPost, message, likesCount, isLikeClick },\n      profile,\n      isHiddenAllX,\n      setIsHiddenAllX,\n      isShowAnimation,\n      handleDeleteOnePost,\n      addIdPostBeforeDeleting,\n      deleteIdPostBeforeDeleting,\n    } = props\n\n    const theme = useSelector(getTheme)\n    const postsForDelete = useSelector(getPostsForDelete)\n    const dispatch = useDispatch()\n\n    const [isClickDeletePost, setIsClickDeletePost] = useState(false)\n    const [isSelectedPost, setIsSelectedPost] = useState(false)\n\n    const handleClickOnAvatar = () => {\n      if (!isSelectedPost) {\n        setIsHiddenAllX(true)\n        setIsSelectedPost(true)\n        addIdPostBeforeDeleting(idPost)\n      } else {\n        if (postsForDelete.length === 0) {\n          // не возвращаем все Х, если ещё выбраны какие-то посты\n          setIsHiddenAllX(false)\n        }\n        setIsSelectedPost(false)\n        deleteIdPostBeforeDeleting(idPost)\n      }\n    }\n\n    useEffect(() => {\n      if (postsForDelete.length === 0) {\n        // возвращаем все Х, если больше нет выбранных постов\n        setIsHiddenAllX(false)\n      }\n    }, [postsForDelete, setIsHiddenAllX])\n\n    const handleDeletePost = () => {\n      setIsClickDeletePost(true)\n      setTimeout(() => handleDeleteOnePost(idPost), 300)\n    }\n\n    const handleSetLike = () => {\n      if (!isLikeClick) {\n        dispatch(actions.setLikeOnPost(idPost))\n      } else {\n        dispatch(actions.deleteLikeOnPost(idPost))\n      }\n    }\n\n    return (\n      <div\n        className={cn(s.postContainer, {\n          [s.postDelete]:\n            isClickDeletePost ||\n            (isShowAnimation && postsForDelete.includes(idPost)),\n        })}\n      >\n        <div className={s.post}>\n          <div className={s.columnLeft}>\n            <div\n              aria-hidden='true'\n              className={cn(\n                { [s.avatar]: !isSelectedPost },\n                {\n                  [s.postSelectedTheme1]: isSelectedPost && theme === 'theme1',\n                },\n                {\n                  [s.postSelectedTheme2]: isSelectedPost && theme === 'theme2',\n                }\n              )}\n              onClick={handleClickOnAvatar}\n              title='Select post to delete'\n            >\n              <Avatar\n                photo={profile?.photos.large || unknown}\n                size='medium'\n                id={profile?.userId}\n              />\n            </div>\n          </div>\n\n          <div className={s.columnCenter}>\n            <Name id={profile?.userId} name={profile?.fullName} />\n            <div className={s.message}>{message}</div>\n          </div>\n\n          <div className={s.columnRight}>\n            <div hidden={isHiddenAllX}>\n              <IconButton\n                title='Delete post'\n                size='small'\n                onClick={handleDeletePost}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n\n            <div className={s.wrapLike}>\n              <span className={s.likesCount}>\n                {likesCount > 0 ? `+${likesCount}` : ''}\n              </span>\n              <IconButton title='Like' size='small' onClick={handleSetLike}>\n                <ThumbUpAltIcon\n                  className={cn(s.like, { [s.noLike]: !isLikeClick })}\n                />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default ProfilePost\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PostType } from '../types/types'\n\nconst useLocalStorage = (\n  key: string,\n  value: string | PostType[],\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback?: any\n) => {\n  const dispatch = useDispatch()\n\n  // чтение и применение темы из Local Storage\n  useEffect(() => {\n    // @ts-ignore\n    const arr = JSON.parse(localStorage.getItem(key))\n\n    if (arr) {\n      dispatch(action(arr))\n      if (callback) callback(arr)\n    }\n  }, [action, key, callback, dispatch])\n\n  // запись темы в Local Storage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n}\nexport default useLocalStorage\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport PostAddIcon from '@material-ui/icons/PostAdd'\nimport { IconButton, TextField } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport cn from 'classnames'\nimport s from './ProfileWall.module.scss'\n\nimport ProfilePost from './ProfilePost/ProfilePost'\nimport NoElement from '../../common/NoElement/NoElement'\nimport useLocalStorage from '../../../hooks/useLocalStorage'\n\nimport {\n  getPosts,\n  getPostsForDelete,\n  getProfile,\n} from '../../../redux/selectors/profile-selectors'\nimport { actions } from '../../../redux/reducers/profile-reducer'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport { PostType } from '../../../types/types'\n\nconst ProfileWall: React.FC = () => {\n  const posts = useSelector(getPosts)\n  const postsForDelete = useSelector(getPostsForDelete)\n  const profile = useSelector(getProfile)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [isShowAnimation, setIsShowAnimation] = useState(false)\n  const [isHiddenAllX, setIsHiddenAllX] = useState(false)\n\n  useLocalStorage('posts', posts, actions.initializePosts)\n\n  const handleDeleteOnePost = (idPost: number) => {\n    dispatch(actions.deletePost(idPost))\n  }\n\n  const handleDeleteSelectedPost = () => {\n    // начало анимации удаления\n    setIsShowAnimation(true)\n\n    // возвращаем индивидуальные иконки-крестики у всех постов\n    setIsHiddenAllX(false)\n\n    setTimeout(() => {\n      postsForDelete.forEach((p) => {\n        dispatch(actions.deletePost(p))\n      })\n      dispatch(actions.clearPostsForDelete())\n\n      // конец анимации удаления\n      setIsShowAnimation(false)\n    }, 600)\n  }\n\n  const addIdPostBeforeDeleting = (idPost: number) => {\n    dispatch(actions.setPostForDeleting(idPost))\n  }\n\n  const deleteIdPostBeforeDeleting = (idPost: number) => {\n    dispatch(actions.deletePostForDeleting(idPost))\n  }\n\n  const postsElements = posts.map((p: PostType) => (\n    <ProfilePost\n      key={p.idPost}\n      profile={profile}\n      post={{\n        idPost: p.idPost,\n        message: p.message,\n        likesCount: p.likesCount,\n        isLikeClick: p.isLikeClick,\n      }}\n      isHiddenAllX={isHiddenAllX}\n      setIsHiddenAllX={setIsHiddenAllX}\n      isShowAnimation={isShowAnimation}\n      handleDeleteOnePost={handleDeleteOnePost}\n      addIdPostBeforeDeleting={addIdPostBeforeDeleting}\n      deleteIdPostBeforeDeleting={deleteIdPostBeforeDeleting}\n    />\n  ))\n\n  return (\n    <div className={s.container}>\n      <div\n        hidden={postsForDelete.length === 0}\n        className={cn({ [s.basket]: postsForDelete.length > 0 })}\n      >\n        <Button\n          onClick={() => handleDeleteSelectedPost()}\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={{ color: 'white', width: '100%', height: '100%' }}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      </div>\n\n      {postsForDelete.length === 0 && <Form theme={theme} />}\n\n      <div className={s.posts}>\n        {postsElements}\n\n        {!posts.length && <NoElement elements='posts' writeSomething />}\n      </div>\n    </div>\n  )\n}\n\ntype OwnPropsType = {\n  theme: string\n}\n\nconst Form: React.FC<OwnPropsType> = ({ theme }) => {\n  const stylesAddPostButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: '10px 0 10px 10px',\n    width: '140px',\n  }\n\n  const dispatch = useDispatch()\n  const [value, setValue] = useState('')\n\n  const handleAddPost = () => {\n    if (!value.trim()) {\n      return\n    }\n    dispatch(actions.addPost(value))\n    setValue('')\n  }\n\n  return (\n    <div>\n      <div className={s.form}>\n        <TextField\n          name='newPostText'\n          placeholder='Enter the post text...'\n          multiline\n          fullWidth\n          variant='outlined'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          inputProps={{ maxLength: 1000, value }}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setValue(e.target.value)\n          }\n        />\n        <div className={s.buttonBig}>\n          <Button\n            onClick={handleAddPost}\n            variant='contained'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={stylesAddPostButton}\n            endIcon={<PostAddIcon />}\n          >\n            Add post\n          </Button>\n        </div>\n        <div hidden className={s.buttonIcon}>\n          <IconButton\n            aria-label='addPost'\n            onClick={handleAddPost}\n            style={{ marginLeft: 5 }}\n            title='Add post'\n          >\n            <PostAddIcon color='primary' />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileWall\n","export default __webpack_public_path__ + \"static/media/camera.12909c41.svg\";","import React from 'react'\nimport s from './ProfilePlug.module.scss'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfilePlug: React.FC<PropsType> = ({ isOwner }) => {\n  return (\n    <div className={s.containerMainPlug}>\n      <div className={s.columnLeftPlug}>\n        <div className={s.avatarPlug} />\n        {isOwner && <div className={s.buttonPlug} />}\n      </div>\n\n      <div className={s.columnRightPlug}>\n        <div className={s.nameWrapPlug}>\n          <div className={s.namePlug} />\n        </div>\n\n        <div className={s.statusPlug} />\n\n        <div className={s.titleOnePlug} />\n        <div className={s.textPlug} />\n        <div className={s.titleTwoPlug} />\n        <div className={s.textPlug} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfilePlug\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    borderRadius: '5px 5px 0 0',\n    padding: theme.spacing(1),\n    minHeight: '30px',\n    lineHeight: '25px',\n    backgroundColor: '#4f4f4f',\n  },\n}))\n\nexport default useStyles\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, TextField } from '@material-ui/core'\nimport SaveIcon from '@material-ui/icons/Save'\nimport cn from 'classnames'\nimport s from './ProfileStatus.module.scss'\nimport stylesField from '../../../common/FieldWithCounter/FieldWithCounter.module.scss'\nimport useStyles from './stylesCustomMaterialUI'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\n\nimport { getStatus } from '../../../../redux/selectors/profile-selectors'\nimport { updateStatus } from '../../../../redux/reducers/profile-reducer'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileStatus = ({ isOwner }: PropsType) => {\n  const classes = useStyles()\n\n  const stylesSaveAndButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    boxShadow: '2px 2px 5px var(--color-darkBlueTransparent)',\n    margin: 10,\n    width: '100%',\n  }\n\n  const status = useSelector(getStatus)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [editMode, setEditMode] = useState(false)\n  const [isEditInputStatusForm, setIsEditInputStatusForm] = useState(false)\n  const [statusLocal, setStatusLocal] = useState(status)\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  useEffect(() => {\n    setStatusLocal(status)\n  }, [status])\n\n  const handleFocusInput = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n\n  const handleBlurInput = () => {\n    setIsHiddenCounter(true)\n  }\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value.length)\n    setIsEditInputStatusForm(true)\n    setStatusLocal(e.currentTarget.value)\n  }\n\n  const handleSaveStatus = () => {\n    dispatch(updateStatus(statusLocal))\n    setIsEditInputStatusForm(false)\n    setEditMode(false)\n  }\n\n  function useOutsideAlerter(ref: React.RefObject<HTMLDivElement>) {\n    useEffect(() => {\n      function handleClickOutside(e: MouseEvent) {\n        if (\n          ref.current &&\n          !ref.current.contains(e.target as HTMLInputElement)\n        ) {\n          setEditMode(false)\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [ref])\n  }\n\n  const statusRef = useRef<HTMLDivElement | null>(null)\n  useOutsideAlerter(statusRef)\n\n  return (\n    <div ref={statusRef} className={s.container} title='Change status'>\n      {editMode && (\n        <div className={s.wrap}>\n          <TextField\n            autoFocus\n            multiline\n            fullWidth\n            name='newStatusText'\n            placeholder='Your status...'\n            inputProps={{ maxLength: 300 }}\n            className={classes.status}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            value={statusLocal}\n            onChange={handleChangeInput}\n            onFocus={handleFocusInput}\n            onBlur={handleBlurInput}\n          />\n\n          <div className={s.buttonAndCounter}>\n            <div className={s.buttonWrap}>\n              <Button\n                onClick={handleSaveStatus}\n                disabled={!isEditInputStatusForm}\n                variant='contained'\n                color={theme === 'theme1' ? 'primary' : 'secondary'}\n                style={stylesSaveAndButton}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </div>\n\n            <span\n              className={cn(\n                stylesField.count,\n                { [stylesField.countHidden]: isHiddenCounter },\n                { [stylesField.countYellow]: count >= 290 },\n                { [stylesField.countRed]: count === 300 }\n              )}\n            >\n              {count} of 300\n            </span>\n          </div>\n        </div>\n      )}\n\n      {editMode && <div className={s.plug} />}\n\n      {isOwner && !editMode && (\n        <div\n          aria-hidden='true'\n          className={s.status}\n          onClick={() => setEditMode(true)}\n        >\n          {status || <span className={s.noStatus}>Your status is empty</span>}\n        </div>\n      )}\n\n      {!isOwner && status && <div className={s.statusNotMy}>{status}</div>}\n    </div>\n  )\n}\n\nexport default ProfileStatus\n","import React from 'react'\nimport { ProfileType, СontactsType } from '../../../../types/types'\nimport s from './ProfileData.module.scss'\n\ntype PropsType = {\n  profile: ProfileType\n}\n\nconst ProfileData: React.FC<PropsType> = ({ profile }) => (\n  <div className={s.containerForm}>\n    <div className={s.wrap}>\n      {profile.aboutMe && (\n        <div className={s.aboutMe}>\n          <div className={s.title}>About me:</div>\n          <div className={s.text}>{profile.aboutMe}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.wrap}>\n      <div className={s.job}>\n        <div className={s.title}>Job search:</div>\n        {profile.lookingForAJob ? (\n          <div className={s.text}>Now looking for a job!</div>\n        ) : (\n          <div className={s.text}>I&#39;m not looking for a job</div>\n        )}\n      </div>\n    </div>\n\n    <div className={s.wrap}>\n      {profile.lookingForAJobDescription && (\n        <div className={s.job}>\n          <div className={s.title}>Professional skills:</div>\n          <div className={s.text}>{profile.lookingForAJobDescription}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.wrap}>\n      {Object.values(profile.contacts).some((el) => el && el !== '') && (\n        <div className={s.contacts}>\n          <div className={s.title}>My contacts</div>\n          {Object.keys(profile.contacts).map((key) => (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key as keyof СontactsType]}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n)\n\ntype ContactPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\nconst Contact: React.FC<ContactPropsType> = React.memo(\n  ({ contactTitle, contactValue }) => (\n    <>\n      {contactValue && (\n        <div className={s.contact}>\n          <span className={s.contactTitle}>{contactTitle}:</span>\n          <div className={s.contactTextWrap}>\n            <a className={s.contactText} href={contactValue}>\n              {contactValue.replace(/(?:https?):\\/\\/([^/\\s]+)[^\\s]*/gi, '$1')}\n            </a>\n          </div>\n        </div>\n      )}\n    </>\n  )\n)\n\nexport default ProfileData\n","import { useState } from 'react'\n\nimport cn from 'classnames'\nimport s from './FieldWithCounter.module.scss'\n\ntype PropsType = {\n  renderContent: (\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    handleFocus: (e: React.FocusEvent<HTMLInputElement>) => void,\n    handleBlur: () => void\n  ) => JSX.Element\n  maxLength: number\n  setIsEditInputProfileForm: (bool: boolean) => void\n}\n\nconst FieldWithCounter: React.FC<PropsType> = (props) => {\n  const { maxLength, renderContent, setIsEditInputProfileForm } = props\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsEditInputProfileForm(true)\n    setCount(e.target.value.length)\n  }\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n  const handleBlur = () => {\n    setIsHiddenCounter(true)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {renderContent(handleInput, handleFocus, handleBlur)}\n\n      <span\n        className={cn(\n          s.count,\n          { [s.countHidden]: isHiddenCounter },\n          { [s.countYellow]: count >= maxLength - 10 },\n          { [s.countRed]: count === maxLength }\n        )}\n      >\n        {count} of {maxLength}\n      </span>\n    </div>\n  )\n}\n\nexport default FieldWithCounter\n","import { useSelector } from 'react-redux'\nimport { TextField } from '@material-ui/core'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport s from './RenderTextField.module.scss'\n\nconst RenderTextField = (props) => {\n  const {\n    label,\n    input,\n    placeholder,\n    multiline,\n    variant,\n    inputProps,\n    onInput,\n    onFocus,\n    meta: { touched, error, warning },\n    fullWidth,\n    ...custom\n  } = props\n\n  const theme = useSelector(getTheme)\n\n  return (\n    <>\n      <TextField\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        label={label}\n        InputLabelProps={{ htmlFor: label }}\n        inputProps={{ ...inputProps, id: label }}\n        onInput={onInput}\n        onFocus={onFocus}\n        variant={variant}\n        multiline={multiline}\n        fullWidth={fullWidth}\n        placeholder={placeholder}\n        {...input}\n        {...custom}\n      />\n      {touched &&\n        ((error && <span className={s.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </>\n  )\n}\n\nexport default RenderTextField\n","import { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nconst RenderCheckbox = ({ input, label }) => {\n  const theme = useSelector(getTheme)\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={!!input.value}\n            onChange={input.onChange}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={{ marginLeft: 5, padding: 6 }}\n          />\n        }\n        label={label}\n        labelPlacement='start'\n        style={{ marginLeft: 0 }}\n      />\n    </div>\n  )\n}\n\nexport default RenderCheckbox\n","import React from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport FieldWithCounter from '../../../common/FieldWithCounter/FieldWithCounter'\nimport RenderTextField from '../../../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../../../common/RenderFormElement/RenderCheckbox'\nimport s from './ProfileDataForm.module.scss'\n\nimport { ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  errorProfileContacts: string\n  setIsEditInputProfileForm: (bool: boolean) => void\n  initialValues: ProfileType\n}\n\nconst Form: React.FC<\n  InjectedFormProps<ProfileType, OwnPropsType> & OwnPropsType\n> = (props) => {\n  const {\n    handleSubmit,\n    initialValues,\n    errorProfileContacts,\n    setIsEditInputProfileForm,\n  } = props\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h1 className={s.titleForm}>Edit profile</h1>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 100 }}\n              label='Name:'\n              name='fullName'\n              placeholder='Your name'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={100}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 1000 }}\n              multiline\n              label='About me:'\n              name='aboutMe'\n              placeholder='Write about yourself!'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={1000}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <Field\n          component={RenderCheckbox}\n          onChange={() => {\n            setIsEditInputProfileForm(true)\n          }}\n          name='lookingForAJob'\n          label='Are you looking for a job?'\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 1000 }}\n              multiline\n              label='Professional skills:'\n              name='lookingForAJobDescription'\n              placeholder='What you can do?'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={1000}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <div className={s.titleAllContacts}>Contacts:</div>\n\n        {errorProfileContacts ? (\n          <div className={s.errorProfileContacts}>{errorProfileContacts}</div>\n        ) : (\n          <></>\n        )}\n\n        {Object.keys(initialValues.contacts).map((key) => (\n          <div className={s.contact} key={key}>\n            <div className={s.titleContact}>{key}:</div>\n\n            <Field\n              component={RenderTextField}\n              onInput={() => setIsEditInputProfileForm(true)}\n              name={`contacts.${key}`}\n              placeholder='https://...'\n              multiline\n              fullWidth\n            />\n          </div>\n        ))}\n      </div>\n    </form>\n  )\n}\n\nconst ProfileDataForm = reduxForm<ProfileType, OwnPropsType>({\n  form: 'editProfile',\n})(Form)\n\nexport default ProfileDataForm\n","import React, { useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { submit } from 'redux-form'\n\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './ProfileInfoContainer.module.scss'\nimport camera from '../../../img/icons/camera.svg'\n\nimport Avatar from '../../common/Avatar/Avatar'\nimport Preloader from '../../common/Preloader/Preloader'\nimport ProfilePlug from './ProfilePlug/ProfilePlug'\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\nimport ProfileData from './ProfileData/ProfileData'\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\nimport {\n  getEditModeProfile,\n  getErrorProfileContacts,\n  getProfile,\n  getShowSuccessSave,\n} from '../../../redux/selectors/profile-selectors'\nimport {\n  actions,\n  savePhotoThunk,\n  saveProfileThunk,\n} from '../../../redux/reducers/profile-reducer'\n\nimport { ProfileType } from '../../../types/types'\n\n// при переходе на страницу профиля скрол прокрутится вверх до имени\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    const fullName = document.getElementById('scrollToTopOnMount')\n    fullName?.scrollIntoView(false)\n  }, [])\n  return null\n}\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileInfoContainer: React.FC<PropsType> = ({ isOwner }) => {\n  const stylesSaveAndCancelButton: React.CSSProperties = {\n    fontSize: 12,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: 10,\n  }\n\n  const stylesEditButton: React.CSSProperties = {\n    fontSize: 12,\n    marginTop: 20,\n  }\n\n  // for InfoDataForm\n  const errorProfileContacts = useSelector(getErrorProfileContacts)\n\n  const theme = useSelector(getTheme)\n  const profile = useSelector(getProfile)\n\n  const showSuccessSave = useSelector(getShowSuccessSave)\n  const isEditModeProfile = useSelector(getEditModeProfile)\n  const dispatch = useDispatch()\n\n  const [isEditInputProfileForm, setIsEditInputProfileForm] = useState(false)\n\n  const onSubmitProfile = (values: ProfileType) => {\n    dispatch(saveProfileThunk(values))\n  }\n\n  const handleChangePhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      dispatch(savePhotoThunk(e.target.files[0]))\n    }\n  }\n\n  const handleEditProfile = () => {\n    dispatch(actions.setEditModeProfile(true))\n  }\n\n  const handleSaveProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(submit('editProfile'))\n  }\n\n  const handleCancelProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(actions.setEditModeProfile(false))\n  }\n\n  if (!profile) {\n    return (\n      <>\n        <Preloader />\n        <ProfilePlug isOwner={isOwner} />\n      </>\n    )\n  }\n\n  return (\n    <div className={s.containerMain}>\n      <div className={s.columnLeft}>\n        <Avatar photo={profile.photos.large} size='extra-large'>\n          {isOwner && !isEditModeProfile && (\n            <div className={s.camera} title='Change avatar'>\n              <label htmlFor='file_out'>\n                <div className={s.wrapImg}>\n                  <img src={camera} alt='icon' />\n                </div>\n                <input\n                  id='file_out'\n                  hidden\n                  type='file'\n                  onChange={handleChangePhoto}\n                />\n              </label>\n            </div>\n          )}\n        </Avatar>\n\n        {isOwner && !isEditModeProfile && (\n          <Button\n            onClick={handleEditProfile}\n            variant='outlined'\n            style={stylesEditButton}\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\n          >\n            Edit profile\n          </Button>\n        )}\n\n        {isEditModeProfile && (\n          <div className={s.buttonsSaveAndCancelProfile}>\n            <Button\n              onClick={handleSaveProfile}\n              disabled={!isEditInputProfileForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n            <Button\n              onClick={handleCancelProfile}\n              variant='outlined'\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<CloseIcon />}\n            >\n              Cancel\n            </Button>\n          </div>\n        )}\n\n        {isEditModeProfile && showSuccessSave && (\n          <ShowSuccessSavePortal>\n            <div className={s.successSave}>{showSuccessSave}</div>\n          </ShowSuccessSavePortal>\n        )}\n      </div>\n\n      <div className={s.columnRight}>\n        {!isEditModeProfile && (\n          <div id='scrollToTopOnMount' className={s.fullName}>\n            {profile.fullName}\n          </div>\n        )}\n\n        {!isEditModeProfile && <ProfileStatus isOwner={isOwner} />}\n\n        {isEditModeProfile ? (\n          <ProfileDataForm\n            initialValues={profile}\n            onSubmit={onSubmitProfile}\n            errorProfileContacts={errorProfileContacts}\n            setIsEditInputProfileForm={setIsEditInputProfileForm}\n          />\n        ) : (\n          <ProfileData profile={profile} />\n        )}\n      </div>\n      {/* при переходе на старницу профиля скрол обнулится */}\n      <ScrollToTopOnMount />\n    </div>\n  )\n}\n\nconst ShowSuccessSavePortal = ({ children }: { children: React.ReactNode }) => {\n  const el: HTMLDivElement = document.createElement('div')\n  document.body.append(el)\n\n  return createPortal(children, el)\n}\n\nexport default ProfileInfoContainer\n","import React from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport ProfileWall from './ProfileWall/ProfileWall'\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\n\nimport { getEditModeProfile } from '../../redux/selectors/profile-selectors'\nimport { AppStateType } from '../../redux/redux-store'\nimport {\n  getUserProfile,\n  getStatus,\n  actions,\n} from '../../redux/reducers/profile-reducer'\n\ntype MapStatePropsType = {\n  authorizedUserID: number | null\n  isEditModeProfile: boolean\n}\n\ntype MapDispatchPropsType = {\n  getUserProfile: (userId: number) => void\n  getStatus: (userId: number) => void\n  setEditModeProfile: (bool: boolean) => void\n}\n\ntype PathParamsType = {\n  userId: string\n}\n\ntype PropsType = MapStatePropsType &\n  MapDispatchPropsType &\n  RouteComponentProps<PathParamsType>\n\nclass ProfileContainer extends React.PureComponent<PropsType> {\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: PropsType) {\n    const { match } = this.props\n    // рендер при переходе с одной страницы на другую\n    if (match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  componentWillUnmount() {\n    const { isEditModeProfile, setEditModeProfile } = this.props\n    if (isEditModeProfile) {\n      setEditModeProfile(false)\n    }\n  }\n\n  refreshProfile() {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { match, authorizedUserID, history, getUserProfile, getStatus } =\n      this.props\n    let userId: number | null = +match.params.userId\n\n    if (!userId) {\n      userId = authorizedUserID\n      if (!userId) {\n        history.push('/login')\n      }\n    }\n\n    getUserProfile(userId as number)\n    getStatus(userId as number)\n  }\n\n  render(): React.ReactElement<PropsType> {\n    const { match, authorizedUserID, isEditModeProfile } = this.props\n    const isOwner = +match.params.userId === authorizedUserID\n\n    return (\n      <>\n        <ProfileInfoContainer isOwner={isOwner} />\n        {!isEditModeProfile && isOwner && <ProfileWall />}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    authorizedUserID: state.auth.userID,\n    isEditModeProfile: getEditModeProfile(state),\n  }\n}\n\nexport default compose<React.ComponentType>(\n  connect<\n    MapStatePropsType,\n    MapDispatchPropsType,\n    RouteComponentProps<PathParamsType>,\n    AppStateType\n  >(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    setEditModeProfile: actions.setEditModeProfile,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n","export default __webpack_public_path__ + \"static/media/preloaderStart.ec91d375.svg\";","import React from 'react'\nimport preloaderStart from '../../../img/preloader/preloaderStart.svg'\nimport s from './Preloader.module.scss'\n\nconst PreloaderStart: React.FC = () => {\n  return (\n    <div className={s.container}>\n      <div className={s.wrap}>\n        <img src={preloaderStart} alt='preloader' />\n      </div>\n    </div>\n  )\n}\n\nexport default PreloaderStart\n","export default __webpack_public_path__ + \"static/media/logo.cebb0f3e.svg\";","import {\n  DefaultResponseType,\n  instance,\n  ResultCodeForCaptcha,\n  ResultCodesEnum,\n} from './api'\n\ntype MeDataType = {\n  id: number\n  email: string\n  login: string\n}\n\nconst authAPI = {\n  async me() {\n    const response = await instance.get<DefaultResponseType<MeDataType>>(\n      'auth/me'\n    )\n    return response.data\n  },\n  async login(\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: null | string = null\n  ) {\n    const response = await instance.post<\n      DefaultResponseType<\n        { userId: number },\n        ResultCodesEnum | ResultCodeForCaptcha\n      >\n    >('/auth/login', {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    })\n    return response.data\n  },\n  async logout() {\n    const response = await instance.delete<DefaultResponseType>('/auth/login')\n    return response.data\n  },\n}\n\nexport default authAPI\n","import { instance } from './api'\n\ntype GetCaptchaResponseType = {\n  url: string\n}\n\nconst securityAPI = {\n  async getCaptchaURL() {\n    const response = await instance.get<GetCaptchaResponseType>(\n      'security/get-captcha-url'\n    )\n    return response.data\n  },\n}\n\nexport default securityAPI\n","import { FormAction, stopSubmit } from 'redux-form'\nimport { ResultCodesEnum, ResultCodeForCaptcha } from '../../api/api'\nimport authAPI from '../../api/auth-api'\nimport securityAPI from '../../api/security-api'\n\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  userID: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaURL: null as string | null,\n  myPhoto: null as string | null,\n}\n\nconst authReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n    case 'GET_CAPTCHA_URL_SUCCESS': {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n    case 'SET_MY_PHOTO': {\n      return {\n        ...state,\n        // @ts-ignore\n        myPhoto: action.payload.photo,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  setAuthUserData: (\n    userID: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n  ) => ({\n    type: 'SET_USER_DATA',\n    payload: {\n      userID,\n      email,\n      login,\n      isAuth,\n    } as const,\n  }),\n\n  setCaptcha: (captchaURL: string | null) => ({\n    type: 'GET_CAPTCHA_URL_SUCCESS',\n    payload: { captchaURL } as const,\n  }),\n\n  setMyPhoto: (photo: string | null) => ({\n    type: 'SET_MY_PHOTO',\n    payload: { photo } as const,\n  }),\n}\n\nexport const getAuthUserDataThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.me()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    const { id, email, login } = response.data\n    dispatch(actions.setAuthUserData(id, email, login, true))\n  }\n\n  if (response.resultCode === ResultCodesEnum.Error) {\n    const message = response.messages\n    const action = stopSubmit('loginForm', {\n      _error: message.length > 0 ? message[0] : 'Some error',\n    })\n    // Some error - на всякий случай, если с сервера придёт пустое сообщение\n    // при ошибке\n    dispatch(action)\n  }\n\n  if (Object.keys(response.data).length !== 0) {\n    const myProfile = await profileAPI.getProfile(response.data.id)\n    dispatch(actions.setMyPhoto(myProfile.photos.large))\n  }\n}\n\nconst setCaptchaThunk = (): ThunkType => async (dispatch) => {\n  const response = await securityAPI.getCaptchaURL()\n  const captcha = response.url\n  dispatch(actions.setCaptcha(captcha))\n}\n\nexport const loginThunk =\n  (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captcha: string | null\n  ): ThunkType =>\n  async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getAuthUserDataThunk())\n      dispatch(actions.setCaptcha(null))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      const message = response.messages\n      const action = stopSubmit('loginForm', {\n        _error: message.length > 0 ? message[0] : 'Some error',\n      })\n      // Some error - на всякий случай, если с сервера придёт пустое сообщение\n      // при ошибке\n      dispatch(action)\n    }\n\n    if (response.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\n      dispatch(setCaptchaThunk())\n    }\n  }\n\nexport const logoutThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.logout()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false))\n    dispatch(actions.setMyPhoto(null))\n  }\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { getAuthUserDataThunk } from './auth-reducer'\n\ntype themeType = 'theme1' | 'theme2'\n\nconst initialState = {\n  initialized: false,\n  theme: 'theme1',\n}\n\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'INITIALIZED_SUCCESS': {\n      return {\n        ...state,\n        initialized: true,\n      }\n    }\n    case 'TOGGLE_THEME': {\n      return {\n        ...state,\n        theme: action.theme,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializedSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const),\n  setTheme: (theme: themeType) => ({ type: 'TOGGLE_THEME', theme } as const),\n}\n\nexport const initializeAppThunk = (): ThunkType => async (dispatch) => {\n  await dispatch(getAuthUserDataThunk())\n  dispatch(actions.initializedSuccess())\n}\n\nexport default appReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport InvertColorsIcon from '@material-ui/icons/InvertColors'\nimport { IconButton } from '@material-ui/core'\nimport s from './Header.module.scss'\nimport logo from '../../img/icons/logo.svg'\n\nimport Avatar from '../common/Avatar/Avatar'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nimport {\n  getAuthorizedUserID,\n  getIsAuth,\n  getLogin,\n  getMyPhoto,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { logoutThunk } from '../../redux/reducers/auth-reducer'\nimport { actions } from '../../redux/reducers/app-reducer'\n\nconst Header: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const login = useSelector(getLogin)\n  const myID = useSelector(getAuthorizedUserID)\n  const myPhoto = useSelector(getMyPhoto)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [themeLocal, setThemeLocal] = useState(theme)\n\n  useEffect(() => {\n    const colors = {\n      cyan: `var(--color-cyan-${themeLocal})`,\n      cyanLight: `var(--color-cyanLight-${themeLocal})`,\n      cyanMedium: `var(--color-cyanMedium-${themeLocal})`,\n      cyanDark: `var(--color-cyanDark-${themeLocal})`,\n      darkBlue: `var(--color-darkBlue-${themeLocal})`,\n      darkBlueTransparent: `var(--color-darkBlueTransparent-${themeLocal})`,\n    }\n\n    const keys = Object.keys(colors)\n    const values = Object.values(colors)\n\n    for (let i = 0; i < keys.length; i++) {\n      document.body.style.setProperty(`--color-${keys[i]}`, values[i])\n    }\n  }, [theme, themeLocal])\n\n  useLocalStorage('theme', theme, actions.setTheme, setThemeLocal)\n\n  return (\n    <header className={s.header}>\n      <NavLink className={s.logoAndTitle} to='/profile'>\n        <img src={logo} alt='logo' />\n        <span className={s.headerTitleDesctop}>Social network</span>\n        <span hidden className={s.headerTitleMobile}>\n          SN\n        </span>\n      </NavLink>\n\n      <div className={s.rightColumn}>\n        {isAuth ? (\n          <>\n            <div className={s.loginAndPhoto}>\n              <Avatar photo={myPhoto} size='small' id={myID} />\n              <span className={s.loginName}>{login}</span>\n            </div>\n\n            <ButtonChangeTheme\n              theme={theme}\n              themeLocal={themeLocal}\n              setThemeLocal={setThemeLocal}\n            />\n\n            <span className={s.buttonLogoutDesctop}>\n              <Button\n                onClick={() => dispatch(logoutThunk())}\n                variant='outlined'\n                style={{ marginRight: '12px' }}\n                startIcon={<ExitToAppIcon />}\n              >\n                Log out\n              </Button>\n            </span>\n            <span hidden className={s.buttonLogoutMobile}>\n              <IconButton\n                title='Logout of profile'\n                onClick={() => dispatch(logoutThunk())}\n              >\n                <ExitToAppIcon />\n              </IconButton>\n            </span>\n          </>\n        ) : (\n          <ButtonChangeTheme\n            theme={theme}\n            themeLocal={themeLocal}\n            setThemeLocal={setThemeLocal}\n          />\n        )}\n      </div>\n    </header>\n  )\n}\n\ntype PropsType = {\n  theme: string\n  themeLocal: string\n  setThemeLocal: Dispatch<SetStateAction<string>>\n}\n\nconst ButtonChangeTheme: React.FC<PropsType> = (props) => {\n  const { theme, themeLocal, setThemeLocal } = props\n  const dispatch = useDispatch()\n\n  const handleToggleTheme = () => {\n    dispatch(actions.setTheme(themeLocal === 'theme1' ? 'theme2' : 'theme1'))\n    setThemeLocal(themeLocal === 'theme1' ? 'theme2' : 'theme1')\n  }\n\n  return (\n    <>\n      <span className={s.buttonThemeDesctop}>\n        <Button\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={{ padding: '6px 12px', marginRight: '12px' }}\n          onClick={handleToggleTheme}\n          startIcon={<InvertColorsIcon />}\n        >\n          Change theme\n        </Button>\n      </span>\n\n      <span hidden className={s.buttonThemeMobile}>\n        <IconButton\n          onClick={handleToggleTheme}\n          aria-label='changeTheme'\n          type='submit'\n          style={{ margin: '0 12px' }}\n          title='Change theme'\n        >\n          <InvertColorsIcon\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n          />\n        </IconButton>\n      </span>\n    </>\n  )\n}\nexport default Header\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NavLink, RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Navbar.module.scss'\nimport { getAuthorizedUserID } from '../../redux/selectors/auth-selectors'\n\ntype PathParamsType = {\n  pathname: string\n  profileUrl?: string\n}\n\nconst Navbar: React.FC<RouteComponentProps<PathParamsType>> = ({\n  location: { pathname },\n}) => {\n  const authorizedUserID = useSelector(getAuthorizedUserID)\n  const profileUrl = `/profile/${authorizedUserID}`\n\n  return (\n    <nav className={s.nav} id='navbar'>\n      <NavLink\n        exact\n        to={profileUrl}\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconProfile pathname={pathname} profileUrl={profileUrl} />\n        Profile\n      </NavLink>\n\n      <NavLink\n        to='/chat'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconChat pathname={pathname} />\n        Chat\n      </NavLink>\n\n      <NavLink\n        to='/users'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconUsers pathname={pathname} />\n        Find Users\n      </NavLink>\n\n      <NavLink\n        to='/friends'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconFriends pathname={pathname} />\n        Friends\n      </NavLink>\n    </nav>\n  )\n}\n\nconst IconProfile: React.FC<PathParamsType> = ({ pathname, profileUrl }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === profileUrl,\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z' />\n    </svg>\n  )\n}\n\nconst IconChat: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/chat',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M20,2H4A2,2 0 0,0 2,4V22L6,18H20A2,2 0 0,0 22,16V4C22,2.89 21.1,2 20,2Z' />\n    </svg>\n  )\n}\n\nconst IconUsers: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/users',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z' />\n    </svg>\n  )\n}\n\nconst IconFriends: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/friends',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z' />\n    </svg>\n  )\n}\n\nexport default withRouter(Navbar)\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport cn from 'classnames'\nimport Button from '@material-ui/core/Button'\nimport s from './Login.module.scss'\nimport RenderTextField from '../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../common/RenderFormElement/RenderCheckbox'\n\nimport {\n  getAuthorizedUserID,\n  getCaptchaURL,\n  getIsAuth,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { loginThunk } from '../../redux/reducers/auth-reducer'\n\nconst validate = (values: LoginFormValuesType) => {\n  type ErrorsType = {\n    email?: string\n    password?: string\n    captcha?: string\n  }\n\n  const errors: ErrorsType = {}\n\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n\n  return errors\n}\n\ntype OwnPropsType = {\n  captchaURL: string | null\n}\n\ntype LoginFormValuesType = {\n  email: string\n  password: string\n  rememberMe: boolean\n  captcha: string\n}\n\nconst Login: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const captchaURL = useSelector(getCaptchaURL)\n  const userID = useSelector(getAuthorizedUserID)\n  const dispatch = useDispatch()\n\n  const onSubmit = (values: LoginFormValuesType) => {\n    dispatch(\n      loginThunk(\n        values.email,\n        values.password,\n        values.rememberMe,\n        values.captcha\n      )\n    )\n  }\n\n  if (isAuth) {\n    return <Redirect to={`/profile/${userID}`} />\n  }\n\n  return (\n    <div className={s.wrap}>\n      <div className={s.body}>\n        <h1>Log in</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL} />\n      </div>\n    </div>\n  )\n}\n\nconst LoginForm: React.FC<\n  InjectedFormProps<LoginFormValuesType, OwnPropsType> & OwnPropsType\n> = ({ handleSubmit, error, captchaURL }) => {\n  const stylesLoginButton = {\n    fontSize: 16,\n    fontWeight: 700,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const stylesTestLoginButton = {\n    marginBottom: '15px',\n    ...stylesLoginButton,\n  }\n\n  const dispatch = useDispatch()\n  const theme = useSelector(getTheme)\n\n  const handleEnterTestAccount = () => {\n    const email = 'free@samuraijs.com'\n    const password = 'free'\n\n    dispatch(loginThunk(email, password, false, null))\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className={s.loginBlockSubstrate}>\n          <div className={s.loginBlock}>\n            <div className={s.row}>\n              <Field\n                component={RenderTextField}\n                name='email'\n                label='Email:'\n                type='email'\n                fullWidth\n              />\n            </div>\n            <div className={s.row}>\n              <Field\n                component={RenderTextField}\n                name='password'\n                label='Password:'\n                type='password'\n                fullWidth\n              />\n            </div>\n            <div className={cn(s.row, s.rowCheckbox)}>\n              <Field\n                component={RenderCheckbox}\n                name='rememberMe'\n                label='Remember me'\n              />\n            </div>\n\n            {captchaURL && <img src={captchaURL} alt='captcha' />}\n            {captchaURL && (\n              <Field component={RenderTextField} fullWidth name='captcha' />\n            )}\n\n            <div className={s.row}>\n              <Button\n                type='submit'\n                variant='contained'\n                color={theme === 'theme1' ? 'primary' : 'secondary'}\n                fullWidth\n                style={stylesLoginButton}\n              >\n                Log in\n              </Button>\n\n              {error && (\n                <div className={s.formError}>\n                  {error === 'You are not authorized' ? (\n                    <>\n                      <div>1. You are either not authorized</div>\n                      <div>or</div>\n                      <div>\n                        2. Please, unblock third party cookies or show all\n                        cookies (see browser settings)\n                      </div>\n                    </>\n                  ) : (\n                    error\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <p>or</p>\n        <Button\n          onClick={handleEnterTestAccount}\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          fullWidth\n          style={stylesTestLoginButton}\n        >\n          Login to test account\n        </Button>\n      </form>\n    </>\n  )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, OwnPropsType>({\n  form: 'loginForm',\n  validate,\n})(LoginForm)\n\nexport default Login\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error })\n  }\n\n  render() {\n    const { error } = this.state\n    const { children } = this.props\n\n    if (error) {\n      return (\n        <div>\n          <h2>Something went wrong</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error?.toString()}\n          </details>\n        </div>\n      )\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { Suspense } from 'react'\nimport Preloader from '../components/common/Preloader/Preloader'\n\nfunction withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\n  return (props: WCP) => (\n    <Suspense fallback={<Preloader />}>\n      <WrappedComponent {...props} />\n    </Suspense>\n  )\n}\nexport default withSuspense\n","import React from 'react'\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport PreloaderStart from './components/common/Preloader/PreloaderStart'\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Login from './components/Login/Login'\nimport ErrorBoundary from './components/Error/ErrorBoundary'\nimport withSuspense from './hoc/withSuspense'\n\nimport s from './App.module.scss'\n\nimport { getInitialized } from './redux/selectors/app-selectors'\nimport { getAuthorizedUserID } from './redux/selectors/auth-selectors'\nimport { initializeAppThunk } from './redux/reducers/app-reducer'\n\nconst ChatContainer = React.lazy(() => import('./components/Chat/Chat'))\nconst UsersContainer = React.lazy(\n  () => import('./components/Users/UsersContainer')\n)\nconst FriendsContainer = React.lazy(\n  () => import('./components/Friends/FriendsContainer')\n)\n\nconst SuspendedChat = withSuspense(ChatContainer)\nconst SuspendedUsers = withSuspense(UsersContainer)\nconst SuspendedFriends = withSuspense(FriendsContainer)\n\nconst App: React.FC = () => {\n  const userID = useSelector(getAuthorizedUserID)\n  const initialized = useSelector(getInitialized)\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    dispatch(initializeAppThunk())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <PreloaderStart />\n  }\n\n  return (\n    <div className={s.fon}>\n      <div className={s.container}>\n        <div className={s.appWrapper}>\n          <Header />\n          <Navbar />\n\n          <div className={s.appWrapperContent}>\n            <ErrorBoundary>\n              <Switch>\n                <Redirect from='/profile/undefined' to='/' />\n\n                <Route\n                  path='/profile/:userId'\n                  render={() => <ProfileContainer />}\n                />\n\n                <Route path='/chat' render={() => <SuspendedChat />} />\n\n                <Route path='/friends' render={() => <SuspendedFriends />} />\n\n                <Route path='/users' render={() => <SuspendedUsers />} />\n\n                <Route path='/login' render={() => <Login />} />\n\n                <Redirect exact from='/' to={`/profile/${userID}`} />\n\n                <Redirect from='*' to='/' />\n              </Switch>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AppContainer = withRouter(App)\nexport default AppContainer\n","import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose,\n  Action,\n} from 'redux'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nimport authReducer from './reducers/auth-reducer'\nimport profileReducer from './reducers/profile-reducer'\nimport usersReducer from './reducers/users-reducer'\nimport appReducer from './reducers/app-reducer'\nimport chatReducer from './reducers/chat-reducer'\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n  chat: chatReducer,\n})\n\n// types state app\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\n// types actions\nexport type InferActionsTypes<T> = T extends {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: (...args: any[]) => infer U\n}\n  ? U\n  : never\n\n// type thunks\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n  R,\n  AppStateType,\n  unknown,\n  A\n>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// @ts-ignore\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport AppContainer from './App'\nimport store from './redux/redux-store'\nimport './styles/theme.css'\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    // цвет главных кнопок, активных ссылок в навигации,\n    // декоративных линий, рамок у форм\n    primary: {\n      main: '#00bcd4',\n      // 1-ая тема, синий цвет\n    },\n    secondary: {\n      main: '#00d482',\n      // 2-ая тема, зелёный цвет\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <AppContainer />\n      </Provider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMainPlug\":\"ProfilePlug_containerMainPlug__3Zu8a\",\"columnLeftPlug\":\"ProfilePlug_columnLeftPlug__1kXuj\",\"columnRightPlug\":\"ProfilePlug_columnRightPlug__3RU4v\",\"avatarPlug\":\"ProfilePlug_avatarPlug__14sew\",\"buttonPlug\":\"ProfilePlug_buttonPlug__1IsjM\",\"namePlug\":\"ProfilePlug_namePlug__3wvE4\",\"statusPlug\":\"ProfilePlug_statusPlug__2Tuw_\",\"titleOnePlug\":\"ProfilePlug_titleOnePlug__1uJXl\",\"titleTwoPlug\":\"ProfilePlug_titleTwoPlug__26pdZ\",\"textPlug\":\"ProfilePlug_textPlug__1uTdo\",\"nameWrapPlug\":\"ProfilePlug_nameWrapPlug__WFOBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__24NFR\",\"titleForm\":\"ProfileDataForm_titleForm__3NgXn\",\"wrap\":\"ProfileDataForm_wrap__2cg2s\",\"contact\":\"ProfileDataForm_contact__3xnPU\",\"titleAllContacts\":\"ProfileDataForm_titleAllContacts__1pG4g\",\"titleContact\":\"ProfileDataForm_titleContact__9Q8x2\",\"errorProfileContacts\":\"ProfileDataForm_errorProfileContacts__1btuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kFdy\",\"logoAndTitle\":\"Header_logoAndTitle__E1gOe\",\"headerTitleDesctop\":\"Header_headerTitleDesctop__2wBaa\",\"headerTitleMobile\":\"Header_headerTitleMobile__3ZA7x\",\"rightColumn\":\"Header_rightColumn__2gu4E\",\"loginAndPhoto\":\"Header_loginAndPhoto__1azBA\",\"loginName\":\"Header_loginName__ncEXR\",\"buttonThemeDesctop\":\"Header_buttonThemeDesctop__1GobS\",\"buttonThemeMobile\":\"Header_buttonThemeMobile__1i4f9\",\"buttonLogoutDesctop\":\"Header_buttonLogoutDesctop__2JZG2\",\"buttonLogoutMobile\":\"Header_buttonLogoutMobile__1W2MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__1LWwk\",\"body\":\"Login_body__3DOsP\",\"loginBlockSubstrate\":\"Login_loginBlockSubstrate__3-IH5\",\"loginBlock\":\"Login_loginBlock__3-8mF\",\"row\":\"Login_row__18i6W\",\"rowCheckbox\":\"Login_rowCheckbox__16VyH\",\"formError\":\"Login_formError__2wlzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"FieldWithCounter_count__Cu5UD\",\"countHidden\":\"FieldWithCounter_countHidden__3sFUY\",\"countYellow\":\"FieldWithCounter_countYellow__1fcWm\",\"countRed\":\"FieldWithCounter_countRed__3W_7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"camera\":\"ProfileInfoContainer_camera__OZkpC\",\"wrapImg\":\"ProfileInfoContainer_wrapImg__ZDFuM\",\"containerMain\":\"ProfileInfoContainer_containerMain__3r1l3\",\"columnLeft\":\"ProfileInfoContainer_columnLeft__9aSjt\",\"columnRight\":\"ProfileInfoContainer_columnRight__1Q7wM\",\"iconButtonEditProfile\":\"ProfileInfoContainer_iconButtonEditProfile__34g6O\",\"fullName\":\"ProfileInfoContainer_fullName__2YZse\",\"buttonsSaveAndCancelProfile\":\"ProfileInfoContainer_buttonsSaveAndCancelProfile__DIbSX\",\"successSave\":\"ProfileInfoContainer_successSave__GV6TG\",\"anim\":\"ProfileInfoContainer_anim__25xiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileStatus_container__1RUzu\",\"wrap\":\"ProfileStatus_wrap__PSxii\",\"buttonAndCounter\":\"ProfileStatus_buttonAndCounter__2uC-t\",\"buttonWrap\":\"ProfileStatus_buttonWrap__3HwQn\",\"plug\":\"ProfileStatus_plug__2_kyo\",\"status\":\"ProfileStatus_status__2xM1y\",\"statusNotMy\":\"ProfileStatus_statusNotMy__1Qrk6\",\"noStatus\":\"ProfileStatus_noStatus__3Ja75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_default\":\"Preloader_container_default__YqKY9\",\"container_block\":\"Preloader_container_block__20vZD\",\"wrap\":\"Preloader_wrap__1YoGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileWall_container__1kdW4\",\"basket\":\"ProfileWall_basket__2jVHY\",\"form\":\"ProfileWall_form__17rYB\",\"posts\":\"ProfileWall_posts__3KwJJ\",\"buttonBig\":\"ProfileWall_buttonBig__3pnrj\",\"buttonIcon\":\"ProfileWall_buttonIcon__3F-6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarWrap\":\"Avatar_avatarWrap__1kMu_\",\"avatar\":\"Avatar_avatar__3_fhn\",\"small\":\"Avatar_small__3YJmQ\",\"medium\":\"Avatar_medium__3JNHX\",\"large\":\"Avatar_large__2CWNX\",\"extra_large\":\"Avatar_extra_large__ElsR6\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport unknown from '../../../img/no_photo.svg'\nimport s from './Avatar.module.scss'\n\ntype SizeType = 'small' | 'medium' | 'large' | 'extra-large'\n\ntype PropsType = {\n  photo: string | null | undefined\n  size?: SizeType\n}\n\ntype OwnPropsType = {\n  id?: number | null\n}\n\nconst Avatar: React.FC<PropsType & OwnPropsType> = ({\n  photo,\n  size = 'medium',\n  id,\n  children,\n}) => {\n  // Проверка тестового аккаунта с id = 1079:\n  // установленное фото на тестовый аккаунт удаляется через короткое время\n  // на сервере и, если с этого аккаунта написано сообщение в чат, то\n  // при отрисовке этого сообщения (с удалённым фото) в ответ приходит\n  // ошибка вместо null | undefined, вскоре сервер опять присылает null\n  // вместо фото, но это происходит не сразу. Для этого случая эта проверка\n  let photoTrue\n  if (photo?.includes('1079')) {\n    photoTrue = null\n  } else {\n    photoTrue = photo\n  }\n\n  return (\n    <>\n      {id ? (\n        <NavLink to={`/profile/${id}`} replace>\n          <AvatarBody photo={photoTrue} size={size}>\n            {children}\n          </AvatarBody>\n        </NavLink>\n      ) : (\n        <AvatarBody photo={photoTrue} size={size}>\n          {children}\n        </AvatarBody>\n      )}\n    </>\n  )\n}\n\nconst AvatarBody: React.FC<PropsType> = ({\n  photo,\n  size = 'medium',\n  children,\n}) => {\n  return (\n    <div className={s.avatarWrap}>\n      <div\n        className={cn(\n          s.avatar,\n          { [s.extra_large]: size === 'extra-large' },\n          { [s.large]: size === 'large' },\n          { [s.medium]: size === 'medium' },\n          { [s.small]: size === 'small' }\n        )}\n      >\n        <img src={photo || unknown} alt='avatar' />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Avatar\n"],"sourceRoot":""}