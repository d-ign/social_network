{"version":3,"sources":["redux/selectors/users-selectors.ts","hooks/useResizeWindow.tsx","components/common/User/User.module.scss","components/common/Search/Search.module.scss","components/common/User/ButtonFollow/ButtonFollow.tsx","components/common/User/Tooltip/Tooltip.tsx","components/common/User/User.tsx","components/common/Search/stylesCustomMaterialUI.jsx","components/common/Search/Search.tsx","components/Users/Users.module.scss","hooks/useQueryUrl.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["getUsersSelector","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","useResizeWindow","useState","window","innerWidth","widthScreen","setWidthScreen","useEffect","handleResizeWindow","addEventListener","removeEventListener","module","exports","ButtonFollow","id","followed","stylesWrapButton","textAlign","stylesButton","justifyContent","alignItems","flexBasis","useSelector","authorizedUserID","getAuthorizedUserID","theme","getTheme","dispatch","useDispatch","followHandler","useCallback","follow","unfollowHandler","unfollow","isDisabledButton","some","idUser","style","Button","onClick","disabled","startIcon","color","memo","Tooltip","element","children","data-tooltip","User","props","user","photos","name","status","symbolCount","setSymbolCount","className","s","wrapAvatarNameAndStatus","wrapAvatar","Avatar","photo","large","size","nameAndStatus","WithTooltip","Name","Status","length","wrapName","useStyles","makeStyles","search","padding","spacing","paddingLeft","width","borderRadius","backgroundColor","Search","pathname","termOfUrl","searchUsers","classes","handleChange","e","target","value","handleDebounce","useMemo","debounce","cancel","container","searchWrap","searchIcon","InputBase","placeholder","inputProps","input","onChange","onInput","searchCount","toString","replace","useQueryUrl","history","useHistory","setTermOfUrl","parsed","queryString","parse","location","substr","term","Users","useLocation","maxPageCount","Math","ceil","isShowMoreUsersButton","setIsShowMoreUsersButton","pageNumber","setPageNumber","getUsers","handleShowMoreUsers","visuallyHidden","NoElement","elements","writeSomething","wrapUsers","map","u","cn","buttonLoadMore","hiddenButtonLoadMore","IconButton","title","UsersContainer","Preloader","display"],"mappings":"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","file":"static/js/5.2f872157.chunk.js","sourcesContent":["import { AppStateType } from '../redux-store'\n\nexport const getUsersSelector = (state: AppStateType) => state.usersPage.users\n\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize\n\nexport const getTotalUsersCount = (state: AppStateType) =>\n  state.usersPage.totalUsersCount\n\nexport const getIsFetching = (state: AppStateType) => state.usersPage.isFetching\n\nexport const getFollowingInProgress = (state: AppStateType) =>\n  state.usersPage.followingInProgress\n","import { useEffect, useState } from 'react'\n\nconst useResizeWindow = () => {\n  const [widthScreen, setWidthScreen] = useState(window.innerWidth)\n\n  useEffect(() => {\n    const handleResizeWindow = () => setWidthScreen(window.innerWidth)\n\n    window.addEventListener('resize', handleResizeWindow)\n    return () => {\n      window.removeEventListener('resize', handleResizeWindow)\n    }\n  }, [widthScreen, setWidthScreen])\n\n  return widthScreen\n}\n\nexport default useResizeWindow\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2-MFR\",\"wrapAvatarNameAndStatus\":\"User_wrapAvatarNameAndStatus__1DasO\",\"wrapAvatar\":\"User_wrapAvatar__390Wy\",\"nameAndStatus\":\"User_nameAndStatus__2nXq4\",\"wrapName\":\"User_wrapName__1IOhj\",\"status\":\"User_status__1Fkst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__2QWKN\",\"searchWrap\":\"Search_searchWrap__cinBZ\",\"searchIcon\":\"Search_searchIcon__nrD5M\",\"searchCount\":\"Search_searchCount__3NOnv\",\"search\":\"Search_search__2Jvrt\"};","import React, { useCallback, memo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button } from '@material-ui/core'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport { getFollowingInProgress } from '../../../../redux/selectors/users-selectors'\nimport { getAuthorizedUserID } from '../../../../redux/selectors/auth-selectors'\nimport { follow, unfollow } from '../../../../redux/reducers/users-reducer'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\n\ntype ButtonFollowPropsType = {\n  followed: boolean\n  id: number\n}\n\nconst ButtonFollow: React.FC<ButtonFollowPropsType> = ({ id, followed }) => {\n  const stylesWrapButton: React.CSSProperties = {\n    textAlign: 'center',\n  }\n\n  const stylesButton: React.CSSProperties = {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n    flexBasis: '200px',\n  }\n\n  const followingInProgress = useSelector(getFollowingInProgress)\n  const authorizedUserID = useSelector(getAuthorizedUserID)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const followHandler = useCallback(() => dispatch(follow(id)), [dispatch, id])\n\n  const unfollowHandler = useCallback(\n    () => dispatch(unfollow(id)),\n    [dispatch, id]\n  )\n\n  const isDisabledButton = followingInProgress.some(\n    (idUser: number) => idUser === id\n  )\n\n  return (\n    <>\n      {followed ? (\n        <div style={stylesWrapButton}>\n          <Button\n            onClick={unfollowHandler}\n            disabled={isDisabledButton}\n            style={stylesButton}\n            startIcon={<RemoveIcon />}\n          >\n            Unfollow\n          </Button>\n        </div>\n      ) : id === authorizedUserID ? (\n        <></>\n      ) : (\n        <div style={stylesWrapButton}>\n          <Button\n            onClick={followHandler}\n            disabled={isDisabledButton}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={stylesButton}\n            startIcon={<AddIcon />}\n          >\n            Follow\n          </Button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default memo(ButtonFollow)\n","import React, { memo } from 'react'\nimport './Tooltip.module.scss'\n\ntype PropsType = {\n  element: string\n  children: React.ReactNode\n}\n\nconst Tooltip: React.FC<PropsType> = ({ element, children }) => {\n  return <div data-tooltip={element}>{children}</div>\n}\n\nexport default memo(Tooltip)\n","import React, { useEffect, useState, memo } from 'react'\n\nimport s from './User.module.scss'\n\nimport useResizeWindow from '../../../hooks/useResizeWindow'\n\nimport ButtonFollow from './ButtonFollow/ButtonFollow'\nimport Tooltip from './Tooltip/Tooltip'\nimport Avatar from '../Avatar/Avatar'\nimport Name from '../Name/Name'\n\nimport { UserType } from '../../../types/types'\n\nconst User: React.FC<{ user: UserType }> = (props) => {\n  const {\n    user: { id, photos, name, status, followed },\n  } = props\n\n  const [symbolCount, setSymbolCount] = useState(19)\n  const widthScreen = useResizeWindow()\n\n  useEffect(() => {\n    if (widthScreen <= 735) {\n      setSymbolCount(10)\n    }\n  }, [widthScreen])\n\n  return (\n    <article className={s.user}>\n      <div className={s.wrapAvatarNameAndStatus}>\n        <div className={s.wrapAvatar}>\n          <Avatar photo={photos.large} size='large' id={id} />\n        </div>\n        <div className={s.nameAndStatus}>\n          <WithTooltip.Name id={id} name={name} symbolCount={symbolCount} />\n          <WithTooltip.Status status={status} symbolCount={symbolCount} />\n        </div>\n      </div>\n      <ButtonFollow id={id} followed={followed} />\n    </article>\n  )\n}\n\ntype NameWithTooltipPropsType = {\n  id: number\n  name: string\n  symbolCount: number\n}\n\ntype StatusWithTooltipPropsType = {\n  status: string\n  symbolCount: number\n}\n\nconst WithTooltip = {\n  Name: memo<NameWithTooltipPropsType>(({ id, name, symbolCount }) => (\n    <>\n      {name?.length > symbolCount ? (\n        <Tooltip element={name}>\n          <div className={s.wrapName}>\n            <Name id={id} name={name} size='normal' />\n          </div>\n        </Tooltip>\n      ) : (\n        <div className={s.wrapName}>\n          <Name id={id} name={name} size='normal' />\n        </div>\n      )}\n    </>\n  )),\n\n  Status: memo<StatusWithTooltipPropsType>(({ status, symbolCount }) => (\n    <>\n      {status?.length > symbolCount ? (\n        <Tooltip element={status}>\n          <div className={s.status}>\n            <i>{status}</i>\n          </div>\n        </Tooltip>\n      ) : (\n        <div className={s.status}>\n          <i>{status}</i>\n        </div>\n      )}\n    </>\n  )),\n}\n\nexport default memo(User)\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: '100%',\n\n    '&:focus': {\n      borderRadius: '5px',\n      backgroundColor: '#5e5e5e4d',\n    },\n  },\n}))\n\nexport default useStyles\n","import React, { useCallback, memo, useMemo, useEffect } from 'react'\nimport debounce from 'lodash/debounce'\n\nimport InputBase from '@material-ui/core/InputBase'\nimport SearchIcon from '@material-ui/icons/Search'\nimport useStyles from './stylesCustomMaterialUI'\nimport s from './Search.module.scss'\n\ntype PropsType = {\n  termOfUrl: string\n  pathname: string\n  totalUsersCount: number\n  searchUsers: (term: string) => void\n}\n\nconst Search: React.FC<PropsType> = (props) => {\n  const { pathname, termOfUrl, searchUsers, totalUsersCount } = props\n  const classes = useStyles()\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      searchUsers(e.target.value)\n    },\n    [searchUsers]\n  )\n\n  const handleDebounce = useMemo(\n    () => debounce(handleChange, 600),\n    [handleChange]\n  )\n\n  useEffect(() => {\n    return function cleanup() {\n      handleDebounce.cancel()\n    }\n  })\n\n  return (\n    <div className={s.container}>\n      <div className={s.searchWrap}>\n        <div className={s.searchIcon}>\n          <SearchIcon />\n        </div>\n        {pathname === '/users' && (\n          <InputBase\n            placeholder='Search by name...'\n            inputProps={{ 'aria-label': 'search' }}\n            classes={{ input: classes.search }}\n            value={termOfUrl}\n            onChange={handleChange}\n          />\n        )}\n        {pathname === '/friends' && (\n          <InputBase\n            placeholder='Search by name...'\n            inputProps={{ 'aria-label': 'search' }}\n            classes={{ input: classes.search }}\n            onInput={handleDebounce}\n          />\n        )}\n      </div>\n      <div className={s.searchCount}>\n        Total: {totalUsersCount.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')}\n        {/* adding space between numbers: (? = pattern) + - greedy repeating\n        the last pattern one or more times to the end of the line $ */}\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Search)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"Users_visuallyHidden__29f-p\",\"elementInteractive\":\"Users_elementInteractive__1rBX6\",\"container\":\"Users_container__58Ml6\",\"wrapUsers\":\"Users_wrapUsers__1T8G6\",\"buttonLoadMore\":\"Users_buttonLoadMore__3c7gF\",\"hiddenButtonLoadMore\":\"Users_hiddenButtonLoadMore__3-1-j\",\"users\":\"Users_users__Gorx3\"};","import { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport queryString from 'query-string'\n\nconst useQueryUrl = (pathname: string) => {\n  const history = useHistory()\n  const [termOfUrl, setTermOfUrl] = useState('')\n\n  // get from URL term, if present\n  useEffect(() => {\n    const parsed = queryString.parse(history.location.search.substr(1)) as {\n      term: string\n    } // substr(1) = delete ? at the beginning\n\n    if (parsed.term) {\n      setTermOfUrl(parsed.term)\n    }\n  }, [history.location.search, pathname, setTermOfUrl])\n\n  // push entered from search into URL\n  useEffect(() => {\n    history.replace({\n      pathname,\n      search: termOfUrl ? `?term=${termOfUrl}` : '',\n    })\n  }, [termOfUrl, history, pathname])\n\n  return { termOfUrl, setTermOfUrl }\n}\n\nexport default useQueryUrl\n","import React, { useState, useEffect, useCallback, memo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport s from './Users.module.scss'\n\nimport User from '../common/User/User'\nimport Search from '../common/Search/Search'\nimport NoElement from '../common/NoElement/NoElement'\n\nimport useQueryUrl from '../../hooks/useQueryUrl'\n\nimport {\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsersSelector,\n} from '../../redux/selectors/users-selectors'\nimport { getUsers } from '../../redux/reducers/users-reducer'\n\nimport { UserType } from '../../types/types'\n\nconst Users: React.FC = () => {\n  const pageSize = useSelector(getPageSize)\n  const users = useSelector(getUsersSelector)\n  const isFetching = useSelector(getIsFetching)\n  const totalUsersCount = useSelector(getTotalUsersCount)\n  const dispatch = useDispatch()\n\n  const { pathname } = useLocation()\n\n  const maxPageCount = Math.ceil(totalUsersCount / pageSize)\n\n  const [isShowMoreUsersButton, setIsShowMoreUsersButton] = useState(true)\n  // eslint-disable-next-line prefer-const\n  let [pageNumber, setPageNumber] = useState(1)\n  const { termOfUrl, setTermOfUrl } = useQueryUrl(pathname)\n\n  // for Search\n  const searchUsers = useCallback(\n    (term: string) => {\n      setPageNumber(1)\n      setTermOfUrl(term)\n      dispatch(getUsers(1, term))\n\n      if (maxPageCount === pageNumber) {\n        setIsShowMoreUsersButton(false)\n      }\n      if (maxPageCount > pageNumber) {\n        setIsShowMoreUsersButton(true)\n      }\n    },\n    [dispatch, maxPageCount, pageNumber, setTermOfUrl]\n  )\n\n  useEffect(() => {\n    if (totalUsersCount > pageSize) {\n      setIsShowMoreUsersButton(true)\n    } else {\n      setIsShowMoreUsersButton(false)\n    }\n  }, [maxPageCount, totalUsersCount, pageSize])\n\n  useEffect(() => {\n    dispatch(getUsers(1, termOfUrl))\n  }, [termOfUrl, pathname, dispatch])\n\n  const handleShowMoreUsers = useCallback(() => {\n    if (maxPageCount > pageNumber) {\n      setPageNumber(++pageNumber)\n      dispatch(getUsers(pageNumber, termOfUrl))\n    }\n    if (maxPageCount === pageNumber) {\n      setIsShowMoreUsersButton(false)\n    }\n  }, [dispatch, maxPageCount, pageNumber, termOfUrl])\n\n  return (\n    <main className={s.container}>\n      <h1 className={s.visuallyHidden}>Users</h1>\n      <Search\n        searchUsers={searchUsers}\n        totalUsersCount={totalUsersCount}\n        termOfUrl={termOfUrl}\n        pathname={pathname}\n      />\n\n      {totalUsersCount === 0 && !isFetching && (\n        <NoElement elements='users' writeSomething={false} />\n      )}\n\n      <div className={s.wrapUsers}>\n        <div className={s.users}>\n          {users.map((u: UserType) => (\n            <User\n              key={u.id}\n              user={{\n                id: u.id,\n                name: u.name,\n                status: u.status,\n                followed: u.followed,\n                photos: u.photos,\n              }}\n            />\n          ))}\n        </div>\n\n        <div\n          className={cn(s.buttonLoadMore, {\n            [s.hiddenButtonLoadMore]: !isShowMoreUsersButton,\n          })}\n        >\n          <IconButton title='Load more users' onClick={handleShowMoreUsers}>\n            <ExpandMoreIcon />\n          </IconButton>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default memo(Users)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { getIsFetching } from '../../redux/selectors/users-selectors'\nimport Preloader from '../common/Preloader/Preloader'\nimport Users from './Users'\n\nconst UsersContainer = () => {\n  const isFetching = useSelector(getIsFetching)\n\n  return (\n    <>\n      {isFetching ? <Preloader display='default' /> : null}\n      <Users />\n    </>\n  )\n}\n\nexport default UsersContainer\n"],"sourceRoot":""}