{"version":3,"sources":["components/Users/Users.module.css","../node_modules/classnames/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","unsupportedIterableToArray","TypeError","Pagination","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","onClick","filter","p","map","className","cn","s","selectedPage","pageNumber","Users","props","users","u","container","column_avatar","to","id","src","photos","small","unknown","alt","followed","disabled","followingInProgress","some","unfollow","follow","column_data","name","status","getUsersSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","getUsersThunk","setCurrentPage","this","Preloader","React","Component","compose","connect","toggleFollowingProgress"],"mappings":"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","file":"static/js/3.e5a74785.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Users_pageNumber__24046\",\"selectedPage\":\"Users_selectedPage__3lwod\",\"container\":\"Users_container__gMpcS\",\"column_avatar\":\"Users_column_avatar__out0K\",\"column_data\":\"Users_column_data__3NNuW\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport s from './Users.module.css'; // это модульные стили, есть еще style component\r\nimport unknown from './../../img/no_photo.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cn from 'classnames';\r\n\r\n\r\n\r\nconst Pagination = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10 }) => {\r\n\r\n  // или count of pages - количество страниц\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  // portionCount - кол-во порций (каждая порция по 10 страниц)\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  // portionNumber - номер порции\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionNumber = portionNumber * portionSize;\r\n\r\n  return <>\r\n    {portionNumber > 1 &&\r\n      <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n    {pages\r\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\r\n      .map(p => {\r\n        return <span \r\n        className={cn({[s.selectedPage]: currentPage === p}, s.pageNumber)} \r\n        key={p}\r\n        onClick={() => { onPageChanged(p) }}>{p}</span>\r\n      })}\r\n\r\n    {portionCount > portionNumber &&\r\n      <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n  </>\r\n}\r\n\r\n\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n  return <>\r\n    <Pagination\r\n      totalUsersCount={props.totalUsersCount}\r\n      pageSize={props.pageSize}\r\n      currentPage={props.currentPage}\r\n      onPageChanged={props.onPageChanged}\r\n    />\r\n\r\n    { props.users.map(u =>\r\n      <div key={u.id} className={s.container}>\r\n\r\n        <div className={s.column_avatar}>\r\n          <NavLink to={'/profile/' + u.id}>\r\n            <img src={u.photos.small !== null ? u.photos.small : unknown} alt=\"I\" />\r\n          </NavLink>\r\n          {/* some проверяет условие и возвращает true/ false */}\r\n          {u.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n              onClick={() => { props.unfollow(u.id) }}>Unfollow</button>\r\n\r\n            : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n              onClick={() => { props.follow(u.id) }}>Follow</button>}\r\n        </div>\r\n\r\n        <div className={s.column_data}>\r\n          <span>{u.name}</span>\r\n          <span>{u.status}</span>\r\n          <span>{'u.location.city'}</span>\r\n          <span>{'u.location.country'}</span>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n    }\r\n  </>\r\n}\r\n\r\nexport default Users;","// Селекторы - это функции, возращающие конкретный объект данных из кучи BLL. Плюс их использования в том, что можно поменять что-то здесь в селекторе и изменить это во многих местах, где эти функции-селекторы вызываются. \r\n\r\n// Проблемы селекторов: \r\n// 1. Вычисления (в том числе и тяжёлые) выполняются каждый раз как изменяется состояние (результат вычислений не кэшируется), \r\n// 2. Лишние перерисовки компоненты из-за создания новых одинаковых объектов (объекты с одними и теми же значениями не равны друг другу), \r\n// 3. Сложно дебажить, т.к. при каждой перерисовке попадаешь в один и тот же селектор. \r\n\r\n// Но с помощью библиотеки reselect можно решить эти проблемы. И если вычисления тяжёлые, то использовать данную библиотеку имеет смысл. Данные будут сохранятьсяв кэше.Простые селекторы по прежнему создаём руками. Библиотека создаёт сложные селекторы, используя результаты вычислений простых примитивных селекторов. Также они могут состоять их таких же сложных селекторов + примитивных. Простые селекторы - это ЗАВИСИМОСТИ для сложного селектора, и он будет перерисовывать компоненту только когда реально изменится одна из таких зависимостей.\r\n\r\n// import { createSelector } from \"reselect\";\r\n\r\n// это примитивные селектор, который возвращает конкретный массив данных\r\n// const primitiveSelector = (state) => {\r\n//   return state.usersPage.users\r\n// };\r\n\r\n// это селектор от reselect, использующий результат примитивного селектора и выполняющий сложную логику. reselct сама вызовет (если что-то изменится в них) функции primitiveSelector и getIsFetching и потом перерисует компоненту (а рендер трудозатратен), которая зависит от результата работы superPuperSelector\r\n// export const superPuperSelector = createSelector(\r\n//   primitiveSelector, getIsFetching, (users, isFetching) => {\r\n//     return users.filter(u => true) = сложная логика\r\n// })\r\n\r\n\r\n\r\n\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}; \r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}; \r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsersThunk } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n// import withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsersSelector, \r\n  // getUserSuperPuperSelector, \r\n  getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\n\r\n// UsersContainer - первая контейнерная компонента вокруг Users, отвечающая за AJAX запросы и отрисовку Users\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsersThunk(currentPage, pageSize);\r\n  }\r\n\r\n  // пишем через стрелочную функцию, чтобы сохранить контекст вызова, чтобы не использовать bind\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n    this.props.setCurrentPage(pageNumber); // подсвечиваем текущую страницу\r\n  }\r\n\r\n  render() {\r\n    // <> - это фрагмент, то же самое: <Fragment></Fragment> --> вместо div для доступности\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n\r\n      <Users\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\n// функция connect передает сама в mapStateToProps state, а мы можем забыть про store\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // users: getUserSuperPuperSelector(state),\r\n    users: getUsersSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  }\r\n};\r\n// после вызова одного из методов объекта из mapDispatchToProps store изменяется и после этого перерисовывается UI (вызывается mapStateToProps и достаются оттуда свежие пропсы)\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userID) => {\r\n//       dispatch(followAC(userID));\r\n//     },\r\n//     unfollow: (userID) => {\r\n//       dispatch(unfollowAC(userID));\r\n//     },\r\n//     ...\r\n//   }\r\n// };\r\n// компоненте Users в качестве свойств объекта props будут переданы свойства из mapStateToProps и mapDispatchToProps. В Users мы можем обращаться к ним, как props.pageSize или props.setTotalUsersCount() и т.д.\r\n\r\n// безымянная втроая контейнерная компонента нужна для общения со store, для прокидывания данных в первую контейнерную компоненту UsersContainer и ее отрисовку\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsersThunk\r\n  }),\r\n  // withAuthRedirect\r\n)(UsersContainer)\r\n"],"sourceRoot":""}