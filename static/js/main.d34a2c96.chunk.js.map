{"version":3,"sources":["components/Users/Users.module.css","App.module.css","components/Profile/Wall/Wall.module.css","components/Users/Search/Search.module.css","components/hoc/withAuthRedirect.js","redux/messages-reducer.js","components/Users/User/User.jsx","components/common/ElementCustom/InputCustomSearchUsers.jsx","components/Users/Search/Search.jsx","components/Profile/ProfileInfo/ProfileData.module.css","api/api.js","components/Profile/ProfileInfo/DataForm/DataForm.module.css","components/Navbar/Navbar.module.css","redux/auth-reducer.js","redux/profile-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/hoc/withSuspense.js","img/icons/logo.svg","img/icons/logout.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","img/avatar_2.jpg","components/Profile/Wall/Post/Post.jsx","components/Profile/Wall/Wall.jsx","components/Profile/Wall/WallContainer.jsx","components/common/ElementCustom/InputCustomProfileStatus.jsx","components/common/inputCount/inputCount.js","components/Profile/ProfileInfo/Status/Status.jsx","components/common/ElementCustom/renderCheckbox.js","components/Profile/ProfileInfo/DataForm/DataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","img/icons/camera.svg","components/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Friends/Friends.jsx","components/Error/ErrorBoundary.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfoContainer.module.css","components/common/ElementCustom/renderTextField.js","components/Users/User/User.module.css","components/Profile/ProfileInfo/Status/Status.module.css","components/Login/Login.module.css","img/preloader.svg","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","components/Profile/Wall/Post/Post.module.css","redux/users-reducer.js","img/no_photo.svg"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessage","newMessageBody","type","messagesReducer","action","User","photo","status","followed","unfollow","follow","followingInProgress","authorizedUserID","style","textDecoration","display","className","s","wrapAvatarNameAndStatus","avatar","src","unknown","alt","nameAndStatus","length","data-tooltip","button","onClick","disabled","some","color","justifyContent","alignItems","flexBasis","startIcon","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","margin","width","maxWidth","breakpoints","up","marginLeft","spacing","searchIcon","padding","height","pointerEvents","inputRoot","inputInput","paddingLeft","Search","classes","InputBase","placeholder","root","input","inputProps","onInput","e","onPageChanged","target","value","searchCount","totalUsersCount","toString","replace","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","term","friend","get","then","response","data","followUser","post","unfollowUser","delete","profileAPI","getProfile","getStatus","updateStatus","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaURLAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","userID","captchaURL","setAuthUserData","payload","getCaptchaURLAC","getAuthUserDataThunk","dispatch","a","resultCode","logoutThunk","authReducer","ADD_POST","SET_USER","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","SHOW_SUCCESS_SAVE","SHOW_ERROR_PROFILE_CONTACTS","posts","likesCount","showSuccessSave","errorProfileContacts","setStatus","savePhotoSuccessAC","photos","showSuccessSaveProfile","showErrorProfileContacts","getUserProfile","userId","profileReducer","newPost","newPostText","filter","p","postID","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","usersReducer","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","Preloader","Header","header","logoAndTitle","logo","headerTitle","loginName","buttonDesctop","Button","variant","buttonMobile","HeaderContainer","render","withRouter","profileUrl","nav","exact","activeClassName","active","navLink","fill","location","pathname","navLinkImg","viewBox","d","xmlns","version","Post","container","nameAndPost","wrapLike","IconButton","aria-label","size","like","PostReduxForm","reduxForm","onSubmit","handleSubmit","wrapSendAndButton","Field","component","renderTextField","multiline","fullWidth","maxLength","endIcon","Wall","postsElements","map","values","addPost","inputProfileStatus","minHeight","maxHeight","lineHeight","handleFocusCount","select","document","getElementById","textContent","elem","fontSize","right","top","handleBlurCount","handleInputCount","num","wrap","count","Status","useState","editMode","setEditMode","useEffect","Input","autoFocus","bind","onFocus","onBlur","onChange","currentTarget","buttons","buttonWrap","isOwner","statusEmpty","statusNotMy","renderCheckbox","label","FormControlLabel","control","Checkbox","checked","labelPlacement","initialValues","custom","titleForm","cn","wrapForCount","countStyle","titleAllContacts","Object","keys","contacts","key","titleContact","Contact","contactTitle","contactValue","contact","contactTextWrap","contactText","href","ProfileData","containerForm","aboutMe","title","text","job","lookingForAJob","lookingForAJobDescription","val","ScrollToTopOnMount","scrollTo","ProfileInfoContainer","editModeProfile","seteditModeProfile","containerMain","columnLeft","avatarWrap","large","camera","htmlFor","wrapImg","editPhotoInput","files","savePhotoThunk","marginTop","buttonsSaveAndCancelProfile","submit","successSave","columnRight","fullName","saveProfileThunk","ProfileContainer","match","params","history","push","refreshProfile","prevProps","WallContainer","PureComponent","getState","setTimeout","LoginReduxForm","validate","errors","forEach","field","test","error","row","rowCheckbox","fontWeight","formError","loginThunk","stopSubmit","_error","url","body","Friends","friends","u","user","small","isFetching","users","getFriends","toggleFollowingProgress","wrapper","pageNumber","nothingFound","ErrorBoundary","whiteSpace","children","DialogsContainer","lazy","UsersContainer","AppContainer","initializeAppThunk","Promise","all","fon","appWrapper","appWrapperContent","from","path","createMuiTheme","palette","primary","main","cyan","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","meta","touched","warning","left","preloader","FOLLOW","UNFOLLOW","SET_USERS","CLEAR_USERS","SET_FRIENDS","SET_FOUND_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","foundUsers","followSuccess","unfollowSuccess","setFriends","setTotalUsersCount","clearUsers","setCurrentPage","toggleIsFetching","page","items","totalCount","getFoundUsers","followUnfollowFlow","apiMethod","actionCreator"],"mappings":"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","file":"static/js/main.d34a2c96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__3Yevw\",\"nothingFound\":\"Users_nothingFound__2cse7\",\"container\":\"Users_container__gMpcS\",\"user\":\"Users_user__AVhKe\",\"buttonLoadMore\":\"Users_buttonLoadMore__1kZ2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__Rn3Sm\",\"container\":\"App_container__2T05O\",\"appWrapper\":\"App_appWrapper__1hlCE\",\"appWrapperContent\":\"App_appWrapperContent__1C2YH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wall_container__1uEMX\",\"wrapSendAndButton\":\"Wall_wrapSendAndButton__2y9qX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2QBqv\",\"searchCount\":\"Search_searchCount__3-oiu\"};","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  \r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect;","// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: '1', name: 'Denis' },\r\n    { id: '2', name: 'Andrey' },\r\n    { id: '3', name: 'Alexandr' },\r\n    { id: '4', name: 'Alisa' },\r\n  ],\r\n\r\n  messages: [\r\n    { id: '1', message: 'Hi!' },\r\n    { id: '2', message: 'lalalalalalala' },\r\n    { id: '3', message: 'How are you?' },\r\n  ],\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n  // копируем только то, что планируем изменять; внутренние объекты массива (с id которые) мы менять не планируем, поэтому их копию и не делаем\r\n  // stateCopy = 'копия state' или copy of state\r\n\r\n  switch (action.type) {\r\n    // case UPDATE_NEW_MESSAGE_BODY:\r\n    //   return {\r\n    //     ...state,\r\n    //     newMessageBody: action.body\r\n    //   };\r\n\r\n    case SEND_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [\r\n          ...state.messages, \r\n          { id: '6', \r\n          message: action.newMessageBody }\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// updateNewMessageBody (читается: обновить ТЕЛО нового сообщения) то же самое, что и \"body of new message\"\r\n// больше его не надо, т.к. за состояние сообщения теперь отвечает библиотека redux-form\r\n// export const updateNewMessageBody = (symbol) => ({\r\n//   type: UPDATE_NEW_MESSAGE_BODY,\r\n//   body: symbol\r\n// });\r\nexport const sendMessage = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default messagesReducer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './User.module.css';\r\nimport unknown from './../../../img/no_photo.svg';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst User = (props) => {\r\n  const { id, photo, name, status, followed, unfollow, follow, followingInProgress, authorizedUserID } = props;\r\n\r\n  return <>\r\n    <NavLink to={'/profile/' + id}\r\n      style={{ textDecoration: 'none', display: 'block' }}>\r\n      <div className={s.wrapAvatarNameAndStatus}>\r\n        <div>\r\n          <div className={s.avatar}>\r\n            <img src={photo !== null ? photo : unknown} alt=\"avatar\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.nameAndStatus}>\r\n          {name && (name.length > 17)\r\n            ? <div data-tooltip={name}>\r\n              <div className={s.name}>{name}</div>\r\n            </div>\r\n            : <div className={s.name}>{name}</div>\r\n          }\r\n          {status && (status.length > 17)\r\n            ? <div data-tooltip={status}>\r\n              <div className={s.status}>{status}</div>\r\n            </div>\r\n            : <div className={s.status}>{status}</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </NavLink>\r\n\r\n    {followed\r\n      ? <div className={s.button}>\r\n        <Button\r\n          onClick={() => unfollow(id)}\r\n          disabled={followingInProgress.some(id => id === id)}\r\n          color=\"secondary\"\r\n          style={{ justifyContent: 'flex-end', alignItems: 'flex-start', flexBasis: '200px' }}\r\n          startIcon={<RemoveIcon />}\r\n        >Unfollow</Button>\r\n      </div>\r\n\r\n      : (id == authorizedUserID) ? <></>\r\n\r\n        : <div className={s.button}>\r\n          <Button\r\n            onClick={() => follow(id)}\r\n            disabled={followingInProgress.some(id => id === id)}\r\n            color=\"primary\"\r\n            style={{ justifyContent: 'flex-end', alignItems: 'flex-start', flexBasis: '200px' }}\r\n            startIcon={<AddIcon />}\r\n          >Follow</Button>\r\n        </div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default User;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.25)',\r\n    },\r\n    margin: '10px 0 10px 0',\r\n    width: '100%',\r\n    maxWidth: '24ch',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    // transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    \r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\n\r\nimport s from './Search.module.css';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport useStyles from '../../../components/common/ElementCustom/InputCustomSearchUsers';\r\n\r\nconst Search = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={s.search}>\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n          placeholder=\"Search by name...\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          onInput={(e) => props.onPageChanged(1, e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={s.searchCount}>\r\n        Total: {props.totalUsersCount.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ')}\r\n        {/* добавление пробела между числами: (?=pattern)+ - жадное повторение последнего шаблона один или несколько раз до конца строки $ */}\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default Search;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ProfileData_containerForm__3mx3W\",\"wrap\":\"ProfileData_wrap__rre8b\",\"aboutMe\":\"ProfileData_aboutMe__1097U\",\"job\":\"ProfileData_job__1RlV3\",\"contacts\":\"ProfileData_contacts__2wvAD\",\"title\":\"ProfileData_title__11R4l\",\"text\":\"ProfileData_text__3mDxR\",\"contact\":\"ProfileData_contact__3Nuyc\",\"contactTitle\":\"ProfileData_contactTitle__4K4s9\",\"contactTextWrap\":\"ProfileData_contactTextWrap__3j9u0\",\"contactText\":\"ProfileData_contactText__2FsvT\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true, // цепляем cookie к запросу\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '9fe42175-1733-4793-9c3f-72022637a8a0'\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize, term, friend) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`)\r\n      .then(response => response.data)\r\n  },\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`, {})\r\n  },\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`)\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(id) {\r\n    return instance.get(`profile/${id}`)\r\n  },\r\n  getStatus(id) {\r\n    return instance.get(`profile/status/${id}`)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status })\r\n  },\r\n  savePhotoAPI(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    \r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  },\r\n  saveProfileAPI(profile) {\r\n    return instance.put(`profile`, profile)\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance.post('/auth/login', { email, password, rememberMe, captcha })\r\n  },\r\n  logout() {\r\n    return instance.delete('/auth/login')\r\n  }\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaURLAPI() {\r\n    return instance.get(`security/get-captcha-url`)\r\n  },\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataForm_form__1S9PR\",\"titleForm\":\"DataForm_titleForm__1Qg-K\",\"wrap\":\"DataForm_wrap__2i0n6\",\"contacts\":\"DataForm_contacts__TpjCA\",\"titleAllContacts\":\"DataForm_titleAllContacts__29i8c\",\"titleContact\":\"DataForm_titleContact__292N6\",\"countStyle\":\"DataForm_countStyle__2XMh6\",\"wrapForCount\":\"DataForm_wrapForCount__31799\",\"errorProfileContacts\":\"DataForm_errorProfileContacts__TVq5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3R0rh\",\"navLink\":\"Navbar_navLink__3jqZB\",\"navLinkImg\":\"Navbar_navLinkImg__3kMZG\",\"active\":\"Navbar_active__2b-XZ\"};","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n  userID: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaURL: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setAuthUserData = (userID, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userID, email, login, isAuth }\r\n});\r\nconst getCaptchaURLAC = (captchaURL) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS,\r\n  payload: { captchaURL }\r\n});\r\n\r\nexport const getAuthUserDataThunk = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nconst getCaptchaURLThunk = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaURLAPI();\r\n  const captcha = response.data.url;\r\n  dispatch(getCaptchaURLAC(captcha))\r\n}\r\n\r\nexport const loginThunk = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserDataThunk())\r\n    dispatch(getCaptchaURLAC(null))\r\n  }\r\n\r\n  if (response.data.resultCode === 1) {\r\n    const message = response.data.messages;\r\n    const action = stopSubmit('loginForm', {\r\n      _error: message.length > 0 ? message[0] : 'Some error'\r\n    });\r\n    // Some error - на всякий случай, если с сервера придёт пустое сообщение при ошибке\r\n    dispatch(action);\r\n  }\r\n\r\n  if (response.data.resultCode === 10) {\r\n    dispatch(getCaptchaURLThunk())\r\n  }\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n  const response = await authAPI.logout();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER = 'SET-USER';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst SHOW_SUCCESS_SAVE = 'SHOW_SUCCESS_SAVE';\r\nconst SHOW_ERROR_PROFILE_CONTACTS = 'SHOW_ERROR_PROFILE_CONTACTS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: '1', message: 'Стена Привет!', likesCount: 12 },\r\n    { id: '2', message: 'Стена Как дела?', likesCount: 4 },\r\n  ],\r\n\r\n  profile: null,\r\n  status: '',\r\n  showSuccessSave: '',\r\n  errorProfileContacts: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [\r\n          newPost,\r\n          ...state.posts,\r\n        ],\r\n      }\r\n    }\r\n    case SET_USER: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postID)\r\n      }\r\n    }\r\n    case SAVE_PHOTO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, photo: action.photo }\r\n      }\r\n    }\r\n    case SHOW_SUCCESS_SAVE: {\r\n      return {\r\n        ...state,\r\n        showSuccessSave: action.message,\r\n      }\r\n    }\r\n    case SHOW_ERROR_PROFILE_CONTACTS: {\r\n      return {\r\n        ...state,\r\n        errorProfileContacts: action.message,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (postID) => ({ type: DELETE_POST, postID });\r\n\r\nconst setUserProfile = (profile) => ({ type: SET_USER, profile });\r\nconst setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nconst savePhotoSuccessAC = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\nconst showSuccessSaveProfile = (message) => ({ type: SHOW_SUCCESS_SAVE, message });\r\nconst showErrorProfileContacts = (message) => ({ type: SHOW_ERROR_PROFILE_CONTACTS, message });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (id) => async (dispatch) => {\r\n  const response = await profileAPI.getStatus(id);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport const savePhotoThunk = (photos) => async (dispatch) => {\r\n  const response = await profileAPI.savePhotoAPI(photos);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccessAC(response.data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfileThunk = (formData) => async (dispatch, getState) => {\r\n  let response = await profileAPI.saveProfileAPI(formData);\r\n  const userID = getState().auth.userID;\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userID));\r\n    dispatch(showSuccessSaveProfile('Data saved successfully!'));\r\n    setTimeout(dispatch, 4000, showSuccessSaveProfile(''));\r\n    dispatch(showErrorProfileContacts(''));\r\n  }\r\n  \r\n  if (response.data.resultCode === 1) {\r\n    // заготовка для показа ошибки конкретного поля\r\n    // let key = response.data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\r\n    // dispatch(stopSubmit('editProfile', {\r\n    //   contacts: { [key]: response.data.messages[0] },\r\n    // }));\r\n    dispatch(showErrorProfileContacts(response.data.messages[0]))\r\n  }\r\n};\r\n\r\nexport default profileReducer;","import { getAuthUserDataThunk } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeAppThunk = () => (dispatch) => {\r\n  Promise.all([\r\n    dispatch(getAuthUserDataThunk()),\r\n    // ...\r\n  ]).then(() => {\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore, compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport authReducer from './auth-reducer';\r\nimport messagesReducer from './messages-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n\r\n","import React, { Suspense } from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return <Suspense fallback={<Preloader />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/logo.cebb0f3e.svg\";","export default __webpack_public_path__ + \"static/media/logout.8e3cc1f3.svg\";","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../img/icons/logo.svg';\r\nimport logout from '../../img/icons/logout.svg';\r\nimport s from './Header.module.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <NavLink className={s.logoAndTitle} to={'/profile'}>\r\n        <img src={logo} alt='logo' />\r\n        <span className={s.headerTitle}>Social network</span>\r\n      </NavLink>\r\n\r\n      <div className={s.login}>\r\n        {props.isAuth\r\n          ? <>\r\n            <span className={s.loginName}>{props.login}</span>\r\n            <span className={s.buttonDesctop}>\r\n              <Button\r\n                onClick={props.logoutThunk}\r\n                variant=\"outlined\"\r\n                style={{ margin: 16 }}\r\n                startIcon={<ExitToAppIcon />}>\r\n                Log out\r\n              </Button>\r\n            </span>\r\n            <span className={s.buttonMobile}>\r\n              <Button\r\n                onClick={props.logoutThunk}\r\n                variant=\"outlined\"\r\n                style={{ margin: 16 }}\r\n              ><img src={logout} alt=\"logout\" />\r\n              </Button>\r\n            </span>\r\n          </>\r\n          : <Redirect to=\"/login\" />\r\n        }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logoutThunk } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render = () => <Header {...this.props} />\r\n}\r\n\r\n// это то, что придёт в контейнерную компоненту HeaderContainer, она прокинет через пропсы в функциональную компоненту Header, которая достанет их из пропсов и использует как-то\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n};\r\nexport default connect(mapStateToProps, {\r\n  logoutThunk\r\n})(HeaderContainer);","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n\r\n  const profileUrl = '/profile/' + props.authorizedUserID;\r\n\r\n  return (\r\n    <nav className={s.nav} id='navbar'>\r\n      <NavLink exact to={profileUrl} activeClassName={s.active} className={s.navLink}>\r\n        <svg width=\"24\" height=\"24\"\r\n          fill={props.location.pathname === profileUrl ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}\r\n          viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\r\n        </svg>\r\n        Profile\r\n      </NavLink>\r\n\r\n      <NavLink to='/dialogs' activeClassName={s.active} className={s.navLink}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\"\r\n          fill={props.location.pathname === '/dialogs' ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}\r\n          viewBox=\"0 0 24 24\"><path d=\"M20,2H4A2,2 0 0,0 2,4V22L6,18H20A2,2 0 0,0 22,16V4C22,2.89 21.1,2 20,2Z\" />\r\n        </svg>\r\n        Messages\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/users\" activeClassName={s.active} className={s.navLink}>\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n          fill={props.location.pathname === '/users' ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}>\r\n          <path d=\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\" />\r\n        </svg>\r\n        Find Users\r\n      </NavLink>\r\n\r\n      <NavLink to='/friends' activeClassName={s.active} className={s.navLink}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\"\r\n          fill={props.location.pathname === '/friends' ? '#00bcd4' : 'white'}\r\n          className={s.navLinkImg}\r\n          viewBox=\"0 0 24 24\"><path d=\"M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z\" />\r\n        </svg>\r\n        Friends\r\n      </NavLink>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorizedUserID: state.auth.userID,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {})\r\n)(Navbar);","export default __webpack_public_path__ + \"static/media/avatar_2.e0878a2c.jpg\";","import React from 'react';\r\n\r\nimport s from './Post.module.css';\r\nimport avatar from '../../../../img/avatar_2.jpg';\r\nimport unknown from './../../../../img/no_photo.svg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\n\r\nconst Post = (props) => {\r\n  return <div className={s.container}>\r\n    <div>\r\n      <div className={s.avatar}>\r\n        <img src={avatar !== null ? avatar : unknown} alt=\"avatar\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.nameAndPost}>\r\n      <div className={s.name}>\r\n        Name user\r\n      </div>\r\n\r\n      <div className={s.message}>\r\n        {props.message}\r\n      </div>\r\n\r\n      <div className={s.wrapLike}>\r\n        <IconButton aria-label=\"like\" size=\"small\">\r\n          <ThumbUpAltIcon/>\r\n        </IconButton>\r\n        <span className={s.like}>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport Post from './Post/Post';\r\n\r\nimport s from './Wall.module.css';\r\nimport renderTextField from '../../../components/common/ElementCustom/renderTextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\nconst Wall = (props) => {\r\n\r\n  let postsElements = props.posts.map(p =>\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let handleAddPost = (values) => {\r\n    // values - введённые данные в форме (name='newPostText' см. у Field)\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <PostReduxForm onSubmit={handleAddPost} />\r\n      {postsElements}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div className={s.wrapSendAndButton}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='newPostText'\r\n        placeholder='Enter the post text...'\r\n        multiline={true}\r\n        fullWidth={true}\r\n        variant=\"outlined\"\r\n        inputProps={{ maxLength: 1000 }}\r\n      />\r\n      <Button\r\n        type='submit'\r\n        variant=\"contained\"\r\n        color='primary'\r\n        style={{ color: 'white', marginLeft: '10px', width: '160px' }}\r\n        endIcon={<PostAddIcon />}\r\n      >Add post</Button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ form: 'profileNewPostForm' })(AddNewPostForm);\r\n\r\nexport default Wall;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport Wall from './Wall';\r\n\r\n// class WallContainer extends React.Component {\r\n\r\n// componentDidMount() {\r\n// this.props.getUsersCreator(this.props.currentPage, this.props.pageSize);\r\n// }\r\n\r\n// пишем через стрелочную функцию, чтобы сохранить контекст вызова, чтобы не использовать bind\r\n// onPageChanged = (pageNumber) => {\r\n//   this.props.getUsersCreator(pageNumber, this.props.pageSize);\r\n//   this.props.setCurrentPage(pageNumber);\r\n// }\r\n\r\n//   render() {\r\n//     return <>\r\n//       {this.props.isFetching ? <Preloader /> : null}\r\n\r\n//       <Wall\r\n//         totalUsersCount={this.props.totalUsersCount}\r\n//         pageSize={this.props.pageSize}\r\n//         currentPage={this.props.currentPage}\r\n//         onPageChanged={this.onPageChanged}\r\n//         users={this.props.users}\r\n\r\n//         follow={this.props.follow}\r\n//         unfollow={this.props.unfollow}\r\n//         followingInProgress={this.props.followingInProgress}\r\n//       />\r\n//     </>\r\n//   }\r\n// }\r\n\r\n\r\n// эта функция запускается при каждом изменнеии, создается новый объект и затем сравнивается со старым объектом. если бы мы не делали копию объекта в reducer, то ничего бы не перерисовывалось\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n};\r\n\r\n// перерисовка происходит после обнаружения, что появился новый объект. А он создастся после изменений, т.к. мы придерживаемся иммутабельности и старые объекты не меняем\r\nexport default connect(mapStateToProps, {\r\n  addPost\r\n})(Wall);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputProfileStatus: {\r\n    minHeight: '30px',\r\n    maxHeight: '180px',\r\n    lineHeight: '25px',\r\n    padding: theme.spacing(1),\r\n    backgroundColor: '#4F4F4F', \r\n    borderRadius: '5px 5px 0 0',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","// Памятка:\r\n//1. import { handleInputCount, handleFocusCount, handleBlurCount} from '../../../common/inputCount/inputCount';\r\n//2. Передать в input: \r\n      // name='...'\r\n      // onInput={handleInputCount.bind(null, num100)}\r\n      // onFocus={handleFocusCount}\r\n      // onBlur={handleBlurCount}\r\n//3. Добавить в компоненту: \r\n      //const num100 = 100;\r\n//4. Добавить в компоненту: \r\n      // <span id='statusWrapCount' className={s.countStyle}><span id='statusCount'></span> of 100</span>\r\n//5. Задать родителю span-a: \r\n      // position: relative;\r\n//6. Если нужно, чтобы не был виден счётчик при первом отображении input, применить:\r\n      // .countStyle {display: none;}\r\n\r\nexport const handleFocusCount = (e) => {\r\n  e.target.select();\r\n\r\n  document.getElementById(e.target.name + 'Count').textContent = e.target.value.length;\r\n\r\n  const elem = document.getElementById(e.target.name + 'WrapCount');\r\n  elem.style.display = 'inline-block';\r\n  elem.style.fontSize = '10px';\r\n  elem.style.position = 'absolute';\r\n  elem.style.right = '10px';\r\n  elem.style.top = 0;\r\n}\r\n\r\nexport const handleBlurCount = (e) => {\r\n  document.getElementById(e.target.name + 'WrapCount').style.display = 'none';\r\n}\r\n\r\nexport const handleInputCount = (num, e) => {\r\n  const wrap = e.target.name + 'WrapCount';\r\n  const count = e.target.name + 'Count';\r\n  const length = e.target.value.length;\r\n\r\n  if (length < num - 10) document.getElementById(wrap).style.color = 'white';\r\n  if (length >= num - 10) document.getElementById(wrap).style.color = 'yellow';\r\n  if (length === num) document.getElementById(wrap).style.color = 'red';\r\n\r\n  document.getElementById(count).textContent = e.target.value.length\r\n}","import React, { useEffect, useState } from 'react';\r\nimport s from './Status.module.css';\r\n\r\nimport { Input, Button } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport useStyles from '../../../common/ElementCustom/InputCustomProfileStatus';\r\nimport { handleInputCount, handleFocusCount, handleBlurCount } from '../../../common/inputCount/inputCount';\r\n\r\nconst Status = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => setEditMode(true);\r\n  const onStatusChange = (e) => setStatus(e.currentTarget.value);\r\n  const cancelEditMode = () => setEditMode(false);\r\n\r\n  const saveStatus = () => {\r\n    props.updateStatus(status);\r\n    setEditMode(false);\r\n  }\r\n\r\n  const num300 = 300;\r\n\r\n  return <div className={s.container}>\r\n    {editMode && <div className={s.wrap}>\r\n      <Input\r\n        name='status'\r\n        value={status}\r\n        placeholder={'Your status...'}\r\n        autoFocus\r\n        inputProps={{ maxLength: 300 }}\r\n        className={classes.inputProfileStatus}\r\n        multiline={true}\r\n        fullWidth={true}\r\n        onInput={handleInputCount.bind(null, num300)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n        onChange={onStatusChange}\r\n      />\r\n\r\n      <div className={s.buttons}>\r\n        <div className={s.buttonWrap}>\r\n          <Button\r\n            onClick={saveStatus}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ color: '#fff', margin: 10, width: '100%' }}\r\n            startIcon={<SaveIcon />}\r\n          >Save</Button>\r\n        </div>\r\n        <div className={s.buttonWrap}>\r\n          <Button\r\n            onClick={cancelEditMode}\r\n            variant=\"outlined\"\r\n            style={{ margin: 10, width: '100%' }}\r\n            startIcon={<CloseIcon />}\r\n          >Cancel</Button>\r\n        </div>\r\n\r\n        <span id='statusWrapCount'>\r\n          <span id='statusCount'></span> of 300\r\n        </span>\r\n      </div>\r\n    </div>\r\n    }\r\n\r\n    {props.isOwner && !editMode && <div className={s.status} onClick={activateEditMode}>\r\n      {props.status ||\r\n        <span className={s.statusEmpty}>\r\n          Your status is empty\r\n        </span>\r\n      }\r\n    </div>\r\n    }\r\n\r\n    {!props.isOwner && props.status && <div className={s.statusNotMy}>\r\n      {props.status}\r\n    </div>\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Status;","import { FormControlLabel, Checkbox } from '@material-ui/core';\r\n\r\nconst renderCheckbox = ({ input, label }) => {\r\n  return <div>\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={input.value ? true : false}\r\n          onChange={input.onChange}\r\n        />}\r\n      label={label}\r\n      labelPlacement=\"start\"\r\n      style={{ marginLeft: 0 }}\r\n    />\r\n  </div>\r\n}\r\n\r\nexport default renderCheckbox;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport renderTextField from '../../../common/ElementCustom/renderTextField';\r\nimport renderCheckbox from '../../../common/ElementCustom/renderCheckbox';\r\nimport s from './DataForm.module.css';\r\nimport cn from 'classnames';\r\n\r\nimport { handleInputCount, handleFocusCount, handleBlurCount } from '../../../common/inputCount/inputCount';\r\n\r\nconst DataForm = (props) => {\r\n  const { handleSubmit, initialValues, ...custom } = props;\r\n\r\n  const num100 = 100;\r\n  const num1000 = 1000;\r\n\r\n  return <form onSubmit={handleSubmit} className={s.form}>\r\n\r\n    <h1 className={s.titleForm}>Edit profile</h1>\r\n\r\n    <div className={cn(s.wrap, s.wrapForCount)}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='fullName'\r\n        label='Name:'\r\n        placeholder='Your name'\r\n        variant=\"filled\"\r\n        fullWidth={true}\r\n        inputProps={{ maxLength: 100 }}\r\n        onInput={handleInputCount.bind(null, num100)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n      />\r\n      <span id='fullNameWrapCount' className={s.countStyle}>\r\n        <span id='fullNameCount'></span> of 100\r\n      </span>\r\n    </div>\r\n\r\n    <div className={cn(s.wrap, s.wrapForCount)}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='aboutMe'\r\n        label='About me:'\r\n        placeholder='Write about yourself!'\r\n        multiline={true}\r\n        fullWidth={true}\r\n        variant=\"filled\"\r\n        inputProps={{ maxLength: 1000 }}\r\n        onInput={handleInputCount.bind(null, num1000)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n      />\r\n      <span id='aboutMeWrapCount' className={s.countStyle}>\r\n        <span id='aboutMeCount'></span> of 1000\r\n      </span>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <Field\r\n        component={renderCheckbox}\r\n        name='lookingForAJob'\r\n        label='Are you looking for a job?'\r\n      />\r\n    </div>\r\n\r\n    <div className={cn(s.wrap, s.wrapForCount)}>\r\n      <Field\r\n        component={renderTextField}\r\n        name='lookingForAJobDescription'\r\n        label='Professional skills:'\r\n        placeholder='What you can do?'\r\n        multiline={true}\r\n        fullWidth={true}\r\n        variant=\"filled\"\r\n        inputProps={{ maxLength: 1000 }}\r\n        onInput={handleInputCount.bind(null, num1000)}\r\n        onFocus={handleFocusCount}\r\n        onBlur={handleBlurCount}\r\n      />\r\n      <span id='lookingForAJobDescriptionWrapCount' className={s.countStyle}>\r\n        <span id='lookingForAJobDescriptionCount'></span> of 1000\r\n      </span>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.titleAllContacts}>Contacts:</div>\r\n\r\n      <div className={s.errorProfileContacts}>\r\n        {custom.errorProfileContacts}\r\n      </div>\r\n\r\n      {Object.keys(initialValues.contacts).map(key => {\r\n        return <div className={s.contacts} key={key}>\r\n          <div className={s.titleContact}>{key}:</div>\r\n          <Field\r\n            component={renderTextField}\r\n            name={'contacts.' + key}\r\n          />\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'editProfile',\r\n})(DataForm);\r\n","import React from 'react';\r\nimport s from './ProfileData.module.css';\r\n\r\nconst ProfileData = ({ profile }) => {\r\n  return <div className={s.containerForm}>\r\n\r\n    <div className={s.wrap}>\r\n      {profile.aboutMe && <div className={s.aboutMe}>\r\n        <div className={s.title}>About me:</div>\r\n        <div className={s.text}>{profile.aboutMe}</div>\r\n      </div>\r\n      }\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      <div className={s.job}>\r\n        <div className={s.title}>Job search:</div>\r\n        {profile.lookingForAJob\r\n          ? <div className={s.text}>Now looking for a job!</div>\r\n          : <div className={s.text}>I'm not looking for a job</div>}\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      {profile.lookingForAJobDescription && <div className={s.job}>\r\n        <div className={s.title}>Professional skills:</div>\r\n        <div className={s.text}>{profile.lookingForAJobDescription}</div>\r\n      </div>\r\n      }\r\n    </div>\r\n\r\n    <div className={s.wrap}>\r\n      {Object.values(profile.contacts).some(val => val && val !== '')\r\n        && <div className={s.contacts}>\r\n          <div className={s.title}>My contacts</div>\r\n          {Object.keys(profile.contacts).map(key => {\r\n            return <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]} />\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  </div >\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (<>\r\n    {contactValue\r\n      && <div className={s.contact}>\r\n        <span className={s.contactTitle}>{contactTitle}:</span>\r\n        <div className={s.contactTextWrap}>\r\n          <a className={s.contactText} href={contactValue}>{contactValue}</a>\r\n        </div>\r\n      </div>}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProfileData;","export default __webpack_public_path__ + \"static/media/camera.12909c41.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { submit } from 'redux-form';\r\n\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Status from './Status/Status';\r\nimport DataForm from './DataForm/DataForm';\r\nimport ProfileData from './ProfileData';\r\n\r\nimport camera from '../../../img/icons/camera.svg';\r\nimport unknown from '../../../img/no_photo.svg';\r\nimport s from './ProfileInfoContainer.module.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// при переходе на старницу профиля скрол обнулится\r\nfunction ScrollToTopOnMount() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return null;\r\n}\r\n\r\nconst ProfileInfo = ({ dispatch, ...props }) => {\r\n\r\n  const [editModeProfile, seteditModeProfile] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhotoThunk(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.containerMain}>\r\n\r\n      {/* при переходе на старницу профиля скрол обнулится */}\r\n      <ScrollToTopOnMount />\r\n\r\n      <div className={s.columnLeft}>\r\n        <div className={s.avatarWrap}>\r\n          <div className={s.avatar}>\r\n            <img src={props.profile.photos.large || unknown} alt=\"avatar\" />\r\n            {props.isOwner && !editModeProfile &&\r\n              <div className={s.camera}>\r\n                <label htmlFor=\"file_out\">\r\n                  <div className={s.wrapImg}>\r\n                    <img src={camera} alt=\"icon\" />\r\n                  </div>\r\n                </label>\r\n                <input\r\n                  id=\"file_out\"\r\n                  className={s.editPhotoInput}\r\n                  type=\"file\"\r\n                  onChange={onMainPhotoSelected} />\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        {props.isOwner && !editModeProfile\r\n          && <Button\r\n            onClick={() => seteditModeProfile(true)}\r\n            variant=\"outlined\"\r\n            style={{ fontSize: 12, marginTop: 10 }}\r\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\r\n          >Edit profile</Button>\r\n        }\r\n\r\n        {editModeProfile && <div className={s.buttonsSaveAndCancelProfile}>\r\n          <Button\r\n            onClick={() => dispatch(submit('editProfile'))}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth={true}\r\n            style={{ fontSize: 12, color: '#fff', margin: 10 }}\r\n            startIcon={<SaveIcon />}\r\n          >Save</Button>\r\n          <Button\r\n            onClick={() => seteditModeProfile(false)}\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            style={{ fontSize: 12, color: '#fff', margin: 10 }}\r\n            startIcon={<CloseIcon />}\r\n          >Cancel</Button>\r\n        </div>}\r\n\r\n        {editModeProfile && props.showSuccessSave &&\r\n          <div className={s.successSave}>\r\n            {props.showSuccessSave}\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n\r\n      <div className={s.columnRight}>\r\n\r\n        {!editModeProfile && <div className={s.fullName}>{props.profile.fullName}</div>}\r\n\r\n        {!editModeProfile && <Status\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n          isOwner={props.isOwner} />\r\n        }\r\n\r\n        {editModeProfile\r\n          ? <DataForm\r\n            initialValues={props.profile}\r\n            errorProfileContacts={props.errorProfileContacts}\r\n            onSubmit={formData => props.saveProfileThunk(formData)}\r\n          />\r\n          : <ProfileData {...props} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileInfoContainer = connect()(ProfileInfo);\r\n\r\nexport default ProfileInfoContainer;","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\n\r\nimport { getUserProfile, getStatus, updateStatus, savePhotoThunk, saveProfileThunk } from '../../redux/profile-reducer';\r\n\r\nimport WallContainer from './Wall/WallContainer';\r\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer';\r\n\r\nclass ProfileContainer extends React.PureComponent {\r\n  refreshProfile() {\r\n\r\n    let userId = this.props.match.params.userId;\r\n    \r\n    if (!userId) {\r\n      userId = this.props.authorizedUserID;\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // рендер при переходе с одной страницы на другую\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      <ProfileInfoContainer\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        showSuccessSave={this.props.showSuccessSave}\r\n        errorProfileContacts={this.props.errorProfileContacts}\r\n\r\n        isOwner={this.props.match.params.userId == this.props.authorizedUserID}\r\n\r\n        updateStatus={this.props.updateStatus}\r\n        savePhotoThunk={this.props.savePhotoThunk}\r\n        saveProfileThunk={this.props.saveProfileThunk}\r\n      />\r\n      <WallContainer />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userID,\r\n    showSuccessSave: state.profilePage.showSuccessSave,\r\n    errorProfileContacts: state.profilePage.errorProfileContacts,\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhotoThunk,\r\n    saveProfileThunk,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { loginThunk, logoutThunk } from '../../redux/auth-reducer';\r\nimport s from './Login.module.css';\r\nimport cn from 'classnames';\r\n\r\nimport renderTextField from '../common/ElementCustom/renderTextField';\r\nimport renderCheckbox from '../common/ElementCustom/renderCheckbox';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'email',\r\n    'password',\r\n    'captcha'\r\n  ]\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n\r\n  if (values.email\r\n    && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nconst Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.loginThunk(\r\n      formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={`/profile/${props.id}`} />\r\n  }\r\n\r\n  return <div className={s.wrap}>\r\n    <div className={s.body}>\r\n      <h1>Log in</h1>\r\n      <LoginReduxForm\r\n        onSubmit={onSubmit}\r\n        logoutThunk={logoutThunk}\r\n        captchaURL={props.captchaURL} />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaURL }) => {\r\n  return <>\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={s.row}>\r\n        <Field\r\n          component={renderTextField}\r\n          name='email'\r\n          label='Email:'\r\n          type=\"email\"\r\n          fullWidth={true}\r\n        />\r\n      </div>\r\n      <div className={s.row}>\r\n        <Field\r\n          component={renderTextField}\r\n          name='password'\r\n          label='Password:'\r\n          type=\"password\"\r\n          fullWidth={true}\r\n        />\r\n      </div>\r\n      <div className={cn(s.row, s.rowCheckbox)}>\r\n        <Field\r\n          component={renderCheckbox}\r\n          name='rememberMe'\r\n          label='Remember me'\r\n        />\r\n      </div>\r\n\r\n      {captchaURL && <img src={captchaURL} alt='captcha' />}\r\n      {captchaURL &&\r\n        <Field\r\n          component={renderTextField}\r\n          fullWidth={true}\r\n          name='captcha' />\r\n      }\r\n\r\n      <div className={s.row}>\r\n        <Button\r\n          type='submit'\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ width: '100%', fontSize: 16, fontWeight: 'bold', color: '#fff' }}\r\n        >Log in</Button>\r\n\r\n        {error &&\r\n          <div className={s.formError}>\r\n            {error}\r\n          </div>\r\n        }\r\n      </div>\r\n    </form>\r\n  </>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'loginForm',\r\n  validate,\r\n})(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  captchaURL: state.auth.captchaURL,\r\n  isAuth: state.auth.isAuth,\r\n  id: state.auth.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginThunk,\r\n  logoutThunk\r\n})(Login);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  getFriends, follow, unfollow,\r\n  toggleFollowingProgress\r\n} from '../../redux/users-reducer';\r\n\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport User from '../Users/User/User';\r\nimport Search from '../Users/Search/Search';\r\n\r\nimport s from '../Users/Users.module.css';\r\n\r\nconst FriendsContainer = (props) => {\r\n  React.useEffect(() => props.getFriends(1, 100, '', true), [props.users])\r\n\r\n  const searchFriends = (pageNumber, term) => {\r\n    props.getFriends(pageNumber, props.pageSize, term);\r\n  }\r\n\r\n  return <div className={s.wrapper}>\r\n    {props.isFetching ? <Preloader /> : null}\r\n\r\n    <Search\r\n      onPageChanged={searchFriends}\r\n      totalUsersCount={props.totalUsersCount}\r\n    />\r\n\r\n    {\r\n      props.totalUsersCount === 0 &&\r\n      <div className={s.nothingFound}>Nothing found</div>\r\n    }\r\n\r\n    <Friends\r\n      friends={props.friends}\r\n      follow={props.follow}\r\n      unfollow={props.unfollow}\r\n      followingInProgress={props.followingInProgress}\r\n      authorizedUserID={props.authorizedUserID}\r\n    />\r\n  </div>\r\n}\r\n\r\nconst Friends = (props) => {\r\n  return <div className={s.container}>\r\n\r\n    {props.friends.map(u =>\r\n      <div key={u.id} className={s.user}>\r\n        <User\r\n          id={u.id}\r\n          photo={u.photos.small}\r\n          name={u.name}\r\n          status={u.status}\r\n          followed={u.followed}\r\n          unfollow={props.unfollow}\r\n          follow={props.follow}\r\n          followingInProgress={props.followingInProgress}\r\n          authorizedUserID={props.authorizedUserID}\r\n        />\r\n      </div>\r\n    )}\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = (state) => {\r\n  return {\r\n    isFetching: state.usersPage.isFetching,\r\n    friends: state.usersPage.friends,\r\n    users: state.usersPage.users,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    pageSize: state.usersPage.pageSize,\r\n    authorizedUserID: state.auth.userID,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n  }\r\n}\r\n\r\nexport default connect(mapDispatchToProps, {\r\n  getFriends,\r\n  follow,\r\n  unfollow,\r\n  toggleFollowingProgress,\r\n})(FriendsContainer)","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { error: error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return (\r\n        <div>\r\n          <h2>Something went wrong</h2>\r\n          <details style={{ whiteSpace: 'pre-wrap' }}>\r\n            {this.state.error && this.state.error.toString()}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport { initializeAppThunk } from './redux/app-reducer';\r\n\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspense } from './components/hoc/withSuspense';\r\n\r\nimport s from './App.module.css';\r\n\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Login from './components/Login/Login';\r\nimport FriendsContainer from './components/Friends/Friends';\r\nimport ErrorBoundary from './components/Error/ErrorBoundary';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nconst App = (props) => {\r\n\r\n  React.useEffect(() => props.initializeAppThunk(), []);\r\n\r\n  if (!props.initialized) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className={s.fon}>\r\n      <div className={s.container}>\r\n        <div className={s.appWrapper}>\r\n\r\n          <HeaderContainer />\r\n          <Navbar />\r\n\r\n          <div className={s.appWrapperContent}>\r\n            <ErrorBoundary>\r\n              <Switch>\r\n                <Redirect from='/profile/undefined' to=\"/\" />\r\n\r\n                <Route path='/dialogs'\r\n                  render={withSuspense(DialogsContainer)} />\r\n\r\n                <Route path='/profile/:userId'\r\n                  component={ProfileContainer} />\r\n\r\n                <Route path='/users'\r\n                  render={withSuspense(UsersContainer)} />\r\n\r\n                <Route path='/friends'\r\n                  render={() => <FriendsContainer />} />\r\n\r\n                <Route path='/login'\r\n                  render={() => <Login login={props.login} />} />\r\n\r\n                <Redirect exact from=\"/\" to={'/profile/' + props.authorizedUserID} />\r\n\r\n                <Redirect from='*' to=\"/\" />\r\n              </Switch>\r\n            </ErrorBoundary>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n  authorizedUserID: state.auth.userID,\r\n});\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    initializeAppThunk,\r\n  })\r\n)(App)\r\n\r\nexport default AppContainer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/redux-store';\r\n\r\nimport AppContainer from './App';\r\n\r\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark', // светлый текст\r\n    primary: {\r\n      main: cyan[600], // #00bcd4\r\n      // синий цвет (кнопки, активные ссылки в навигации, декоративные линии)\r\n    },\r\n    secondary: {\r\n      main: '#919191',\r\n      // фон светлее общего (hover и текст в profileForm)\r\n\r\n      // #4F4F4F\r\n      // общий фон\r\n\r\n      // #5E5E5E\r\n      // средний серый (фон статуса при редактировании)\r\n    },\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <CssBaseline />\r\n        <AppContainer />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </HashRouter>, document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfoContainer_avatar__owf3n\",\"avatarWrap\":\"ProfileInfoContainer_avatarWrap__1Dv3n\",\"camera\":\"ProfileInfoContainer_camera__1u0pX\",\"wrapImg\":\"ProfileInfoContainer_wrapImg__WweTl\",\"editPhotoInput\":\"ProfileInfoContainer_editPhotoInput__3O6IO\",\"containerMain\":\"ProfileInfoContainer_containerMain__sVz8Q\",\"columnLeft\":\"ProfileInfoContainer_columnLeft__22soQ\",\"columnRight\":\"ProfileInfoContainer_columnRight__1T13r\",\"iconButtonEditProfile\":\"ProfileInfoContainer_iconButtonEditProfile__2X_jF\",\"fullName\":\"ProfileInfoContainer_fullName__3Z0hR\",\"buttonsSaveAndCancelProfile\":\"ProfileInfoContainer_buttonsSaveAndCancelProfile__3Uq7H\",\"successSave\":\"ProfileInfoContainer_successSave__2uPbw\",\"anim\":\"ProfileInfoContainer_anim__2hv0J\"};","import { TextField } from '@material-ui/core';\r\n\r\nconst renderTextField = (props) => {\r\n  const { label, input, placeholder, multiline, variant, inputProps, onInput, onFocus, meta: { touched, error, warning }, fullWidth, ...custom } = props;\r\n\r\n  return <>\r\n    <TextField\r\n      label={label}\r\n      placeholder={placeholder}\r\n      inputProps={inputProps}\r\n      onInput={onInput}\r\n      onFocus={onFocus}\r\n      variant={variant}\r\n      multiline={multiline}\r\n      fullWidth={fullWidth}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n    {\r\n      touched && (\r\n        (error &&\r\n          <span style={{ color: 'red' }}>{error}</span>)\r\n        || (warning && <span>{warning}</span>)\r\n      )\r\n    }\r\n  </>\r\n}\r\n\r\nexport default renderTextField;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapAvatarNameAndStatus\":\"User_wrapAvatarNameAndStatus__8Hk7D\",\"avatar\":\"User_avatar__2oDgd\",\"nameAndStatus\":\"User_nameAndStatus__3sPsM\",\"name\":\"User_name__lmqfs\",\"status\":\"User_status__2tKNY\",\"button\":\"User_button__2Jj9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Status_container__1MJxC\",\"wrap\":\"Status_wrap__1LQVr\",\"buttons\":\"Status_buttons__dwSgE\",\"buttonWrap\":\"Status_buttonWrap__3P-EC\",\"status\":\"Status_status__2l5oQ\",\"statusNotMy\":\"Status_statusNotMy__F77cb\",\"statusEmpty\":\"Status_statusEmpty__3EW5z\",\"buttonSave\":\"Status_buttonSave__3y3Yw\",\"buttonCancel\":\"Status_buttonCancel__1A3Wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__18LVK\",\"body\":\"Login_body__2Hhs9\",\"row\":\"Login_row__3d41Y\",\"rowCheckbox\":\"Login_rowCheckbox__4sYwU\",\"formError\":\"Login_formError__3j1Nj\"};","export default __webpack_public_path__ + \"static/media/preloader.a2993579.svg\";","import React from 'react';\r\nimport preloader from '../../../img/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n  return <div style={{ position: 'absolute', left: 'calc(50% - 85px)' }}>\r\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <img src={preloader} alt='preloader' />\r\n    </div>\r\n  </div>\r\n\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3vTSi\",\"logoAndTitle\":\"Header_logoAndTitle__1mTjG\",\"headerTitle\":\"Header_headerTitle__2wZ_g\",\"login\":\"Header_login__1LiSF\",\"loginName\":\"Header_loginName__3CaV_\",\"logoutImg\":\"Header_logoutImg__1QW2c\",\"buttonMobile\":\"Header_buttonMobile__3V8e5\",\"buttonDesctop\":\"Header_buttonDesctop__38OBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__3VKFd\",\"avatar\":\"Post_avatar__Z9tVC\",\"nameAndPost\":\"Post_nameAndPost__14k_q\",\"name\":\"Post_name__UCrHi\",\"message\":\"Post_message__1vD2I\",\"wrapLike\":\"Post_wrapLike__1qVOH\",\"like\":\"Post_like__30Txn\"};","import { usersAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\n\r\nconst SET_USERS = 'SET-USERS';\r\nconst CLEAR_USERS = 'CLEAR_USERS';\r\nconst SET_FRIENDS = 'SET_FRIENDS';\r\nconst SET_FOUND_USERS = 'SET_FOUND_USERS';\r\n\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\n\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  friends: [],\r\n  foundUsers: [],\r\n\r\n  pageSize: 50,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n\r\n  isFetching: true,\r\n  followingInProgress: [], // button disabled после нажатия\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userID) {\r\n            return { ...u, followed: true }\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    }\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userID) {\r\n            return { ...u, followed: false }\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    }\r\n    case SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: [ ...state.users, ...action.users ],\r\n        foundUsers: []\r\n      }\r\n    }\r\n    case CLEAR_USERS: {\r\n      return {\r\n        ...state,\r\n        users: []\r\n      }\r\n    }\r\n    case SET_FRIENDS: {\r\n      return {\r\n        ...state,\r\n        friends: action.friends\r\n      }\r\n    }\r\n    case SET_FOUND_USERS: {\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        foundUsers: action.foundUsers\r\n      }\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      }\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      }\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      }\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userID]\r\n          : state.followingInProgress.filter(id => id !== action.userID),\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst followSuccess = (userID) => ({ type: FOLLOW, userID });\r\nconst unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID });\r\n\r\nconst setUsers = (users) => ({ type: SET_USERS, users });\r\nconst setFriends = (friends) => ({ type: SET_FRIENDS, friends });\r\nconst setFoundUsers = (foundUsers) => ({ type: SET_FOUND_USERS, foundUsers });\r\nconst setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const clearUsers = () => ({ type: CLEAR_USERS });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\n\r\nconst toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userID) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID\r\n});\r\n\r\nexport const getUsers = (page, pageSize, term) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n\r\n  const response = await usersAPI.getUsers(page, pageSize, term);\r\n  dispatch(setUsers(response.items));\r\n  dispatch(setTotalUsersCount(response.totalCount));\r\n\r\n  dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const getFoundUsers = (page, pageSize, term) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n\r\n  const response = await usersAPI.getUsers(page, pageSize, term);\r\n  dispatch(clearUsers());\r\n  dispatch(setFoundUsers(response.items));\r\n  dispatch(setTotalUsersCount(response.totalCount));\r\n\r\n  dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const getFriends = (page, pageSize, term, friend = true) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n\r\n  const response = await usersAPI.getUsers(page, pageSize, term, friend);\r\n  dispatch(setFriends(response.items));\r\n  dispatch(setTotalUsersCount(response.totalCount));\r\n\r\n  dispatch(toggleIsFetching(false));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, id));\r\n  const response = await apiMethod(id);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(id))\r\n  }\r\n  dispatch(toggleFollowingProgress(false, id));\r\n}\r\n\r\nexport const follow = (id) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, id,\r\n    usersAPI.followUser.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (id) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, id,\r\n    usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/no_photo.8bf0768a.svg\";"],"sourceRoot":""}