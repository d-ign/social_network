{"version":3,"sources":["components/Users/Users.module.css","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Pagination","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","onClick","filter","p","map","className","cn","s","selectedPage","pageNumber","Users","props","users","u","container","column_avatar","to","id","src","photos","small","unknown","alt","followed","disabled","followingInProgress","some","unfollow","follow","column_data","name","status","getUsersSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","getUsersThunk","setCurrentPage","this","Preloader","React","Component","compose","connect","toggleFollowingProgress","withAuthRedirect"],"mappings":"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","file":"static/js/4.da972b0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Users_pageNumber__24046\",\"selectedPage\":\"Users_selectedPage__3lwod\",\"container\":\"Users_container__gMpcS\",\"column_avatar\":\"Users_column_avatar__out0K\",\"column_data\":\"Users_column_data__3NNuW\"};","import React, { useState } from 'react';\r\nimport s from './Users.module.css'; // это модульные стили, есть еще style component\r\nimport unknown from './../../img/no_photo.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cn from 'classnames';\r\n\r\n\r\n\r\nconst Pagination = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10 }) => {\r\n\r\n  // или count of pages - количество страниц\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  // portionCount - кол-во порций (каждая порция по 10 страниц)\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  // portionNumber - номер порции\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionNumber = portionNumber * portionSize;\r\n\r\n  return <>\r\n    {portionNumber > 1 &&\r\n      <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n    {pages\r\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\r\n      .map(p => {\r\n        return <span \r\n        className={cn({[s.selectedPage]: currentPage === p}, s.pageNumber)} \r\n        key={p}\r\n        onClick={() => { onPageChanged(p) }}>{p}</span>\r\n      })}\r\n\r\n    {portionCount > portionNumber &&\r\n      <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n  </>\r\n}\r\n\r\n\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n  return <>\r\n    <Pagination\r\n      totalUsersCount={props.totalUsersCount}\r\n      pageSize={props.pageSize}\r\n      currentPage={props.currentPage}\r\n      onPageChanged={props.onPageChanged}\r\n    />\r\n\r\n    { props.users.map(u =>\r\n      <div key={u.id} className={s.container}>\r\n\r\n        <div className={s.column_avatar}>\r\n          <NavLink to={'/profile/' + u.id}>\r\n            <img src={u.photos.small !== null ? u.photos.small : unknown} alt=\"I\" />\r\n          </NavLink>\r\n          {/* some проверяет условие и возвращает true/ false */}\r\n          {u.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n              onClick={() => { props.unfollow(u.id) }}>Unfollow</button>\r\n\r\n            : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n              onClick={() => { props.follow(u.id) }}>Follow</button>}\r\n        </div>\r\n\r\n        <div className={s.column_data}>\r\n          <span>{u.name}</span>\r\n          <span>{u.status}</span>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n    }\r\n  </>\r\n}\r\n\r\nexport default Users;","export const getUsersSelector = (state) => {\r\n  return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}; \r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}; \r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsersThunk } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsersSelector, \r\n  // getUserSuperPuperSelector, \r\n  getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\n\r\n// UsersContainer - первая контейнерная компонента вокруг Users, отвечающая за AJAX запросы и отрисовку Users\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsersThunk(currentPage, pageSize);\r\n  }\r\n\r\n  // пишем через стрелочную функцию, чтобы сохранить контекст вызова, чтобы не использовать bind\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n    this.props.setCurrentPage(pageNumber); // подсвечиваем текущую страницу\r\n  }\r\n\r\n  render() {\r\n    // <> - это фрагмент, то же самое: <Fragment></Fragment> --> вместо div для доступности\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n\r\n      <Users\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\n// функция connect передает сама в mapStateToProps state, а мы можем забыть про store\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // users: getUserSuperPuperSelector(state),\r\n    users: getUsersSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  }\r\n};\r\n// после вызова одного из методов объекта из mapDispatchToProps store изменяется и после этого перерисовывается UI (вызывается mapStateToProps и достаются оттуда свежие пропсы)\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userID) => {\r\n//       dispatch(followAC(userID));\r\n//     },\r\n//     unfollow: (userID) => {\r\n//       dispatch(unfollowAC(userID));\r\n//     },\r\n//     ...\r\n//   }\r\n// };\r\n// компоненте Users в качестве свойств объекта props будут переданы свойства из mapStateToProps и mapDispatchToProps. В Users мы можем обращаться к ним, как props.pageSize или props.setTotalUsersCount() и т.д.\r\n\r\n// безымянная втроая контейнерная компонента нужна для общения со store, для прокидывания данных в первую контейнерную компоненту UsersContainer и ее отрисовку\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsersThunk\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n"],"sourceRoot":""}