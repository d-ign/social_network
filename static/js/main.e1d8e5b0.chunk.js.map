{"version":3,"sources":["App.module.scss","img/preloader/preloaderTheme1.svg","img/preloader/preloaderTheme2.svg","components/common/Preloader/Preloader.tsx","img/no_photo.svg","components/common/Name/Name.module.scss","components/common/Name/Name.tsx","components/common/NoElement/NoElement.tsx","hoc/withAuthRedirect.tsx","api/users-api.ts","redux/reducers/users-reducer.ts","api/api.ts","api/chat-api.ts","redux/reducers/chat-reducer.ts","components/common/NoElement/NoElement.module.scss","components/common/RenderFormElement/RenderTextField.module.scss","components/Profile/Info/InfoData/InfoData.module.scss","redux/selectors/app-selectors.ts","components/Navbar/Navbar.module.scss","components/Profile/Wall/Post/Post.module.scss","redux/selectors/auth-selectors.ts","api/profile-api.ts","redux/reducers/profile-reducer.ts","redux/selectors/profile-selectors.ts","components/Profile/Wall/Post/Post.tsx","hooks/useLocalStorage.tsx","components/Profile/Wall/Wall.tsx","img/icons/camera.svg","components/Profile/Info/Status/stylesCustomMaterialUI.jsx","components/Profile/Info/Status/Status.tsx","components/common/FieldWithCounter/FieldWithCounter.tsx","components/common/RenderFormElement/RenderTextField.jsx","components/common/RenderFormElement/RenderCheckbox.jsx","components/Profile/Info/InfoDataForm/InfoDataForm.tsx","components/Profile/Info/InfoData/InfoData.tsx","components/Profile/Info/ProfilePlug/ProfilePlug.tsx","components/Profile/Info/InfoContainer.tsx","components/Profile/ProfileContainer.tsx","img/preloader/preloaderStart.svg","components/common/Preloader/PreloaderStart.tsx","img/icons/logo.svg","api/auth-api.ts","api/security-api.ts","redux/reducers/auth-reducer.ts","redux/reducers/app-reducer.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Error/ErrorBoundary.jsx","hoc/withSuspense.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Profile/Info/ProfilePlug/ProfilePlug.module.scss","components/Profile/Info/InfoDataForm/InfoDataForm.module.scss","components/Header/Header.module.scss","components/Login/Login.module.scss","components/common/FieldWithCounter/FieldWithCounter.module.scss","components/Profile/Info/InfoContainer.module.scss","components/Profile/Info/Status/Status.module.scss","components/common/Preloader/Preloader.module.scss","components/Profile/Wall/Wall.module.scss","components/common/Avatar/Avatar.module.scss","components/common/Avatar/Avatar.tsx"],"names":["module","exports","Preloader","display","theme","useSelector","getTheme","className","cn","s","container_default","container_block","wrap","src","preloaderTheme1","preloaderTheme2","alt","Name","id","name","size","name__small","to","replace","NoElement","elements","writeSomething","container","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","usersAPI","getUsers","currentPage","pageSize","term","friend","instance","get","response","data","followUser","post","unfollowUser","delete","initialState","users","totalUsersCount","isFetching","followingInProgress","actions","followSuccess","userID","type","unfollowSuccess","setUsers","addUsers","setTotalUsersCount","count","clearUsers","toggleIsFetching","toggleFollowingProgress","page","dispatch","getState","a","usersPage","length","items","totalCount","_followUnfollowFlow","apiMethod","actionCreator","resultCode","ResultCodesEnum","Success","follow","bind","unfollow","usersReducer","action","map","u","followed","filter","ResultCodeForCaptcha","axios","create","withCredentials","baseURL","headers","ws","subscribers","notifySubscribersAboutStatus","status","forEach","reconnect","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","message","send","messages","payload","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","chatReducer","m","v1","item","index","array","getInitialized","app","initialized","getLogin","login","getIsAuth","getAuthorizedUserID","getCaptchaURL","captchaURL","getMyPhoto","myPhoto","profileAPI","getProfile","getStatus","updateStatus","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","profile","posts","idPost","likesCount","isLikeClick","postsForDelete","showSuccessSave","errorProfileContacts","isEditModeProfile","initializePosts","addPost","newPostText","deletePost","setPostForDeleting","deletePostForDeleting","clearPostsForDelete","setLikeOnPost","deleteLikeOnPost","setUserProfile","setStatus","savePhotoSuccess","photos","showSuccessSaveProfile","showErrorProfileContacts","setEditModeProfile","bool","getUserProfile","userId","profileReducer","newPost","Date","now","p","profilePage","getShowSuccessSave","getErrorProfileContacts","getPosts","getPostsForDelete","getEditModeProfile","Post","React","memo","isHiddenAllX","setIsHiddenAllX","isShowAnimation","handleDeleteOnePost","addIdPostBeforeDeleting","deleteIdPostBeforeDeleting","useDispatch","useState","isClickDeletePost","setIsClickDeletePost","isSelectedPost","setIsSelectedPost","useEffect","postContainer","postDelete","includes","columnLeft","aria-hidden","avatar","postSelectedTheme1","postSelectedTheme2","onClick","Avatar","photo","large","unknown","columnCenter","fullName","columnRight","hidden","IconButton","aria-label","wrapLike","like","noLike","useLocalStorage","key","value","arr","localStorage","getItem","setItem","stringify","Form","setValue","handleAddPost","trim","form","TextField","placeholder","multiline","fullWidth","variant","color","inputProps","maxLength","onChange","target","buttonBig","Button","style","textShadow","margin","width","endIcon","buttonIcon","marginLeft","Wall","setIsShowAnimation","postsElements","basket","height","startIcon","useStyles","makeStyles","borderRadius","padding","spacing","minHeight","lineHeight","backgroundColor","Status","isOwner","classes","editMode","setEditMode","isEditInputStatusForm","setIsEditInputStatusForm","statusLocal","setStatusLocal","isHiddenCounter","setIsHiddenCounter","setCount","ref","statusRef","useRef","handleClickOutside","current","contains","document","autoFocus","currentTarget","onFocus","select","onBlur","buttonAndCounter","buttonWrap","disabled","boxShadow","stylesField","countHidden","countYellow","countRed","plug","noStatus","statusNotMy","FieldWithCounter","renderContent","setIsEditInputProfileForm","position","RenderTextField","label","input","onInput","meta","touched","warning","custom","InputLabelProps","for","RenderCheckbox","FormControlLabel","control","Checkbox","checked","labelPlacement","InfoDataForm","reduxForm","handleSubmit","initialValues","onSubmit","titleForm","handleInput","handleFocus","handleBlur","Field","component","titleAllContacts","Object","keys","contacts","contact","titleContact","Contact","contactTitle","contactValue","contactTextWrap","contactText","href","InfoData","containerForm","aboutMe","title","text","job","lookingForAJob","lookingForAJobDescription","values","some","el","ProfilePlug","containerMainPlug","columnLeftPlug","avatarPlug","buttonPlug","columnRightPlug","nameWrapPlug","namePlug","statusPlug","titleOnePlug","textPlug","titleTwoPlug","ScrollToTopOnMount","getElementById","scrollIntoView","ShowSuccessSavePortal","children","createElement","body","createPortal","InfoContainer","stylesSaveAndCancelButton","fontSize","isEditInputProfileForm","containerMain","camera","htmlFor","wrapImg","file","files","marginTop","buttonsSaveAndCancelProfile","submit","successSave","Error","saveProfileThunk","ProfileContainer","this","refreshProfile","prevProps","match","params","authorizedUserID","history","PureComponent","compose","withRouter","PreloaderStart","preloaderStart","authAPI","me","email","password","rememberMe","captcha","logout","securityAPI","getAuthUserDataThunk","stopSubmit","_error","myProfile","loginThunk","CaptchaIsRequired","url","logoutThunk","authReducer","appReducer","ButtonChangeTheme","themeLocal","setThemeLocal","handleToggleTheme","buttonThemeDesctop","marginRight","buttonThemeMobile","Header","myID","colors","cyan","cyanLight","cyanMedium","cyanDark","darkBlue","darkBlueTransparent","i","setProperty","header","logoAndTitle","logo","headerTitleDesctop","headerTitleMobile","rightColumn","loginAndPhoto","loginName","buttonLogoutDesctop","buttonLogoutMobile","IconProfile","pathname","profileUrl","viewBox","navLinkImg","activeIcon","d","IconChat","IconUsers","IconFriends","location","nav","exact","activeClassName","active","navLink","LoginReduxForm","validate","errors","test","stylesLoginButton","fontWeight","stylesTestLoginButton","marginBottom","loginBlockSubstrate","loginBlock","row","rowCheckbox","formError","Login","ErrorBoundary","setState","whiteSpace","toString","Component","withSuspense","fallback","ChatContainer","lazy","UsersContainer","FriendsContainer","SuspendedChat","SuspendedUsers","SuspendedFriends","AppContainer","fon","appWrapper","appWrapperContent","from","path","render","rootReducer","combineReducers","formReducer","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","AvatarBody","avatarWrap","extra_large","medium","small","photoTrue"],"mappings":"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","file":"static/js/main.e1d8e5b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__2Avml\",\"container\":\"App_container__3kpCf\",\"appWrapper\":\"App_appWrapper__1cqFv\",\"appWrapperContent\":\"App_appWrapperContent__1OUHu\"};","export default __webpack_public_path__ + \"static/media/preloaderTheme1.364be474.svg\";","export default __webpack_public_path__ + \"static/media/preloaderTheme2.6aed94f2.svg\";","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport preloaderTheme1 from '../../../img/preloader/preloaderTheme1.svg'\nimport preloaderTheme2 from '../../../img/preloader/preloaderTheme2.svg'\nimport s from './Preloader.module.scss'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\ntype PropsType = {\n  display?: 'default' | 'block'\n}\n\nconst Preloader: React.FC<PropsType> = ({ display = 'default' }) => {\n  const theme = useSelector(getTheme)\n\n  return (\n    <div\n      className={cn(\n        { [s.container_default]: display === 'default' },\n        { [s.container_block]: display === 'block' }\n      )}\n    >\n      <div className={s.wrap}>\n        <img\n          src={theme === 'theme1' ? preloaderTheme1 : preloaderTheme2}\n          alt='preloader'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Preloader\n","export default __webpack_public_path__ + \"static/media/no_photo.8bf0768a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__EUDyG\",\"name__small\":\"Name_name__small__19ccJ\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Name.module.scss'\n\ntype PropsType = {\n  id: number | undefined\n  name: string | undefined\n  size?: 'small' | 'normal'\n}\n\nconst Name: React.FC<PropsType> = ({ id, name, size = 'normal' }) => {\n  return (\n    <NavLink\n      className={cn(s.name, { [s.name__small]: size === 'small' })}\n      to={`/profile/${id || '/login'}`}\n      replace\n    >\n      {name || 'no name'}\n    </NavLink>\n  )\n}\n\nexport default Name\n","import React from 'react'\nimport s from './NoElement.module.scss'\n\ntype PropsType = {\n  elements: string\n  writeSomething?: boolean\n}\n\nconst NoElement: React.FC<PropsType> = ({\n  elements,\n  writeSomething = false,\n}) => {\n  return (\n    <div className={s.container}>\n      <span>{`No ${elements} ${elements === 'users' ? 'found' : ''}`}</span>\n      {writeSomething && <span>Write something!</span>}\n    </div>\n  )\n}\n\nexport default NoElement\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../redux/redux-store'\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n  isAuth: state.auth.isAuth,\n})\n\ntype MapStatePropsType = {\n  isAuth: boolean\n}\n\n// WCP - пропсы WrappedComponent\nexport default function withAuthRedirect<WCP>(\n  WrappedComponent: React.ComponentType<WCP>\n) {\n  const RedirectComponent: React.FC<MapStatePropsType & unknown> = (props) => {\n    const { isAuth, ...restProps } = props\n\n    if (!isAuth) return <Redirect to='/login' />\n\n    return <WrappedComponent {...(restProps as WCP)} />\n  }\n\n  return connect<MapStatePropsType, never, WCP, AppStateType>(\n    mapStateToPropsForRedirect\n  )(RedirectComponent)\n}\n","import { UserType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype GetUsersType = {\n  items: Array<UserType>\n  totalCount: number\n  error: string\n}\n\nconst usersAPI = {\n  async getUsers(\n    currentPage = 1,\n    pageSize: number,\n    term?: string,\n    friend?: boolean\n  ) {\n    const response = await instance.get<GetUsersType>(\n      `users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`\n    )\n    return response.data\n  },\n  async followUser(id: number) {\n    const response = await instance.post<DefaultResponseType>(\n      `follow/${id}`,\n      {}\n    )\n    return response.data\n  },\n  async unfollowUser(id: number) {\n    const response = await instance.delete<DefaultResponseType>(`follow/${id}`)\n    return response.data\n  },\n}\n\nexport default usersAPI\n","import { Dispatch } from 'redux'\nimport { DefaultResponseType, ResultCodesEnum } from '../../api/api'\nimport usersAPI from '../../api/users-api'\nimport { UserType } from '../../types/types'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nconst initialState = {\n  users: [] as Array<UserType>,\n\n  pageSize: 10,\n  totalUsersCount: 0,\n\n  isFetching: true,\n  // disabling the button after pressing\n  followingInProgress: [] as Array<number>, // array of users ID\n}\n\nconst usersReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'FOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: true }\n          }\n          return u\n        }),\n      }\n    }\n    case 'UNFOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: false }\n          }\n          return u\n        }),\n      }\n    }\n    case 'SET_USERS': {\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    }\n    case 'ADD_USERS': {\n      return {\n        ...state,\n        users: [...state.users, ...action.users],\n      }\n    }\n    case 'CLEAR_USERS': {\n      return {\n        ...state,\n        users: [],\n      }\n    }\n    case 'SET_TOTAL_USERS_COUNT': {\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      }\n    }\n    case 'TOGGLE_IS_FETCHING': {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n    }\n    case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userID]\n          : state.followingInProgress.filter((id) => id !== action.userID),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  followSuccess: (userID: number) => ({ type: 'FOLLOW', userID } as const),\n  unfollowSuccess: (userID: number) => ({ type: 'UNFOLLOW', userID } as const),\n\n  setUsers: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\n  addUsers: (users: Array<UserType>) => ({ type: 'ADD_USERS', users } as const),\n  setTotalUsersCount: (totalUsersCount: number) =>\n    ({\n      type: 'SET_TOTAL_USERS_COUNT',\n      count: totalUsersCount,\n    } as const),\n  clearUsers: () => ({ type: 'CLEAR_USERS' } as const),\n\n  toggleIsFetching: (isFetching: boolean) =>\n    ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const),\n  toggleFollowingProgress: (isFetching: boolean, userID: number) =>\n    ({\n      type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n      isFetching,\n      userID,\n    } as const),\n}\n\nexport const getUsers =\n  (page: number, term: string, friend?: boolean): ThunkType =>\n  async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true))\n\n    const response = await usersAPI.getUsers(\n      page,\n      getState().usersPage.pageSize,\n      term,\n      friend\n    )\n\n    // первичная загрузка\n    if (term.length === 0 && page === 1) {\n      dispatch(actions.setUsers(response.items))\n    }\n    // получение больше пользователей\n    if (page > 1) {\n      dispatch(actions.addUsers(response.items))\n    }\n    // первичный поиск\n    if (term.length > 0 && page === 1) {\n      dispatch(actions.clearUsers())\n      dispatch(actions.setUsers(response.items))\n    }\n\n    dispatch(actions.setTotalUsersCount(response.totalCount))\n    dispatch(actions.toggleIsFetching(false))\n  }\n\ntype DispatchType = Dispatch<ActionsTypes>\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  id: number,\n  apiMethod: (id: number) => Promise<DefaultResponseType>,\n  actionCreator: (id: number) => ActionsTypes\n) => {\n  dispatch(actions.toggleFollowingProgress(true, id))\n  const response = await apiMethod(id)\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actionCreator(id))\n  }\n  dispatch(actions.toggleFollowingProgress(false, id))\n}\n\nexport const follow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.followUser.bind(usersAPI),\n      actions.followSuccess\n    )\n  }\n\nexport const unfollow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.unfollowUser.bind(usersAPI),\n      actions.unfollowSuccess\n    )\n  }\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import axios from 'axios'\n\nexport const instance = axios.create({\n  withCredentials: true, // цепляем cookie к запросу\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': 'ddfbc45b-6923-498e-99d5-3a4897cbb31f',\n  },\n})\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n  CaptchaIsRequired = 10,\n}\n\nexport type DefaultResponseType<D = never, RC = ResultCodesEnum> = {\n  data: D\n  resultCode: RC\n  messages: Array<string> | string\n}\n","let ws: WebSocket | null = null\n\nlet subscribers = {\n  'messages-received': [] as Array<MessagesReceivedSubscriberType>,\n  'status-changed': [] as Array<StatusChangedSubscriberType>,\n}\n\ntype EventsCustomNamesType = 'messages-received' | 'status-changed'\n\nconst notifySubscribersAboutStatus = (status: StatusType) => {\n  if (subscribers) {\n    subscribers['status-changed'].forEach((s) => s(status))\n  }\n}\n\nconst reconnect = () => {\n  notifySubscribersAboutStatus('pending')\n  setTimeout(createChannel, 3000)\n}\n\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e.data)\n  if (subscribers) {\n    subscribers['messages-received'].forEach((s) => s(newMessages))\n  }\n}\n\nconst openHandler = () => {\n  notifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n  notifySubscribersAboutStatus('error')\n  // eslint-disable-next-line no-console\n  console.error('REFRESH PAGE')\n}\n\nconst cleanUp = () => {\n  ws?.removeEventListener('close', reconnect)\n  ws?.removeEventListener('message', messageHandler)\n  ws?.removeEventListener('open', openHandler)\n  ws?.removeEventListener('error', errorHandler)\n}\n\nfunction createChannel() {\n  cleanUp()\n  ws?.close()\n\n  ws = new WebSocket(\n    'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n  )\n\n  notifySubscribersAboutStatus('pending')\n\n  ws.addEventListener('close', reconnect)\n  ws.addEventListener('message', messageHandler)\n  ws.addEventListener('open', openHandler)\n  ws.addEventListener('error', errorHandler)\n}\n\nexport const chatAPI = {\n  start() {\n    createChannel()\n  },\n  stop() {\n    if (subscribers) {\n      subscribers['messages-received'] = []\n      subscribers['status-changed'] = []\n    }\n    cleanUp()\n    ws?.close()\n  },\n  subscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    if (subscribers) {\n      // @ts-ignore\n      subscribers[eventName].push(callback)\n    }\n  },\n\n  // отписка (забираем возможность api уведомлять store)\n  unsubscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    if (subscribers) {\n      // @ts-ignore\n      subscribers = subscribers[eventName]?.filter((s) => s !== callback)\n      // оставляем всех, кроме callback\n    }\n  },\n\n  sendMessage(message: string) {\n    ws?.send(message)\n  },\n}\n\nexport type ChatMessageAPIType = {\n  message: string\n  photo: string\n  userId: number\n  userName: string\n}\n\nexport type StatusType = 'pending' | 'ready' | 'error'\n\ntype MessagesReceivedSubscriberType = (\n  messages: Array<ChatMessageAPIType>\n) => void\n\ntype StatusChangedSubscriberType = (status: StatusType) => void\n","import { FormAction } from 'redux-form'\nimport { Dispatch } from 'redux'\nimport { v1 } from 'uuid'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../../api/chat-api'\n\nexport type ChatMessageType = ChatMessageAPIType & { id: string }\n\nconst initialState = {\n  messages: [] as ChatMessageType[],\n  status: 'pending' as StatusType,\n}\n\nconst chatReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'MESSAGES_RECEIVED': {\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          ...action.payload.messages.map((m) => ({ ...m, id: v1() })),\n        ].filter((item, index, array) => index >= array.length - 100),\n        // TODO v1() - вызов не чистой функции\n      }\n    }\n    case 'STATUS_CHANGED': {\n      return {\n        ...state,\n        status: action.payload.status,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  messagesReceived: (messages: ChatMessageAPIType[]) =>\n    ({\n      type: 'MESSAGES_RECEIVED',\n      payload: { messages },\n    } as const),\n  statusChanged: (status: StatusType) =>\n    ({\n      type: 'STATUS_CHANGED',\n      payload: { status },\n    } as const),\n}\n\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n  // чтобы два раза не вызывалась одна и та же функция,\n  // сначала при подписке, потом при отписке\n  if (_newMessageHandler === null) {\n    _newMessageHandler = (messages) => {\n      dispatch(actions.messagesReceived(messages))\n    }\n  }\n  return _newMessageHandler\n}\n\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\n  // чтобы два раза не вызывалась одна и та же функция,\n  // сначала при подписке, потом при отписке\n  if (_statusChangedHandler === null) {\n    _statusChangedHandler = (status) => {\n      dispatch(actions.statusChanged(status))\n    }\n  }\n  return _statusChangedHandler\n}\n\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.start()\n  chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\n  chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\n}\n\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\n  chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\n  chatAPI.stop()\n}\n\nexport const sendMessage = (message: string): ThunkType => {\n  return async () => {\n    chatAPI.sendMessage(message)\n  }\n}\n\nexport default chatReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoElement_container__kqBdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"RenderTextField_error__1byTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"InfoData_containerForm__1bbp7\",\"wrap\":\"InfoData_wrap__JN5oI\",\"aboutMe\":\"InfoData_aboutMe__2M2AZ\",\"job\":\"InfoData_job__Iwdx7\",\"contacts\":\"InfoData_contacts__2B3EH\",\"title\":\"InfoData_title__lGiAa\",\"text\":\"InfoData_text__32MsJ\",\"contact\":\"InfoData_contact__gAsfv\",\"contactTitle\":\"InfoData_contactTitle__1XYV_\",\"contactTextWrap\":\"InfoData_contactTextWrap__Fr2PV\",\"contactText\":\"InfoData_contactText__1_0jQ\"};","import { AppStateType } from '../redux-store'\n\nexport const getInitialized = (state: AppStateType) => state.app.initialized\n\nexport const getTheme = (state: AppStateType) => state.app.theme\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__33PA9\",\"navLink\":\"Navbar_navLink__18rsh\",\"navLinkImg\":\"Navbar_navLinkImg__214ti\",\"active\":\"Navbar_active__2U-iw\",\"activeIcon\":\"Navbar_activeIcon__3-qcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"Post_postContainer__UwFf4\",\"post\":\"Post_post__3Eo-8\",\"postDelete\":\"Post_postDelete__2HEOu\",\"holeOut\":\"Post_holeOut__2a5WV\",\"columnLeft\":\"Post_columnLeft__3PAah\",\"avatar\":\"Post_avatar__JUoDK\",\"postSelectedTheme1\":\"Post_postSelectedTheme1__6541S\",\"postSelectedTheme2\":\"Post_postSelectedTheme2__3qkth\",\"columnCenter\":\"Post_columnCenter__1-e3t\",\"message\":\"Post_message__3Hpl2\",\"columnRight\":\"Post_columnRight__3Il30\",\"wrapLike\":\"Post_wrapLike__sDxdv\",\"likesCount\":\"Post_likesCount__3BtpW\",\"like\":\"Post_like__3ClHE\",\"noLike\":\"Post_noLike__3r6kb\"};","import { AppStateType } from '../redux-store'\n\nexport const getLogin = (state: AppStateType) => state.auth.login\n\nexport const getIsAuth = (state: AppStateType) => state.auth.isAuth\n\nexport const getAuthorizedUserID = (state: AppStateType) => state.auth.userID\n\nexport const getCaptchaURL = (state: AppStateType) => state.auth.captchaURL\n\nexport const getMyPhoto = (state: AppStateType) => state.auth.myPhoto\n","import { PhotosType, ProfileType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype SavePhotoDataType = {\n  photos: PhotosType\n}\n\nconst profileAPI = {\n  async getProfile(id: number | null) {\n    const response = await instance.get<ProfileType>(`profile/${id}`)\n    return response.data\n  },\n\n  async getStatus(id: number) {\n    const response = await instance.get<string>(`profile/status/${id}`)\n    return response.data\n  },\n\n  async updateStatus(status: string) {\n    const response = await instance.put<DefaultResponseType>('profile/status', {\n      status,\n    })\n    return response.data\n  },\n\n  async savePhotoAPI(photoFile: File) {\n    const formData = new FormData()\n    formData.append('image', photoFile)\n    const response = await instance.put<DefaultResponseType<SavePhotoDataType>>(\n      'profile/photo',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    )\n    return response.data\n  },\n\n  async saveProfileAPI(profile: ProfileType) {\n    const response = await instance.put<DefaultResponseType>('profile', profile)\n    return response.data\n  },\n}\n\nexport default profileAPI\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { PostType, ProfileType, PhotosType } from '../../types/types'\nimport { ResultCodesEnum } from '../../api/api'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  posts: [\n    {\n      idPost: 1,\n      message: `Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Facilis ut quo maiores neque laboriosam. Ratione adipisci\n        reiciendis autem placeat alias necessitatibus pariatur saepe\n        ipsum, temporibus animi, facilis minus doloribus ducimus.`,\n      likesCount: 1,\n      isLikeClick: true,\n    },\n    {\n      idPost: 2,\n      message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n      likesCount: 0,\n      isLikeClick: false,\n    },\n    {\n      idPost: 3,\n      message: `Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Facilis ut quo maiores neque laboriosam. Ratione adipisci\n        reiciendis autem placeat alias necessitatibus...`,\n      likesCount: 0,\n      isLikeClick: false,\n    },\n  ] as Array<PostType>,\n  postsForDelete: [] as Array<number>,\n\n  profile: null as ProfileType | null,\n  status: '',\n  showSuccessSave: '',\n  errorProfileContacts: '',\n  isEditModeProfile: false,\n}\n\nconst profileReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_USER': {\n      return {\n        ...state,\n        profile: action.profile,\n      }\n    }\n    case 'SET_STATUS': {\n      return {\n        ...state,\n        status: action.status,\n      }\n    }\n    case 'INITIALIZE_POSTS': {\n      return {\n        ...state,\n        posts: action.posts,\n      }\n    }\n    case 'ADD_POST': {\n      const newPost = {\n        idPost: Date.now(), // TODO вызов не чистой функции\n        message: action.newPostText,\n        likesCount: 0,\n        isLikeClick: false,\n      }\n      return {\n        ...state,\n        posts: [newPost, ...state.posts],\n      }\n    }\n    case 'SET_POST_FOR_DELETE': {\n      return {\n        ...state,\n        postsForDelete: [...state.postsForDelete, action.idPost],\n      }\n    }\n    case 'DELETE_POST_FOR_DELETE': {\n      return {\n        ...state,\n        postsForDelete: [\n          ...state.postsForDelete.filter((id) => id !== action.idPost),\n        ],\n      }\n    }\n    case 'CLEAR_POSTS_FOR_DELETE': {\n      return {\n        ...state,\n        postsForDelete: [],\n      }\n    }\n    case 'DELETE_POST': {\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.idPost !== action.idPost),\n      }\n    }\n    case 'SET_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: ++p.likesCount,\n                isLikeClick: true,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'DELETE_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: --p.likesCount,\n                isLikeClick: false,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'SAVE_PHOTO_SUCCESS': {\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\n      }\n    }\n    case 'SHOW_SUCCESS_SAVE': {\n      return {\n        ...state,\n        showSuccessSave: action.message,\n      }\n    }\n    case 'SHOW_ERROR_PROFILE_CONTACTS': {\n      return {\n        ...state,\n        errorProfileContacts: action.message,\n      }\n    }\n    case 'TOGGLE_EDIT_MODE_PROFILE': {\n      return {\n        ...state,\n        isEditModeProfile: action.bool,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializePosts: (posts: Array<PostType>) =>\n    ({ type: 'INITIALIZE_POSTS', posts } as const),\n  // удаление одного поста\n  addPost: (newPostText: string) =>\n    ({ type: 'ADD_POST', newPostText } as const),\n  deletePost: (idPost: number) => ({ type: 'DELETE_POST', idPost } as const),\n  // удаление нескольких постов\n  setPostForDeleting: (idPost: number) =>\n    ({ type: 'SET_POST_FOR_DELETE', idPost } as const),\n  deletePostForDeleting: (idPost: number) =>\n    ({ type: 'DELETE_POST_FOR_DELETE', idPost } as const),\n  clearPostsForDelete: () => ({ type: 'CLEAR_POSTS_FOR_DELETE' } as const),\n  // лайк\n  setLikeOnPost: (idPost: number) =>\n    ({ type: 'SET_LIKE_ON_POST', idPost } as const),\n  deleteLikeOnPost: (idPost: number) =>\n    ({ type: 'DELETE_LIKE_ON_POST', idPost } as const),\n\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: 'SET_USER', profile } as const),\n  setStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n  savePhotoSuccess: (photos: PhotosType) =>\n    ({ type: 'SAVE_PHOTO_SUCCESS', photos } as const),\n  showSuccessSaveProfile: (message: string) =>\n    ({ type: 'SHOW_SUCCESS_SAVE', message } as const),\n  showErrorProfileContacts: (message: string) =>\n    ({ type: 'SHOW_ERROR_PROFILE_CONTACTS', message } as const),\n  setEditModeProfile: (bool: boolean) =>\n    ({ type: 'TOGGLE_EDIT_MODE_PROFILE', bool } as const),\n}\n\nexport const getUserProfile =\n  (userId: number | null): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(actions.setUserProfile(response))\n  }\n\nexport const getStatus =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getStatus(id)\n    dispatch(actions.setStatus(response))\n  }\n\nexport const updateStatus =\n  (status: string): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.setStatus(status))\n    }\n  }\n\nexport const savePhotoThunk =\n  (file: File): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.savePhotoAPI(file)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.savePhotoSuccess(response.data.photos))\n    }\n  }\n\nexport const saveProfileThunk =\n  (profile: ProfileType): ThunkType =>\n  async (dispatch, getState) => {\n    const response = await profileAPI.saveProfileAPI(profile)\n    const { userID } = getState().auth\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getUserProfile(userID))\n      dispatch(actions.showSuccessSaveProfile('Data saved successfully!'))\n      setTimeout(dispatch, 4000, actions.showSuccessSaveProfile(''))\n      dispatch(actions.showErrorProfileContacts(''))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      // заготовка для показа ошибки конкретного поля\n      // const key = response.data.messages[0]\n      // .match(/Contacts->(\\w+)/)[1].toLowerCase()\n      // dispatch(stopSubmit('editProfile', {\n      //   contacts: { [key]: response.data.messages[0] },\n      // }));\n      dispatch(actions.showErrorProfileContacts(response.messages[0]))\n    }\n  }\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import { AppStateType } from '../redux-store'\n\nexport const getProfile = (state: AppStateType) => state.profilePage.profile\n\nexport const getStatus = (state: AppStateType) => state.profilePage.status\n\nexport const getShowSuccessSave = (state: AppStateType) =>\n  state.profilePage.showSuccessSave\n\nexport const getErrorProfileContacts = (state: AppStateType) =>\n  state.profilePage.errorProfileContacts\n\nexport const getPosts = (state: AppStateType) => state.profilePage.posts\n\nexport const getPostsForDelete = (state: AppStateType) =>\n  state.profilePage.postsForDelete\n\nexport const getEditModeProfile = (state: AppStateType) =>\n  state.profilePage.isEditModeProfile\n","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport CloseIcon from '@material-ui/icons/Close'\nimport unknown from '../../../../img/no_photo.svg'\nimport s from './Post.module.scss'\n\nimport Avatar from '../../../common/Avatar/Avatar'\nimport Name from '../../../common/Name/Name'\n\nimport { getPostsForDelete } from '../../../../redux/selectors/profile-selectors'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\nimport { actions } from '../../../../redux/reducers/profile-reducer'\n\nimport { PostType, ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  profile: ProfileType | null\n  isShowAnimation: boolean\n  isHiddenAllX: boolean\n  setIsHiddenAllX: Dispatch<SetStateAction<boolean>>\n  handleDeleteOnePost: (idPost: number) => void\n  addIdPostBeforeDeleting: (idPost: number) => void\n  deleteIdPostBeforeDeleting: (idPost: number) => void\n}\n\nconst Post: React.FC<{ post: PostType } & OwnPropsType> = React.memo(\n  (props) => {\n    const {\n      post: { idPost, message, likesCount, isLikeClick },\n      profile,\n      isHiddenAllX,\n      setIsHiddenAllX,\n      isShowAnimation,\n      handleDeleteOnePost,\n      addIdPostBeforeDeleting,\n      deleteIdPostBeforeDeleting,\n    } = props\n\n    const theme = useSelector(getTheme)\n    const postsForDelete = useSelector(getPostsForDelete)\n    const dispatch = useDispatch()\n\n    const [isClickDeletePost, setIsClickDeletePost] = useState(false)\n    const [isSelectedPost, setIsSelectedPost] = useState(false)\n\n    const handleClickOnAvatar = () => {\n      if (!isSelectedPost) {\n        setIsHiddenAllX(true)\n        setIsSelectedPost(true)\n        addIdPostBeforeDeleting(idPost)\n      } else {\n        if (postsForDelete.length === 0) {\n          // не возвращаем все Х, если ещё выбраны какие-то посты\n          setIsHiddenAllX(false)\n        }\n        setIsSelectedPost(false)\n        deleteIdPostBeforeDeleting(idPost)\n      }\n    }\n\n    useEffect(() => {\n      if (postsForDelete.length === 0) {\n        // возвращаем все Х, если больше нет выбранных постов\n        setIsHiddenAllX(false)\n      }\n    }, [postsForDelete, setIsHiddenAllX])\n\n    const handleDeletePost = () => {\n      setIsClickDeletePost(true)\n      setTimeout(() => handleDeleteOnePost(idPost), 300)\n    }\n\n    const handleSetLike = () => {\n      if (!isLikeClick) {\n        dispatch(actions.setLikeOnPost(idPost))\n      } else {\n        dispatch(actions.deleteLikeOnPost(idPost))\n      }\n    }\n\n    return (\n      <div\n        className={cn(s.postContainer, {\n          [s.postDelete]:\n            isClickDeletePost ||\n            (isShowAnimation && postsForDelete.includes(idPost)),\n        })}\n      >\n        <div className={s.post}>\n          <div className={s.columnLeft}>\n            <div\n              aria-hidden='true'\n              className={cn(\n                { [s.avatar]: !isSelectedPost },\n                {\n                  [s.postSelectedTheme1]: isSelectedPost && theme === 'theme1',\n                },\n                {\n                  [s.postSelectedTheme2]: isSelectedPost && theme === 'theme2',\n                }\n              )}\n              onClick={handleClickOnAvatar}\n            >\n              <Avatar\n                photo={profile?.photos.large || unknown}\n                size='medium'\n                id={profile?.userId}\n              />\n            </div>\n          </div>\n\n          <div className={s.columnCenter}>\n            <Name id={profile?.userId} name={profile?.fullName} />\n            <div className={s.message}>{message}</div>\n          </div>\n\n          <div className={s.columnRight}>\n            <div hidden={isHiddenAllX}>\n              <IconButton\n                aria-label='deletePost'\n                size='small'\n                onClick={handleDeletePost}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n\n            <div className={s.wrapLike}>\n              <span className={s.likesCount}>\n                {likesCount > 0 ? `+${likesCount}` : ''}\n              </span>\n              <IconButton\n                aria-label='like'\n                size='small'\n                onClick={handleSetLike}\n              >\n                <ThumbUpAltIcon\n                  className={cn(s.like, { [s.noLike]: !isLikeClick })}\n                />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default Post\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PostType } from '../types/types'\n\nconst useLocalStorage = (\n  key: string,\n  value: string | PostType[],\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback?: any\n) => {\n  const dispatch = useDispatch()\n\n  // чтение и применение темы из Local Storage\n  useEffect(() => {\n    // @ts-ignore\n    const arr = JSON.parse(localStorage.getItem(key))\n\n    if (arr) {\n      dispatch(action(arr))\n      if (callback) callback(arr)\n    }\n  }, [action, key, callback, dispatch])\n\n  // запись темы в Local Storage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n}\nexport default useLocalStorage\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport PostAddIcon from '@material-ui/icons/PostAdd'\nimport { IconButton, TextField } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport cn from 'classnames'\nimport s from './Wall.module.scss'\n\nimport Post from './Post/Post'\nimport NoElement from '../../common/NoElement/NoElement'\nimport useLocalStorage from '../../../hooks/useLocalStorage'\n\nimport {\n  getPosts,\n  getPostsForDelete,\n  getProfile,\n} from '../../../redux/selectors/profile-selectors'\nimport { actions } from '../../../redux/reducers/profile-reducer'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport { PostType } from '../../../types/types'\n\nconst Wall: React.FC = () => {\n  const posts = useSelector(getPosts)\n  const postsForDelete = useSelector(getPostsForDelete)\n  const profile = useSelector(getProfile)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [isShowAnimation, setIsShowAnimation] = useState(false)\n  const [isHiddenAllX, setIsHiddenAllX] = useState(false)\n\n  useLocalStorage('posts', posts, actions.initializePosts)\n\n  const handleDeleteOnePost = (idPost: number) => {\n    dispatch(actions.deletePost(idPost))\n  }\n\n  const handleDeleteSelectedPost = () => {\n    // начало анимации удаления\n    setIsShowAnimation(true)\n\n    // возвращаем индивидуальные иконки-крестики у всех постов\n    setIsHiddenAllX(false)\n\n    setTimeout(() => {\n      postsForDelete.forEach((p) => {\n        dispatch(actions.deletePost(p))\n      })\n      dispatch(actions.clearPostsForDelete())\n\n      // конец анимации удаления\n      setIsShowAnimation(false)\n    }, 600)\n  }\n\n  const addIdPostBeforeDeleting = (idPost: number) => {\n    dispatch(actions.setPostForDeleting(idPost))\n  }\n\n  const deleteIdPostBeforeDeleting = (idPost: number) => {\n    dispatch(actions.deletePostForDeleting(idPost))\n  }\n\n  const postsElements = posts.map((p: PostType) => (\n    <Post\n      key={p.idPost}\n      profile={profile}\n      post={{\n        idPost: p.idPost,\n        message: p.message,\n        likesCount: p.likesCount,\n        isLikeClick: p.isLikeClick,\n      }}\n      isHiddenAllX={isHiddenAllX}\n      setIsHiddenAllX={setIsHiddenAllX}\n      isShowAnimation={isShowAnimation}\n      handleDeleteOnePost={handleDeleteOnePost}\n      addIdPostBeforeDeleting={addIdPostBeforeDeleting}\n      deleteIdPostBeforeDeleting={deleteIdPostBeforeDeleting}\n    />\n  ))\n\n  return (\n    <div className={s.container}>\n      <div\n        hidden={postsForDelete.length === 0}\n        className={cn({ [s.basket]: postsForDelete.length > 0 })}\n      >\n        <Button\n          onClick={() => handleDeleteSelectedPost()}\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={{ color: 'white', width: '100%', height: '100%' }}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      </div>\n\n      {postsForDelete.length === 0 && <Form theme={theme} />}\n\n      <div className={s.posts}>\n        {postsElements}\n\n        {!posts.length && <NoElement elements='posts' writeSomething />}\n      </div>\n    </div>\n  )\n}\n\ntype OwnPropsType = {\n  theme: string\n}\n\nconst Form: React.FC<OwnPropsType> = ({ theme }) => {\n  const stylesAddPostButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: '10px 0 10px 10px',\n    width: '140px',\n  }\n\n  const dispatch = useDispatch()\n  const [value, setValue] = useState('')\n\n  const handleAddPost = () => {\n    if (!value.trim()) {\n      return\n    }\n    dispatch(actions.addPost(value))\n    setValue('')\n  }\n\n  return (\n    <div>\n      <div className={s.form}>\n        <TextField\n          name='newPostText'\n          placeholder='Enter the post text...'\n          multiline\n          fullWidth\n          variant='outlined'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          inputProps={{ maxLength: 1000, value }}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setValue(e.target.value)\n          }\n        />\n        <div className={s.buttonBig}>\n          <Button\n            onClick={handleAddPost}\n            variant='contained'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={stylesAddPostButton}\n            endIcon={<PostAddIcon />}\n          >\n            Add post\n          </Button>\n        </div>\n        <div hidden className={s.buttonIcon}>\n          <IconButton\n            aria-label='addPost'\n            onClick={handleAddPost}\n            style={{ marginLeft: 5 }}\n          >\n            <PostAddIcon color='primary' />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Wall\n","export default __webpack_public_path__ + \"static/media/camera.12909c41.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    borderRadius: '5px 5px 0 0',\n    padding: theme.spacing(1),\n    minHeight: '30px',\n    lineHeight: '25px',\n    backgroundColor: '#4f4f4f',\n  },\n}))\n\nexport default useStyles\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, TextField } from '@material-ui/core'\nimport SaveIcon from '@material-ui/icons/Save'\nimport cn from 'classnames'\nimport s from './Status.module.scss'\nimport stylesField from '../../../common/FieldWithCounter/FieldWithCounter.module.scss'\nimport useStyles from './stylesCustomMaterialUI'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\n\nimport { getStatus } from '../../../../redux/selectors/profile-selectors'\nimport { updateStatus } from '../../../../redux/reducers/profile-reducer'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst Status = ({ isOwner }: PropsType) => {\n  const classes = useStyles()\n\n  const stylesSaveAndButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    boxShadow: '2px 2px 5px var(--color-darkBlueTransparent)',\n    margin: 10,\n    width: '100%',\n  }\n\n  const status = useSelector(getStatus)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [editMode, setEditMode] = useState(false)\n  const [isEditInputStatusForm, setIsEditInputStatusForm] = useState(false)\n  const [statusLocal, setStatusLocal] = useState(status)\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  useEffect(() => {\n    setStatusLocal(status)\n  }, [status])\n\n  const handleFocusInput = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n\n  const handleBlurInput = () => {\n    setIsHiddenCounter(true)\n  }\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value.length)\n    setIsEditInputStatusForm(true)\n    setStatusLocal(e.currentTarget.value)\n  }\n\n  const handleSaveStatus = () => {\n    dispatch(updateStatus(statusLocal))\n    setIsEditInputStatusForm(false)\n    setEditMode(false)\n  }\n\n  function useOutsideAlerter(ref: React.RefObject<HTMLDivElement>) {\n    useEffect(() => {\n      function handleClickOutside(e: MouseEvent) {\n        if (\n          ref.current &&\n          !ref.current.contains(e.target as HTMLInputElement)\n        ) {\n          setEditMode(false)\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [ref])\n  }\n\n  const statusRef = useRef<HTMLDivElement | null>(null)\n  useOutsideAlerter(statusRef)\n\n  return (\n    <div ref={statusRef} className={s.container}>\n      {editMode && (\n        <div className={s.wrap}>\n          <TextField\n            autoFocus\n            multiline\n            fullWidth\n            name='newStatusText'\n            placeholder='Your status...'\n            inputProps={{ maxLength: 300 }}\n            className={classes.status}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            value={statusLocal}\n            onChange={handleChangeInput}\n            onFocus={handleFocusInput}\n            onBlur={handleBlurInput}\n          />\n\n          <div className={s.buttonAndCounter}>\n            <div className={s.buttonWrap}>\n              <Button\n                onClick={handleSaveStatus}\n                disabled={!isEditInputStatusForm}\n                variant='contained'\n                color={theme === 'theme1' ? 'primary' : 'secondary'}\n                style={stylesSaveAndButton}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </div>\n\n            <span\n              className={cn(\n                stylesField.count,\n                { [stylesField.countHidden]: isHiddenCounter },\n                { [stylesField.countYellow]: count >= 290 },\n                { [stylesField.countRed]: count === 300 }\n              )}\n            >\n              {count} of 300\n            </span>\n          </div>\n        </div>\n      )}\n\n      {editMode && <div className={s.plug} />}\n\n      {isOwner && !editMode && (\n        <div\n          aria-hidden='true'\n          className={s.status}\n          onClick={() => setEditMode(true)}\n        >\n          {status || <span className={s.noStatus}>Your status is empty</span>}\n        </div>\n      )}\n\n      {!isOwner && status && <div className={s.statusNotMy}>{status}</div>}\n    </div>\n  )\n}\n\nexport default Status\n","import { useState } from 'react'\n\nimport cn from 'classnames'\nimport s from './FieldWithCounter.module.scss'\n\ntype PropsType = {\n  renderContent: (\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    handleFocus: (e: React.FocusEvent<HTMLInputElement>) => void,\n    handleBlur: () => void\n  ) => JSX.Element\n  maxLength: number\n  setIsEditInputProfileForm: (bool: boolean) => void\n}\n\nconst FieldWithCounter: React.FC<PropsType> = (props) => {\n  const { maxLength, renderContent, setIsEditInputProfileForm } = props\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsEditInputProfileForm(true)\n    setCount(e.target.value.length)\n  }\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n  const handleBlur = () => {\n    setIsHiddenCounter(true)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {renderContent(handleInput, handleFocus, handleBlur)}\n\n      <span\n        className={cn(\n          s.count,\n          { [s.countHidden]: isHiddenCounter },\n          { [s.countYellow]: count >= maxLength - 10 },\n          { [s.countRed]: count === maxLength }\n        )}\n      >\n        {count} of {maxLength}\n      </span>\n    </div>\n  )\n}\n\nexport default FieldWithCounter\n","import { useSelector } from 'react-redux'\nimport { TextField } from '@material-ui/core'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport s from './RenderTextField.module.scss'\n\nconst RenderTextField = (props) => {\n  const {\n    label,\n    input,\n    placeholder,\n    multiline,\n    variant,\n    inputProps,\n    onInput,\n    onFocus,\n    meta: { touched, error, warning },\n    fullWidth,\n    ...custom\n  } = props\n\n  const theme = useSelector(getTheme)\n\n  return (\n    <>\n      <TextField\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        label={label}\n        InputLabelProps={{ for: label }}\n        inputProps={{ ...inputProps, id: label }}\n        onInput={onInput}\n        onFocus={onFocus}\n        variant={variant}\n        multiline={multiline}\n        fullWidth={fullWidth}\n        placeholder={placeholder}\n        {...input}\n        {...custom}\n      />\n      {touched &&\n        ((error && <span className={s.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </>\n  )\n}\n\nexport default RenderTextField\n","import { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nconst RenderCheckbox = ({ input, label }) => {\n  const theme = useSelector(getTheme)\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={!!input.value}\n            onChange={input.onChange}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={{ marginLeft: 5, padding: 6 }}\n          />\n        }\n        label={label}\n        labelPlacement='start'\n        style={{ marginLeft: 0 }}\n      />\n    </div>\n  )\n}\n\nexport default RenderCheckbox\n","import React from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport FieldWithCounter from '../../../common/FieldWithCounter/FieldWithCounter'\nimport RenderTextField from '../../../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../../../common/RenderFormElement/RenderCheckbox'\nimport s from './InfoDataForm.module.scss'\n\nimport { ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  errorProfileContacts: string\n  setIsEditInputProfileForm: (bool: boolean) => void\n  initialValues: ProfileType\n}\n\nconst DataForm: React.FC<\n  InjectedFormProps<ProfileType, OwnPropsType> & OwnPropsType\n> = (props) => {\n  const {\n    handleSubmit,\n    initialValues,\n    errorProfileContacts,\n    setIsEditInputProfileForm,\n  } = props\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h1 className={s.titleForm}>Edit profile</h1>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 100 }}\n              label='Name:'\n              name='fullName'\n              placeholder='Your name'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={100}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 1000 }}\n              multiline\n              label='About me:'\n              name='aboutMe'\n              placeholder='Write about yourself!'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={1000}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <Field\n          component={RenderCheckbox}\n          onChange={() => {\n            setIsEditInputProfileForm(true)\n          }}\n          name='lookingForAJob'\n          label='Are you looking for a job?'\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 1000 }}\n              multiline\n              label='Professional skills:'\n              name='lookingForAJobDescription'\n              placeholder='What you can do?'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={1000}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <div className={s.titleAllContacts}>Contacts:</div>\n\n        {errorProfileContacts ? (\n          <div className={s.errorProfileContacts}>{errorProfileContacts}</div>\n        ) : (\n          <></>\n        )}\n\n        {Object.keys(initialValues.contacts).map((key) => (\n          <div className={s.contact} key={key}>\n            <div className={s.titleContact}>{key}:</div>\n\n            <Field\n              component={RenderTextField}\n              onInput={() => setIsEditInputProfileForm(true)}\n              name={`contacts.${key}`}\n              placeholder='https://...'\n              multiline\n              fullWidth\n            />\n          </div>\n        ))}\n      </div>\n    </form>\n  )\n}\n\nconst InfoDataForm = reduxForm<ProfileType, OwnPropsType>({\n  form: 'editProfile',\n})(DataForm)\n\nexport default InfoDataForm\n","import React from 'react'\nimport { ProfileType, СontactsType } from '../../../../types/types'\nimport s from './InfoData.module.scss'\n\ntype PropsType = {\n  profile: ProfileType\n}\n\nconst InfoData: React.FC<PropsType> = ({ profile }) => (\n  <div className={s.containerForm}>\n    <div className={s.wrap}>\n      {profile.aboutMe && (\n        <div className={s.aboutMe}>\n          <div className={s.title}>About me:</div>\n          <div className={s.text}>{profile.aboutMe}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.wrap}>\n      <div className={s.job}>\n        <div className={s.title}>Job search:</div>\n        {profile.lookingForAJob ? (\n          <div className={s.text}>Now looking for a job!</div>\n        ) : (\n          <div className={s.text}>I&#39;m not looking for a job</div>\n        )}\n      </div>\n    </div>\n\n    <div className={s.wrap}>\n      {profile.lookingForAJobDescription && (\n        <div className={s.job}>\n          <div className={s.title}>Professional skills:</div>\n          <div className={s.text}>{profile.lookingForAJobDescription}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.wrap}>\n      {Object.values(profile.contacts).some((el) => el && el !== '') && (\n        <div className={s.contacts}>\n          <div className={s.title}>My contacts</div>\n          {Object.keys(profile.contacts).map((key) => (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key as keyof СontactsType]}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n)\n\ntype ContactPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\nconst Contact: React.FC<ContactPropsType> = React.memo(\n  ({ contactTitle, contactValue }) => (\n    <>\n      {contactValue && (\n        <div className={s.contact}>\n          <span className={s.contactTitle}>{contactTitle}:</span>\n          <div className={s.contactTextWrap}>\n            <a className={s.contactText} href={contactValue}>\n              {contactValue.replace(/(?:https?):\\/\\/([^/\\s]+)[^\\s]*/gi, '$1')}\n            </a>\n          </div>\n        </div>\n      )}\n    </>\n  )\n)\n\nexport default InfoData\n","import React from 'react'\nimport s from './ProfilePlug.module.scss'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfilePlug: React.FC<PropsType> = ({ isOwner }) => {\n  return (\n    <div className={s.containerMainPlug}>\n      <div className={s.columnLeftPlug}>\n        <div className={s.avatarPlug} />\n        {isOwner && <div className={s.buttonPlug} />}\n      </div>\n\n      <div className={s.columnRightPlug}>\n        <div className={s.nameWrapPlug}>\n          <div className={s.namePlug} />\n        </div>\n\n        <div className={s.statusPlug} />\n\n        <div className={s.titleOnePlug} />\n        <div className={s.textPlug} />\n        <div className={s.titleTwoPlug} />\n        <div className={s.textPlug} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfilePlug\n","import React, { useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { submit } from 'redux-form'\n\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './InfoContainer.module.scss'\nimport camera from '../../../img/icons/camera.svg'\n\nimport Preloader from '../../common/Preloader/Preloader'\nimport Status from './Status/Status'\nimport Avatar from '../../common/Avatar/Avatar'\nimport InfoDataForm from './InfoDataForm/InfoDataForm'\nimport InfoData from './InfoData/InfoData'\nimport ProfilePlug from './ProfilePlug/ProfilePlug'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\nimport {\n  getEditModeProfile,\n  getErrorProfileContacts,\n  getProfile,\n  getShowSuccessSave,\n} from '../../../redux/selectors/profile-selectors'\nimport {\n  actions,\n  savePhotoThunk,\n  saveProfileThunk,\n} from '../../../redux/reducers/profile-reducer'\n\nimport { ProfileType } from '../../../types/types'\n\n// при переходе на страницу профиля скрол прокрутится вверх до имени\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    const fullName = document.getElementById('scrollToTopOnMount')\n    fullName?.scrollIntoView(false)\n  }, [])\n  return null\n}\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst InfoContainer: React.FC<PropsType> = ({ isOwner }) => {\n  const stylesSaveAndCancelButton: React.CSSProperties = {\n    fontSize: 12,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: 10,\n  }\n\n  const stylesEditButton: React.CSSProperties = {\n    fontSize: 12,\n    marginTop: 20,\n  }\n\n  // for InfoDataForm\n  const errorProfileContacts = useSelector(getErrorProfileContacts)\n\n  const theme = useSelector(getTheme)\n  const profile = useSelector(getProfile)\n\n  const showSuccessSave = useSelector(getShowSuccessSave)\n  const isEditModeProfile = useSelector(getEditModeProfile)\n  const dispatch = useDispatch()\n\n  const [isEditInputProfileForm, setIsEditInputProfileForm] = useState(false)\n\n  const onSubmitProfile = (values: ProfileType) => {\n    dispatch(saveProfileThunk(values))\n  }\n\n  const handleChangePhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      dispatch(savePhotoThunk(e.target.files[0]))\n    }\n  }\n\n  const handleEditProfile = () => {\n    dispatch(actions.setEditModeProfile(true))\n  }\n\n  const handleSaveProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(submit('editProfile'))\n  }\n\n  const handleCancelProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(actions.setEditModeProfile(false))\n  }\n\n  if (!profile) {\n    return (\n      <>\n        <Preloader />\n        <ProfilePlug isOwner={isOwner} />\n      </>\n    )\n  }\n\n  return (\n    <div className={s.containerMain}>\n      <div className={s.columnLeft}>\n        <Avatar photo={profile.photos.large} size='extra-large'>\n          {isOwner && !isEditModeProfile && (\n            <div className={s.camera}>\n              <label htmlFor='file_out'>\n                <div className={s.wrapImg}>\n                  <img src={camera} alt='icon' />\n                </div>\n                <input\n                  id='file_out'\n                  hidden\n                  type='file'\n                  onChange={handleChangePhoto}\n                />\n              </label>\n            </div>\n          )}\n        </Avatar>\n\n        {isOwner && !isEditModeProfile && (\n          <Button\n            onClick={handleEditProfile}\n            variant='outlined'\n            style={stylesEditButton}\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\n          >\n            Edit profile\n          </Button>\n        )}\n\n        {isEditModeProfile && (\n          <div className={s.buttonsSaveAndCancelProfile}>\n            <Button\n              onClick={handleSaveProfile}\n              disabled={!isEditInputProfileForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n            <Button\n              onClick={handleCancelProfile}\n              variant='outlined'\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<CloseIcon />}\n            >\n              Cancel\n            </Button>\n          </div>\n        )}\n\n        {isEditModeProfile && showSuccessSave && (\n          <ShowSuccessSavePortal>\n            <div className={s.successSave}>{showSuccessSave}</div>\n          </ShowSuccessSavePortal>\n        )}\n      </div>\n\n      <div className={s.columnRight}>\n        {!isEditModeProfile && (\n          <div id='scrollToTopOnMount' className={s.fullName}>\n            {profile.fullName}\n          </div>\n        )}\n\n        {!isEditModeProfile && <Status isOwner={isOwner} />}\n\n        {isEditModeProfile ? (\n          <InfoDataForm\n            initialValues={profile}\n            onSubmit={onSubmitProfile}\n            errorProfileContacts={errorProfileContacts}\n            setIsEditInputProfileForm={setIsEditInputProfileForm}\n          />\n        ) : (\n          <InfoData profile={profile} />\n        )}\n      </div>\n      {/* при переходе на старницу профиля скрол обнулится */}\n      <ScrollToTopOnMount />\n    </div>\n  )\n}\n\nconst ShowSuccessSavePortal = ({ children }: { children: React.ReactNode }) => {\n  const el: HTMLDivElement = document.createElement('div')\n  document.body.append(el)\n\n  return createPortal(children, el)\n}\n\nexport default InfoContainer\n","import React from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport { AppStateType } from '../../redux/redux-store'\nimport {\n  getUserProfile,\n  getStatus,\n  actions,\n} from '../../redux/reducers/profile-reducer'\n\nimport Wall from './Wall/Wall'\nimport InfoContainer from './Info/InfoContainer'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\nimport { getEditModeProfile } from '../../redux/selectors/profile-selectors'\n\ntype MapStatePropsType = {\n  authorizedUserID: number | null\n  isEditModeProfile: boolean\n}\n\ntype MapDispatchPropsType = {\n  getUserProfile: (userId: number) => void\n  getStatus: (userId: number) => void\n  setEditModeProfile: (bool: boolean) => void\n}\n\ntype PathParamsType = {\n  userId: string\n}\n\ntype PropsType = MapStatePropsType &\n  MapDispatchPropsType &\n  RouteComponentProps<PathParamsType>\n\nclass ProfileContainer extends React.PureComponent<PropsType> {\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: PropsType) {\n    const { match } = this.props\n    // рендер при переходе с одной страницы на другую\n    if (match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  componentWillUnmount() {\n    const { isEditModeProfile, setEditModeProfile } = this.props\n    if (isEditModeProfile) {\n      setEditModeProfile(false)\n    }\n  }\n\n  refreshProfile() {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { match, authorizedUserID, history, getUserProfile, getStatus } =\n      this.props\n    let userId: number | null = +match.params.userId\n\n    if (!userId) {\n      userId = authorizedUserID\n      if (!userId) {\n        history.push('/login')\n      }\n    }\n\n    getUserProfile(userId as number)\n    getStatus(userId as number)\n  }\n\n  render(): React.ReactElement<PropsType> {\n    const { match, authorizedUserID, isEditModeProfile } = this.props\n    const isOwner = +match.params.userId === authorizedUserID\n\n    return (\n      <>\n        <InfoContainer isOwner={isOwner} />\n        {!isEditModeProfile && isOwner && <Wall />}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    authorizedUserID: state.auth.userID,\n    isEditModeProfile: getEditModeProfile(state),\n  }\n}\n\nexport default compose<React.ComponentType>(\n  connect<\n    MapStatePropsType,\n    MapDispatchPropsType,\n    RouteComponentProps<PathParamsType>,\n    AppStateType\n  >(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    setEditModeProfile: actions.setEditModeProfile,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n","export default __webpack_public_path__ + \"static/media/preloaderStart.ec91d375.svg\";","import React from 'react'\nimport preloaderStart from '../../../img/preloader/preloaderStart.svg'\nimport s from './Preloader.module.scss'\n\nconst PreloaderStart: React.FC = () => {\n  return (\n    <div className={s.container}>\n      <div className={s.wrap}>\n        <img src={preloaderStart} alt='preloader' />\n      </div>\n    </div>\n  )\n}\n\nexport default PreloaderStart\n","export default __webpack_public_path__ + \"static/media/logo.cebb0f3e.svg\";","import {\n  DefaultResponseType,\n  instance,\n  ResultCodeForCaptcha,\n  ResultCodesEnum,\n} from './api'\n\ntype MeDataType = {\n  id: number\n  email: string\n  login: string\n}\n\nconst authAPI = {\n  async me() {\n    const response = await instance.get<DefaultResponseType<MeDataType>>(\n      'auth/me'\n    )\n    return response.data\n  },\n  async login(\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: null | string = null\n  ) {\n    const response = await instance.post<\n      DefaultResponseType<\n        { userId: number },\n        ResultCodesEnum | ResultCodeForCaptcha\n      >\n    >('/auth/login', {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    })\n    return response.data\n  },\n  async logout() {\n    const response = await instance.delete<DefaultResponseType>('/auth/login')\n    return response.data\n  },\n}\n\nexport default authAPI\n","import { instance } from './api'\n\ntype GetCaptchaResponseType = {\n  url: string\n}\n\nconst securityAPI = {\n  async getCaptchaURL() {\n    const response = await instance.get<GetCaptchaResponseType>(\n      'security/get-captcha-url'\n    )\n    return response.data\n  },\n}\n\nexport default securityAPI\n","import { FormAction, stopSubmit } from 'redux-form'\nimport { ResultCodesEnum, ResultCodeForCaptcha } from '../../api/api'\nimport authAPI from '../../api/auth-api'\nimport securityAPI from '../../api/security-api'\n\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  userID: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaURL: null as string | null,\n  myPhoto: null as string | null,\n}\n\nconst authReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n    case 'GET_CAPTCHA_URL_SUCCESS': {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n    case 'SET_MY_PHOTO': {\n      return {\n        ...state,\n        // @ts-ignore\n        myPhoto: action.payload.photo,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  setAuthUserData: (\n    userID: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n  ) => ({\n    type: 'SET_USER_DATA',\n    payload: {\n      userID,\n      email,\n      login,\n      isAuth,\n    } as const,\n  }),\n\n  setCaptcha: (captchaURL: string | null) => ({\n    type: 'GET_CAPTCHA_URL_SUCCESS',\n    payload: { captchaURL } as const,\n  }),\n\n  setMyPhoto: (photo: string | null) => ({\n    type: 'SET_MY_PHOTO',\n    payload: { photo } as const,\n  }),\n}\n\nexport const getAuthUserDataThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.me()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    const { id, email, login } = response.data\n    dispatch(actions.setAuthUserData(id, email, login, true))\n  }\n\n  if (response.resultCode === ResultCodesEnum.Error) {\n    const message = response.messages\n    const action = stopSubmit('loginForm', {\n      _error: message.length > 0 ? message[0] : 'Some error',\n    })\n    // Some error - на всякий случай, если с сервера придёт пустое сообщение\n    // при ошибке\n    dispatch(action)\n  }\n\n  if (Object.keys(response.data).length !== 0) {\n    const myProfile = await profileAPI.getProfile(response.data.id)\n    dispatch(actions.setMyPhoto(myProfile.photos.large))\n  }\n}\n\nconst setCaptchaThunk = (): ThunkType => async (dispatch) => {\n  const response = await securityAPI.getCaptchaURL()\n  const captcha = response.url\n  dispatch(actions.setCaptcha(captcha))\n}\n\nexport const loginThunk =\n  (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captcha: string | null\n  ): ThunkType =>\n  async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getAuthUserDataThunk())\n      dispatch(actions.setCaptcha(null))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      const message = response.messages\n      const action = stopSubmit('loginForm', {\n        _error: message.length > 0 ? message[0] : 'Some error',\n      })\n      // Some error - на всякий случай, если с сервера придёт пустое сообщение\n      // при ошибке\n      dispatch(action)\n    }\n\n    if (response.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\n      dispatch(setCaptchaThunk())\n    }\n  }\n\nexport const logoutThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.logout()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false))\n    dispatch(actions.setMyPhoto(null))\n  }\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { getAuthUserDataThunk } from './auth-reducer'\n\ntype themeType = 'theme1' | 'theme2'\n\nconst initialState = {\n  initialized: false,\n  theme: 'theme1',\n}\n\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'INITIALIZED_SUCCESS': {\n      return {\n        ...state,\n        initialized: true,\n      }\n    }\n    case 'TOGGLE_THEME': {\n      return {\n        ...state,\n        theme: action.theme,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializedSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const),\n  setTheme: (theme: themeType) => ({ type: 'TOGGLE_THEME', theme } as const),\n}\n\nexport const initializeAppThunk = (): ThunkType => async (dispatch) => {\n  await dispatch(getAuthUserDataThunk())\n  dispatch(actions.initializedSuccess())\n}\n\nexport default appReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport InvertColorsIcon from '@material-ui/icons/InvertColors'\nimport { IconButton } from '@material-ui/core'\nimport s from './Header.module.scss'\nimport logo from '../../img/icons/logo.svg'\n\nimport Avatar from '../common/Avatar/Avatar'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nimport {\n  getAuthorizedUserID,\n  getIsAuth,\n  getLogin,\n  getMyPhoto,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { logoutThunk } from '../../redux/reducers/auth-reducer'\nimport { actions } from '../../redux/reducers/app-reducer'\n\nconst Header: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const login = useSelector(getLogin)\n  const myID = useSelector(getAuthorizedUserID)\n  const myPhoto = useSelector(getMyPhoto)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [themeLocal, setThemeLocal] = useState(theme)\n\n  useEffect(() => {\n    const colors = {\n      cyan: `var(--color-cyan-${themeLocal})`,\n      cyanLight: `var(--color-cyanLight-${themeLocal})`,\n      cyanMedium: `var(--color-cyanMedium-${themeLocal})`,\n      cyanDark: `var(--color-cyanDark-${themeLocal})`,\n      darkBlue: `var(--color-darkBlue-${themeLocal})`,\n      darkBlueTransparent: `var(--color-darkBlueTransparent-${themeLocal})`,\n    }\n\n    const keys = Object.keys(colors)\n    const values = Object.values(colors)\n\n    for (let i = 0; i < keys.length; i++) {\n      document.body.style.setProperty(`--color-${keys[i]}`, values[i])\n    }\n  }, [theme, themeLocal])\n\n  useLocalStorage('theme', theme, actions.setTheme, setThemeLocal)\n\n  return (\n    <header className={s.header}>\n      <NavLink className={s.logoAndTitle} to='/profile'>\n        <img src={logo} alt='logo' />\n        <span className={s.headerTitleDesctop}>Social network</span>\n        <span hidden className={s.headerTitleMobile}>\n          SN\n        </span>\n      </NavLink>\n\n      <div className={s.rightColumn}>\n        {isAuth ? (\n          <>\n            <div className={s.loginAndPhoto}>\n              <Avatar photo={myPhoto} size='small' id={myID} />\n              <span className={s.loginName}>{login}</span>\n            </div>\n\n            <ButtonChangeTheme\n              theme={theme}\n              themeLocal={themeLocal}\n              setThemeLocal={setThemeLocal}\n            />\n\n            <span className={s.buttonLogoutDesctop}>\n              <Button\n                onClick={() => dispatch(logoutThunk())}\n                variant='outlined'\n                style={{ marginRight: '12px' }}\n                startIcon={<ExitToAppIcon />}\n              >\n                Log out\n              </Button>\n            </span>\n            <span hidden className={s.buttonLogoutMobile}>\n              <IconButton\n                onClick={() => dispatch(logoutThunk())}\n                aria-label='logout'\n                type='submit'\n              >\n                <ExitToAppIcon />\n              </IconButton>\n            </span>\n          </>\n        ) : (\n          <ButtonChangeTheme\n            theme={theme}\n            themeLocal={themeLocal}\n            setThemeLocal={setThemeLocal}\n          />\n        )}\n      </div>\n    </header>\n  )\n}\n\ntype PropsType = {\n  theme: string\n  themeLocal: string\n  setThemeLocal: Dispatch<SetStateAction<string>>\n}\n\nconst ButtonChangeTheme: React.FC<PropsType> = (props) => {\n  const { theme, themeLocal, setThemeLocal } = props\n  const dispatch = useDispatch()\n\n  const handleToggleTheme = () => {\n    dispatch(actions.setTheme(themeLocal === 'theme1' ? 'theme2' : 'theme1'))\n    setThemeLocal(themeLocal === 'theme1' ? 'theme2' : 'theme1')\n  }\n\n  return (\n    <>\n      <span className={s.buttonThemeDesctop}>\n        <Button\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={{ padding: '6px 12px', marginRight: '12px' }}\n          onClick={handleToggleTheme}\n          startIcon={<InvertColorsIcon />}\n        >\n          Change theme\n        </Button>\n      </span>\n\n      <span hidden className={s.buttonThemeMobile}>\n        <IconButton\n          onClick={handleToggleTheme}\n          aria-label='changeTheme'\n          type='submit'\n          style={{ margin: '0 12px' }}\n        >\n          <InvertColorsIcon\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n          />\n        </IconButton>\n      </span>\n    </>\n  )\n}\nexport default Header\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NavLink, RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Navbar.module.scss'\nimport { getAuthorizedUserID } from '../../redux/selectors/auth-selectors'\n\ntype PathParamsType = {\n  pathname: string\n  profileUrl?: string\n}\n\nconst Navbar: React.FC<RouteComponentProps<PathParamsType>> = ({\n  location: { pathname },\n}) => {\n  const authorizedUserID = useSelector(getAuthorizedUserID)\n  const profileUrl = `/profile/${authorizedUserID}`\n\n  return (\n    <nav className={s.nav} id='navbar'>\n      <NavLink\n        exact\n        to={profileUrl}\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconProfile pathname={pathname} profileUrl={profileUrl} />\n        Profile\n      </NavLink>\n\n      <NavLink\n        to='/chat'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconChat pathname={pathname} />\n        Chat\n      </NavLink>\n\n      <NavLink\n        to='/users'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconUsers pathname={pathname} />\n        Find Users\n      </NavLink>\n\n      <NavLink\n        to='/friends'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconFriends pathname={pathname} />\n        Friends\n      </NavLink>\n    </nav>\n  )\n}\n\nconst IconProfile: React.FC<PathParamsType> = ({ pathname, profileUrl }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === profileUrl,\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z' />\n    </svg>\n  )\n}\n\nconst IconChat: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/chat',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M20,2H4A2,2 0 0,0 2,4V22L6,18H20A2,2 0 0,0 22,16V4C22,2.89 21.1,2 20,2Z' />\n    </svg>\n  )\n}\n\nconst IconUsers: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/users',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z' />\n    </svg>\n  )\n}\n\nconst IconFriends: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/friends',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z' />\n    </svg>\n  )\n}\n\nexport default withRouter(Navbar)\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport cn from 'classnames'\nimport Button from '@material-ui/core/Button'\nimport s from './Login.module.scss'\nimport RenderTextField from '../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../common/RenderFormElement/RenderCheckbox'\n\nimport {\n  getAuthorizedUserID,\n  getCaptchaURL,\n  getIsAuth,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { loginThunk } from '../../redux/reducers/auth-reducer'\n\nconst validate = (values: LoginFormValuesType) => {\n  type ErrorsType = {\n    email?: string\n    password?: string\n    captcha?: string\n  }\n\n  const errors: ErrorsType = {}\n\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n\n  return errors\n}\n\ntype OwnPropsType = {\n  captchaURL: string | null\n}\n\ntype LoginFormValuesType = {\n  email: string\n  password: string\n  rememberMe: boolean\n  captcha: string\n}\n\nconst Login: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const captchaURL = useSelector(getCaptchaURL)\n  const userID = useSelector(getAuthorizedUserID)\n  const dispatch = useDispatch()\n\n  const onSubmit = (values: LoginFormValuesType) => {\n    dispatch(\n      loginThunk(\n        values.email,\n        values.password,\n        values.rememberMe,\n        values.captcha\n      )\n    )\n  }\n\n  if (isAuth) {\n    return <Redirect to={`/profile/${userID}`} />\n  }\n\n  return (\n    <div className={s.wrap}>\n      <div className={s.body}>\n        <h1>Log in</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL} />\n      </div>\n    </div>\n  )\n}\n\nconst LoginForm: React.FC<\n  InjectedFormProps<LoginFormValuesType, OwnPropsType> & OwnPropsType\n> = ({ handleSubmit, error, captchaURL }) => {\n  const stylesLoginButton = {\n    fontSize: 16,\n    fontWeight: 700,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const stylesTestLoginButton = {\n    marginBottom: '15px',\n    ...stylesLoginButton,\n  }\n\n  const dispatch = useDispatch()\n  const theme = useSelector(getTheme)\n\n  const handleEnterTestAccount = () => {\n    const email = 'free@samuraijs.com'\n    const password = 'free'\n\n    dispatch(loginThunk(email, password, false, null))\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className={s.loginBlockSubstrate}>\n          <div className={s.loginBlock}>\n            <div className={s.row}>\n              <Field\n                component={RenderTextField}\n                name='email'\n                label='Email:'\n                type='email'\n                fullWidth\n              />\n            </div>\n            <div className={s.row}>\n              <Field\n                component={RenderTextField}\n                name='password'\n                label='Password:'\n                type='password'\n                fullWidth\n              />\n            </div>\n            <div className={cn(s.row, s.rowCheckbox)}>\n              <Field\n                component={RenderCheckbox}\n                name='rememberMe'\n                label='Remember me'\n              />\n            </div>\n\n            {captchaURL && <img src={captchaURL} alt='captcha' />}\n            {captchaURL && (\n              <Field component={RenderTextField} fullWidth name='captcha' />\n            )}\n\n            <div className={s.row}>\n              <Button\n                type='submit'\n                variant='contained'\n                color={theme === 'theme1' ? 'primary' : 'secondary'}\n                fullWidth\n                style={stylesLoginButton}\n              >\n                Log in\n              </Button>\n\n              {error && (\n                <div className={s.formError}>\n                  {error === 'You are not authorized' ? (\n                    <>\n                      <div>1. You are either not authorized</div>\n                      <div>or</div>\n                      <div>\n                        2. Please, unblock third party cookies or show all\n                        cookies (see browser settings)\n                      </div>\n                    </>\n                  ) : (\n                    error\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <p>or</p>\n        <Button\n          onClick={handleEnterTestAccount}\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          fullWidth\n          style={stylesTestLoginButton}\n        >\n          Login to test account\n        </Button>\n      </form>\n    </>\n  )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, OwnPropsType>({\n  form: 'loginForm',\n  validate,\n})(LoginForm)\n\nexport default Login\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error })\n  }\n\n  render() {\n    const { error } = this.state\n    const { children } = this.props\n\n    if (error) {\n      return (\n        <div>\n          <h2>Something went wrong</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error?.toString()}\n          </details>\n        </div>\n      )\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { Suspense } from 'react'\nimport Preloader from '../components/common/Preloader/Preloader'\n\nfunction withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\n  return (props: WCP) => (\n    <Suspense fallback={<Preloader />}>\n      <WrappedComponent {...props} />\n    </Suspense>\n  )\n}\nexport default withSuspense\n","import React from 'react'\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport PreloaderStart from './components/common/Preloader/PreloaderStart'\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Login from './components/Login/Login'\nimport ErrorBoundary from './components/Error/ErrorBoundary'\nimport withSuspense from './hoc/withSuspense'\n\nimport s from './App.module.scss'\n\nimport { getInitialized } from './redux/selectors/app-selectors'\nimport { getAuthorizedUserID } from './redux/selectors/auth-selectors'\nimport { initializeAppThunk } from './redux/reducers/app-reducer'\n\nconst ChatContainer = React.lazy(() => import('./components/Chat/Chat'))\nconst UsersContainer = React.lazy(\n  () => import('./components/Users/UsersContainer')\n)\nconst FriendsContainer = React.lazy(\n  () => import('./components/Friends/FriendsContainer')\n)\n\nconst SuspendedChat = withSuspense(ChatContainer)\nconst SuspendedUsers = withSuspense(UsersContainer)\nconst SuspendedFriends = withSuspense(FriendsContainer)\n\nconst App: React.FC = () => {\n  const userID = useSelector(getAuthorizedUserID)\n  const initialized = useSelector(getInitialized)\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    dispatch(initializeAppThunk())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <PreloaderStart />\n  }\n\n  return (\n    <div className={s.fon}>\n      <div className={s.container}>\n        <div className={s.appWrapper}>\n          <Header />\n          <Navbar />\n\n          <div className={s.appWrapperContent}>\n            <ErrorBoundary>\n              <Switch>\n                <Redirect from='/profile/undefined' to='/' />\n\n                <Route\n                  path='/profile/:userId'\n                  render={() => <ProfileContainer />}\n                />\n\n                <Route path='/chat' render={() => <SuspendedChat />} />\n\n                <Route path='/friends' render={() => <SuspendedFriends />} />\n\n                <Route path='/users' render={() => <SuspendedUsers />} />\n\n                <Route path='/login' render={() => <Login />} />\n\n                <Redirect exact from='/' to={`/profile/${userID}`} />\n\n                <Redirect from='*' to='/' />\n              </Switch>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AppContainer = withRouter(App)\nexport default AppContainer\n","import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose,\n  Action,\n} from 'redux'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nimport authReducer from './reducers/auth-reducer'\nimport profileReducer from './reducers/profile-reducer'\nimport usersReducer from './reducers/users-reducer'\nimport appReducer from './reducers/app-reducer'\nimport chatReducer from './reducers/chat-reducer'\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n  chat: chatReducer,\n})\n\n// types state app\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\n// types actions\nexport type InferActionsTypes<T> = T extends {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: (...args: any[]) => infer U\n}\n  ? U\n  : never\n\n// type thunks\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n  R,\n  AppStateType,\n  unknown,\n  A\n>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// @ts-ignore\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport AppContainer from './App'\nimport store from './redux/redux-store'\nimport './styles/theme.css'\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    // цвет главных кнопок, активных ссылок в навигации,\n    // декоративных линий, рамок у форм\n    primary: {\n      main: '#00bcd4',\n      // 1-ая тема, синий цвет\n    },\n    secondary: {\n      main: '#00d482',\n      // 2-ая тема, зелёный цвет\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <AppContainer />\n      </Provider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMainPlug\":\"ProfilePlug_containerMainPlug__TFCmt\",\"columnLeftPlug\":\"ProfilePlug_columnLeftPlug__2s7gL\",\"columnRightPlug\":\"ProfilePlug_columnRightPlug__348C5\",\"avatarPlug\":\"ProfilePlug_avatarPlug__1U4K7\",\"buttonPlug\":\"ProfilePlug_buttonPlug__1vVyr\",\"namePlug\":\"ProfilePlug_namePlug__19jIY\",\"statusPlug\":\"ProfilePlug_statusPlug__ac2zr\",\"titleOnePlug\":\"ProfilePlug_titleOnePlug__1UTmI\",\"titleTwoPlug\":\"ProfilePlug_titleTwoPlug__3woYd\",\"textPlug\":\"ProfilePlug_textPlug__3_-zD\",\"nameWrapPlug\":\"ProfilePlug_nameWrapPlug__sDmwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InfoDataForm_form__2kPgc\",\"titleForm\":\"InfoDataForm_titleForm__3v9-q\",\"wrap\":\"InfoDataForm_wrap__1Ypq9\",\"contact\":\"InfoDataForm_contact__2dNMg\",\"titleAllContacts\":\"InfoDataForm_titleAllContacts__3gywu\",\"titleContact\":\"InfoDataForm_titleContact__2rYri\",\"errorProfileContacts\":\"InfoDataForm_errorProfileContacts__VDAET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kFdy\",\"logoAndTitle\":\"Header_logoAndTitle__E1gOe\",\"headerTitleDesctop\":\"Header_headerTitleDesctop__2wBaa\",\"headerTitleMobile\":\"Header_headerTitleMobile__3ZA7x\",\"rightColumn\":\"Header_rightColumn__2gu4E\",\"loginAndPhoto\":\"Header_loginAndPhoto__1azBA\",\"loginName\":\"Header_loginName__ncEXR\",\"buttonThemeDesctop\":\"Header_buttonThemeDesctop__1GobS\",\"buttonThemeMobile\":\"Header_buttonThemeMobile__1i4f9\",\"buttonLogoutDesctop\":\"Header_buttonLogoutDesctop__2JZG2\",\"buttonLogoutMobile\":\"Header_buttonLogoutMobile__1W2MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__1LWwk\",\"body\":\"Login_body__3DOsP\",\"loginBlockSubstrate\":\"Login_loginBlockSubstrate__3-IH5\",\"loginBlock\":\"Login_loginBlock__3-8mF\",\"row\":\"Login_row__18i6W\",\"rowCheckbox\":\"Login_rowCheckbox__16VyH\",\"formError\":\"Login_formError__2wlzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"FieldWithCounter_count__Cu5UD\",\"countHidden\":\"FieldWithCounter_countHidden__3sFUY\",\"countYellow\":\"FieldWithCounter_countYellow__1fcWm\",\"countRed\":\"FieldWithCounter_countRed__3W_7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"camera\":\"InfoContainer_camera__S_wT3\",\"wrapImg\":\"InfoContainer_wrapImg__3f0wV\",\"containerMain\":\"InfoContainer_containerMain__1_k-O\",\"columnLeft\":\"InfoContainer_columnLeft__1Tu-B\",\"columnRight\":\"InfoContainer_columnRight__3c4jr\",\"iconButtonEditProfile\":\"InfoContainer_iconButtonEditProfile__UwC2i\",\"fullName\":\"InfoContainer_fullName__BeYHm\",\"buttonsSaveAndCancelProfile\":\"InfoContainer_buttonsSaveAndCancelProfile__2LcfV\",\"successSave\":\"InfoContainer_successSave__2h9VB\",\"anim\":\"InfoContainer_anim__1vCzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Status_container__zqQuP\",\"wrap\":\"Status_wrap__myyLI\",\"buttonAndCounter\":\"Status_buttonAndCounter__2tSPr\",\"buttonWrap\":\"Status_buttonWrap__3M41z\",\"plug\":\"Status_plug__3fW1v\",\"status\":\"Status_status__1QybE\",\"statusNotMy\":\"Status_statusNotMy__3kDuV\",\"noStatus\":\"Status_noStatus__248I2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_default\":\"Preloader_container_default__YqKY9\",\"container_block\":\"Preloader_container_block__20vZD\",\"wrap\":\"Preloader_wrap__1YoGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Wall_container__2G0Gc\",\"basket\":\"Wall_basket__3lyCa\",\"form\":\"Wall_form__3SIV6\",\"posts\":\"Wall_posts__gFi8c\",\"buttonBig\":\"Wall_buttonBig__2Z8kt\",\"buttonIcon\":\"Wall_buttonIcon__2UH4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarWrap\":\"Avatar_avatarWrap__1kMu_\",\"avatar\":\"Avatar_avatar__3_fhn\",\"small\":\"Avatar_small__3YJmQ\",\"medium\":\"Avatar_medium__3JNHX\",\"large\":\"Avatar_large__2CWNX\",\"extra_large\":\"Avatar_extra_large__ElsR6\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport unknown from '../../../img/no_photo.svg'\nimport s from './Avatar.module.scss'\n\ntype SizeType = 'small' | 'medium' | 'large' | 'extra-large'\n\ntype PropsType = {\n  photo: string | null | undefined\n  size?: SizeType\n}\n\ntype OwnPropsType = {\n  id?: number | null\n}\n\nconst Avatar: React.FC<PropsType & OwnPropsType> = ({\n  photo,\n  size = 'medium',\n  id,\n  children,\n}) => {\n  // Проверка тестового аккаунта с id = 1079:\n  // установленное фото на тестовый аккаунт удаляется через короткое время\n  // на сервере и, если с этого аккаунта написано сообщение в чат, то\n  // при отрисовке этого сообщения (с удалённым фото) в ответ приходит\n  // ошибка вместо null | undefined, вскоре сервер опять присылает null\n  // вместо фото, но это происходит не сразу. Для этого случая эта проверка\n  let photoTrue\n  if (photo?.includes('1079')) {\n    photoTrue = null\n  } else {\n    photoTrue = photo\n  }\n\n  return (\n    <>\n      {id ? (\n        <NavLink to={`/profile/${id}`} replace>\n          <AvatarBody photo={photoTrue} size={size}>\n            {children}\n          </AvatarBody>\n        </NavLink>\n      ) : (\n        <AvatarBody photo={photoTrue} size={size}>\n          {children}\n        </AvatarBody>\n      )}\n    </>\n  )\n}\n\nconst AvatarBody: React.FC<PropsType> = ({ photo, size = 'medium' }) => {\n  return (\n    <div className={s.avatarWrap}>\n      <div\n        className={cn(\n          s.avatar,\n          { [s.extra_large]: size === 'extra-large' },\n          { [s.large]: size === 'large' },\n          { [s.medium]: size === 'medium' },\n          { [s.small]: size === 'small' }\n        )}\n      >\n        <img src={photo || unknown} alt='avatar' />\n      </div>\n    </div>\n  )\n}\n\nexport default Avatar\n"],"sourceRoot":""}