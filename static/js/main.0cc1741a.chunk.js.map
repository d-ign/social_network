{"version":3,"sources":["components/Profile/ProfileWall/ProfileWall.module.scss","components/Profile/ProfileInfo/ProfileInputChangeAvatar/ProfileInputChangeAvatar.module.scss","App.module.scss","img/preloader/preloaderTheme1.svg","img/preloader/preloaderTheme2.svg","components/common/Preloader/Preloader.tsx","img/no_photo.svg","components/Profile/ProfileWall/ProfilePost/ProfileAvatarPost/ProfileAvatarPost.module.scss","components/common/Name/Name.module.scss","components/common/Prompt/Prompt.tsx","components/common/Name/Name.tsx","api/users-api.ts","redux/reducers/users-reducer.ts","components/common/NoElement/NoElement.tsx","hoc/withAuthRedirect.tsx","api/api.ts","api/chat-api.ts","redux/reducers/chat-reducer.ts","components/common/NoElement/NoElement.module.scss","components/common/RenderFormElement/RenderTextField.module.scss","redux/selectors/app-selectors.ts","components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/common/Prompt/Prompt.module.scss","redux/selectors/auth-selectors.ts","components/Profile/ProfileWall/ProfilePost/ProfilePost.module.scss","api/auth-api.ts","api/profile-api.ts","api/security-api.ts","redux/reducers/auth-reducer.ts","redux/reducers/profile-reducer.ts","redux/reducers/app-reducer.ts","redux/redux-store.ts","components/Profile/ProfileWall/ProfileButtonsPostsDelete/ProfileButtonsPostsDelete.tsx","components/Profile/ProfileWall/ProfilePost/ProfileAvatarPost/ProfileAvatarPost.tsx","redux/selectors/profile-selectors.ts","components/Profile/ProfileWall/ProfilePost/ProfilePost.tsx","hooks/useLocalStorage.tsx","components/Profile/ProfileWall/ProfileWall.tsx","components/Profile/ProfileInfo/ProfilePlug/ProfilePlug.tsx","components/Profile/ProfileInfo/ProfileStatus/stylesCustomMaterialUI.jsx","hooks/useOutsideAlerter.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/common/FieldWithCounter/FieldWithCounter.tsx","components/common/RenderFormElement/RenderTextField.jsx","components/common/RenderFormElement/RenderCheckbox.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","img/icons/camera.svg","components/Profile/ProfileInfo/ProfileInputChangeAvatar/ProfileInputChangeAvatar.tsx","components/Profile/ProfileInfo/ProfileInfoContainer.tsx","components/Profile/ProfileContainer.tsx","img/preloader/preloaderStart.svg","components/common/Preloader/PreloaderStart.tsx","img/icons/logo.svg","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Error/ErrorBoundary.jsx","App.tsx","index.tsx","components/Profile/ProfileInfo/ProfilePlug/ProfilePlug.module.scss","components/Header/Header.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Login/Login.module.scss","components/Profile/ProfileWall/ProfileButtonsPostsDelete/ProfileButtonsPostsDelete.module.scss","components/common/FieldWithCounter/FieldWithCounter.module.scss","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","components/Profile/ProfileInfo/ProfileInfoContainer.module.scss","components/common/Preloader/Preloader.module.scss","components/common/Avatar/Avatar.module.scss","components/common/Avatar/Avatar.tsx","components/Navbar/Navbar.module.scss"],"names":["module","exports","Preloader","display","theme","useSelector","getTheme","className","cn","s","container_default","container_block","wrap","src","preloaderTheme1","preloaderTheme2","alt","Prompt","DeletingProfilePosts","container","containerProfile","arrow","text","style","color","SearchUsers","props","pathname","containerSearch","arrowSearch","PaginationUsers","containerPagination","arrowPagination","Name","id","name","size","name_size_small","to","replace","memo","usersAPI","getUsers","currentPage","pageSize","term","friend","instance","get","response","data","followUser","post","unfollowUser","delete","initialState","users","totalUsersCount","isFetching","followingInProgress","actions","followSuccess","userID","type","unfollowSuccess","setUsers","addUsers","setTotalUsersCount","count","clearUsers","toggleIsFetching","toggleFollowingProgress","page","dispatch","getState","a","usersPage","length","items","totalCount","_followUnfollowFlow","apiMethod","actionCreator","resultCode","ResultCodesEnum","Success","follow","bind","unfollow","usersReducer","state","action","map","u","followed","filter","NoElement","elements","writeSomething","withAuthRedirect","WrappedComponent","getIsAuth","ResultCodeForCaptcha","axios","create","withCredentials","baseURL","headers","process","ws","subscribers","notifySubscribersAboutStatus","status","forEach","reconnect","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","openHandler","errorHandler","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","start","stop","subscribe","eventName","callback","push","sendMessage","message","send","messages","statusWS","payload","startMessagesListening","stopMessagesListening","chatReducer","m","v1","item","index","array","getInitialized","app","initialized","getLogin","auth","login","isAuth","getAuthorizedUserID","getCaptchaURL","captchaURL","getMyPhoto","myPhoto","authAPI","me","email","password","rememberMe","captcha","logout","profileAPI","getProfile","getStatus","updateStatus","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","profile","securityAPI","_handleError","Error","stopSubmit","_error","getAuthUserData","Object","keys","myProfile","photos","large","loginThunk","CaptchaIsRequired","url","authReducer","posts","idPost","likesCount","isLikeClick","postsForDelete","showSuccessSave","errorProfileContacts","isEditModeProfile","initializePosts","addPost","newPostText","deletePost","setPostForDeleting","deletePostForDeleting","clearPostsForDeleting","setLikeOnPost","deleteLikeOnPost","setUserProfile","setStatus","savePhotoSuccess","showSuccessSaveProfile","showErrorProfileContacts","setEditModeProfile","bool","getUserProfile","userId","profileReducer","newPost","Date","now","p","appReducer","rootReducer","combineReducers","profilePage","form","formReducer","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileButtonsPostsDelete","isSelectedAllPosts","setIsSelectedAllPosts","setIsHiddenAllLikeAndXAndPrompt","setIsCancelDeletion","setIsShowAnimation","stylesButton","maxWidth","height","margin","textShadow","useDispatch","handleDeleteSelectedPost","handleCancelDeletion","wrapButtons","hidden","buttons","FormControlLabel","control","Checkbox","label","labelPlacement","marginLeft","checked","onChange","buttonDesktop","Button","variant","startIcon","onClick","buttonMobile","IconButton","title","ProfileAvatarPost","isSelectedPost","setIsSelectedPost","aria-hidden","avatar","postSelectedTheme1","postSelectedTheme2","Avatar","photo","unknown","getShowSuccessSave","getErrorProfileContacts","getPosts","getPostsForDelete","Set","getEditModeProfile","ProfilePost","idPostFirst","isShowAnimation","isCancelDeletion","handleDeleteOnePost","isHiddenAllLikeAndXAndPrompt","useState","isShowPrompt","setIsShowPrompt","isClickDeletePost","setIsClickDeletePost","useEffect","has","postContainer","postContainerDelete","postSelected","columnLeft","columnCenter","fullName","plugColumnRight","columnRight","ButtonDeletePost","ButtonSetLike","handleDeletePost","useCallback","handleSetLike","wrapLike","like","noLike","useLocalStorage","key","value","currentValue","currentValueJson","localStorage","getItem","setItem","stringify","ProfileWall","postsElements","visuallyHidden","AddPostForm","setValue","handleAddPost","trim","TextField","placeholder","multiline","fullWidth","inputProps","maxLength","target","stylesAdaptiveButtons","width","endIcon","aria-label","ProfilePlug","isOwner","button","nameWrap","titleOne","titleTwo","useStyles","makeStyles","borderRadius","padding","spacing","minHeight","lineHeight","backgroundColor","useOutsideAlerter","alerter","handleClickOutside","current","contains","document","Status","setEditMode","handleClick","statusMy","elementInteractive","noStatus","StatusForm","statusLocal","setStatusLocal","classes","isEditInputStatusForm","setIsEditInputStatusForm","isHiddenCounter","setIsHiddenCounter","setCount","statusEditMode","autoFocus","currentTarget","onFocus","select","onBlur","buttonAndCounter","buttonWrap","disabled","boxShadow","stylesField","countHidden","countYellow","countRed","plug","ProfileStatus","editMode","statusRef","useRef","ref","statusNotMy","Contact","contactTitle","contactValue","contact","contactTextWrap","contactText","href","ProfileData","block","aboutMe","job","lookingForAJob","lookingForAJobDescription","values","contacts","some","el","FieldWithCounter","renderContent","setIsEditInputProfileForm","position","count_color_yellow","count_color_red","RenderTextField","input","onInput","meta","touched","error","warning","custom","InputLabelProps","htmlFor","RenderCheckbox","FieldDataForm","handleInput","handleFocus","handleBlur","Field","component","ProfileDataForm","reduxForm","handleSubmit","initialValues","onSubmit","titleForm","titleAllContacts","titleContact","ProfileInputChangeAvatar","handleChangeAvatar","wrapImg","camera","ScrollToTopOnMount","getElementById","scrollIntoView","ShowSuccessSavePortal","children","createElement","body","createPortal","ProfileInfoContainer","stylesSaveAndCancelButton","fontSize","isEditInputProfileForm","avatarWrap","file","files","marginTop","buttonsSaveAndCancelProfile","submit","successSave","saveProfileThunk","ProfileContainer","this","refreshProfile","prevProps","match","params","authorizedUserID","history","React","PureComponent","connect","withRouter","PreloaderStart","preloaderStart","Logo","logoAndTitle","logo","headerTitleDesktop","headerTitleMobile","ButtonChangeTheme","handleToggleTheme","buttonThemeDesktop","marginRight","buttonThemeMobile","ButtonLogout","handleLogout","buttonLogoutDesktop","buttonLogoutMobile","Header","myID","themeLocal","setThemeLocal","colors","cyan","cyanLight","cyanMedium","cyanDark","darkBlue","darkBlueTransparent","i","setProperty","header","rightColumn","loginAndPhoto","loginName","profilePath","d","chatPath","usersPath","friendsPath","Navbar","useLocation","pages","exact","nav","activeClassName","active","navLink","viewBox","navLinkImg","activeIcon","test","LoginReduxForm","validate","errors","handleEnterTestAccount","stylesLoginButton","fontWeight","stylesTestLoginButton","marginBottom","loginBlockSubstrate","loginBlock","wrapElementForm","autoComplete","wrapCheckbox","Login","ErrorBoundary","setState","whiteSpace","toString","Component","SuspendedChat","lazy","SuspendedUsers","SuspendedFriends","App","fon","appWrapper","appWrapperContent","fallback","from","path","render","createTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","photoTrue","includes","AvatarBody","avatar_size_extraLarge","avatar_size_large","avatar_size_medium","avatar_size_small"],"mappings":"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","file":"static/js/main.0cc1741a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileWall_visuallyHidden__3iLEw\",\"elementInteractive\":\"ProfileWall_elementInteractive__1XkjZ\",\"container\":\"ProfileWall_container__1kdW4\",\"form\":\"ProfileWall_form__17rYB\",\"posts\":\"ProfileWall_posts__3KwJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileInputChangeAvatar_visuallyHidden__2Hea5\",\"elementInteractive\":\"ProfileInputChangeAvatar_elementInteractive__thUU4\",\"container\":\"ProfileInputChangeAvatar_container__3C-kX\",\"wrapImg\":\"ProfileInputChangeAvatar_wrapImg__372fd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__2Avml\",\"container\":\"App_container__3kpCf\",\"appWrapper\":\"App_appWrapper__1cqFv\",\"appWrapperContent\":\"App_appWrapperContent__1OUHu\"};","export default __webpack_public_path__ + \"static/media/preloaderTheme1.81c13cc3.svg\";","export default __webpack_public_path__ + \"static/media/preloaderTheme2.f54b1c2d.svg\";","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport preloaderTheme1 from '../../../img/preloader/preloaderTheme1.svg'\nimport preloaderTheme2 from '../../../img/preloader/preloaderTheme2.svg'\nimport s from './Preloader.module.scss'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\ntype PropsType = {\n  display: 'default' | 'block'\n}\n\nconst Preloader: React.FC<PropsType> = ({ display }) => {\n  const theme = useSelector(getTheme)\n\n  return (\n    <div\n      className={cn(\n        { [s.container_default]: display === 'default' },\n        { [s.container_block]: display === 'block' }\n      )}\n    >\n      <div className={s.wrap}>\n        <img\n          src={theme === 'theme1' ? preloaderTheme1 : preloaderTheme2}\n          alt='preloader'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Preloader\n","export default __webpack_public_path__ + \"static/media/no_photo.3aa74e3c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileAvatarPost_avatar__2U8ug\",\"postSelectedTheme1\":\"ProfileAvatarPost_postSelectedTheme1__2pOhI\",\"postSelectedTheme2\":\"ProfileAvatarPost_postSelectedTheme2__2Tsqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__EUDyG\",\"name_size_small\":\"Name_name_size_small__3-B6v\"};","import cn from 'classnames'\nimport s from './Prompt.module.scss'\n\ntype PathnameType = {\n  pathname: string\n}\n\nconst Prompt = {\n  DeletingProfilePosts: () => {\n    return (\n      <aside className={cn(s.container, s.containerProfile)}>\n        <span className={s.arrow} />\n        <span className={s.text}>\n          Click on the avatar to{' '}\n          <b style={{ color: 'black' }}>delete multiple</b> posts\n        </span>\n      </aside>\n    )\n  },\n\n  SearchUsers: (props: PathnameType) => {\n    const { pathname } = props\n\n    return (\n      <aside className={cn(s.container, s.containerSearch)}>\n        <span className={cn(s.arrow, s.arrowSearch)} />\n        {pathname === '/users' && (\n          <span className={s.text}>\n            Synchronized with <b style={{ color: 'black' }}>url</b>\n          </span>\n        )}\n        {pathname === '/friends' && (\n          <span className={s.text}>\n            Search with <b style={{ color: 'black' }}>debounce</b>\n          </span>\n        )}\n      </aside>\n    )\n  },\n\n  PaginationUsers: (props: PathnameType) => {\n    const { pathname } = props\n\n    return (\n      <aside className={cn(s.container, s.containerPagination)}>\n        <span className={cn(s.arrow, s.arrowPagination)} />\n        {pathname === '/users' && (\n          <span className={s.text}>\n            Pagination{' '}\n            <b style={{ color: 'black' }}>at the click of a button</b>\n          </span>\n        )}\n        {pathname === '/friends' && (\n          <span className={s.text}>\n            <b style={{ color: 'black' }}>Dynamic</b> pagination\n          </span>\n        )}\n      </aside>\n    )\n  },\n}\n\nexport default Prompt\n","import React, { memo } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Name.module.scss'\n\ntype PropsType = {\n  id: number | undefined\n  name: string | undefined\n  size: 'small' | 'normal'\n}\n\nconst Name: React.FC<PropsType> = ({ id, name, size = 'normal' }) => {\n  return (\n    <span>\n      <NavLink\n        className={cn(s.name, { [s.name_size_small]: size === 'small' })}\n        to={`/profile/${id || '/login'}`}\n        replace\n      >\n        {name || 'no name'}\n      </NavLink>\n    </span>\n  )\n}\n\nexport default memo(Name)\n","import { UserType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype GetUsersType = {\n  items: Array<UserType>\n  totalCount: number\n  error: string\n}\n\nconst usersAPI = {\n  async getUsers(\n    currentPage = 1,\n    pageSize: number,\n    term?: string,\n    friend?: boolean\n  ) {\n    const response = await instance.get<GetUsersType>(\n      `users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`\n    )\n    return response.data\n  },\n  async followUser(id: number) {\n    const response = await instance.post<DefaultResponseType>(\n      `follow/${id}`,\n      {}\n    )\n    return response.data\n  },\n  async unfollowUser(id: number) {\n    const response = await instance.delete<DefaultResponseType>(`follow/${id}`)\n    return response.data\n  },\n}\n\nexport default usersAPI\n","import { Dispatch } from 'redux'\nimport { DefaultResponseType, ResultCodesEnum } from '../../api/api'\nimport usersAPI from '../../api/users-api'\nimport { UserType } from '../../types/types'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nconst initialState = {\n  users: [] as Array<UserType>,\n\n  pageSize: 10,\n  totalUsersCount: 0,\n\n  isFetching: true,\n  // disabling the button after pressing\n  followingInProgress: [] as Array<number>, // array of users ID\n}\n\nconst usersReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'sn/users/FOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: true }\n          }\n          return u\n        }),\n      }\n    }\n    case 'sn/users/UNFOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: false }\n          }\n          return u\n        }),\n      }\n    }\n    case 'sn/users/SET_USERS': {\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    }\n    case 'sn/users/ADD_USERS': {\n      return {\n        ...state,\n        users: [...state.users, ...action.users],\n      }\n    }\n    case 'sn/users/CLEAR_USERS': {\n      return {\n        ...state,\n        users: [],\n      }\n    }\n    case 'sn/users/SET_TOTAL_USERS_COUNT': {\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      }\n    }\n    case 'sn/users/TOGGLE_IS_FETCHING': {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n    }\n    case 'sn/users/TOGGLE_IS_FOLLOWING_PROGRESS': {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userID]\n          : state.followingInProgress.filter((id) => id !== action.userID),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  followSuccess: (userID: number) =>\n    ({ type: 'sn/users/FOLLOW', userID } as const),\n  unfollowSuccess: (userID: number) =>\n    ({ type: 'sn/users/UNFOLLOW', userID } as const),\n\n  setUsers: (users: Array<UserType>) =>\n    ({ type: 'sn/users/SET_USERS', users } as const),\n  addUsers: (users: Array<UserType>) =>\n    ({ type: 'sn/users/ADD_USERS', users } as const),\n  setTotalUsersCount: (totalUsersCount: number) =>\n    ({\n      type: 'sn/users/SET_TOTAL_USERS_COUNT',\n      count: totalUsersCount,\n    } as const),\n  clearUsers: () => ({ type: 'sn/users/CLEAR_USERS' } as const),\n\n  toggleIsFetching: (isFetching: boolean) =>\n    ({ type: 'sn/users/TOGGLE_IS_FETCHING', isFetching } as const),\n  toggleFollowingProgress: (isFetching: boolean, userID: number) =>\n    ({\n      type: 'sn/users/TOGGLE_IS_FOLLOWING_PROGRESS',\n      isFetching,\n      userID,\n    } as const),\n}\n\nexport const getUsers =\n  (page: number, term: string, friend?: boolean): ThunkType =>\n  async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true))\n\n    const response = await usersAPI.getUsers(\n      page,\n      getState().usersPage.pageSize,\n      term,\n      friend\n    )\n\n    // primary download\n    if (term.length === 0 && page === 1) {\n      dispatch(actions.setUsers(response.items))\n    }\n    // get more users\n    if (page > 1) {\n      dispatch(actions.addUsers(response.items))\n    }\n    // primary search\n    if (term.length > 0 && page === 1) {\n      dispatch(actions.clearUsers())\n      dispatch(actions.setUsers(response.items))\n    }\n\n    dispatch(actions.setTotalUsersCount(response.totalCount))\n    dispatch(actions.toggleIsFetching(false))\n  }\n\ntype DispatchType = Dispatch<ActionsTypes>\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  id: number,\n  apiMethod: (id: number) => Promise<DefaultResponseType>,\n  actionCreator: (id: number) => ActionsTypes\n) => {\n  dispatch(actions.toggleFollowingProgress(true, id))\n  const response = await apiMethod(id)\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actionCreator(id))\n  }\n  dispatch(actions.toggleFollowingProgress(false, id))\n}\n\nexport const follow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.followUser.bind(usersAPI),\n      actions.followSuccess\n    )\n  }\n\nexport const unfollow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.unfollowUser.bind(usersAPI),\n      actions.unfollowSuccess\n    )\n  }\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import React, { memo } from 'react'\nimport s from './NoElement.module.scss'\n\ntype PropsType = {\n  elements: string\n  writeSomething: boolean\n}\n\nconst NoElement: React.FC<PropsType> = ({ elements, writeSomething }) => {\n  return (\n    <div className={s.container}>\n      <span>{`No ${elements} ${elements === 'users' ? 'found' : ''}`}</span>\n      {writeSomething && <span>Write something!</span>}\n    </div>\n  )\n}\n\nexport default memo(NoElement)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { getIsAuth } from '../redux/selectors/auth-selectors'\n\n// WCP = WrappedComponentProps\nexport default function withAuthRedirect<WCP>(\n  WrappedComponent: React.ComponentType<WCP>\n) {\n  const RedirectComponent: React.FC = (props) => {\n    const isAuth = useSelector(getIsAuth)\n\n    if (!isAuth) {\n      return <Redirect to='/login' />\n    }\n\n    return <WrappedComponent {...(props as WCP)} />\n  }\n\n  return RedirectComponent\n}\n","import axios from 'axios'\n\nexport const instance = axios.create({\n  withCredentials: true, // attach a cookie to the request\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': process.env.REACT_APP_API_KEY,\n  },\n})\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n  CaptchaIsRequired = 10,\n}\n\nexport type DefaultResponseType<D = never, RC = ResultCodesEnum> = {\n  data: D\n  resultCode: RC\n  messages: Array<string> | string\n}\n","import { ChatMessageAPIType, StatusWSType } from '../types/types'\n\nlet ws: WebSocket | null = null\n\nconst subscribers = {\n  'messages-received': [] as Array<MessagesReceivedSubscriberType>,\n  'status-changed': [] as Array<StatusChangedSubscriberType>,\n}\n\nconst notifySubscribersAboutStatus = (status: StatusWSType) => {\n  subscribers['status-changed'].forEach((s) => s(status))\n}\n\nconst reconnect = () => {\n  notifySubscribersAboutStatus('pending')\n  setTimeout(createChannel, 3000)\n}\n\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e.data)\n  subscribers['messages-received'].forEach((s) => s(newMessages))\n}\n\nconst openHandler = () => {\n  notifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n  notifySubscribersAboutStatus('error')\n}\n\nconst cleanUp = () => {\n  ws?.removeEventListener('close', reconnect)\n  ws?.removeEventListener('message', messageHandler)\n  ws?.removeEventListener('open', openHandler)\n  ws?.removeEventListener('error', errorHandler)\n}\n\nconst createChannel = () => {\n  cleanUp()\n  ws?.close()\n\n  ws = new WebSocket(\n    'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n  )\n\n  notifySubscribersAboutStatus('pending')\n\n  ws.addEventListener('close', reconnect)\n  ws.addEventListener('message', messageHandler)\n  ws.addEventListener('open', openHandler)\n  ws.addEventListener('error', errorHandler)\n}\n\nconst chatAPI = {\n  start() {\n    createChannel()\n  },\n\n  stop() {\n    subscribers['messages-received'] = []\n    subscribers['status-changed'] = []\n\n    cleanUp()\n    ws?.close()\n  },\n\n  subscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    // @ts-ignore\n    subscribers[eventName].push(callback)\n  },\n\n  sendMessage(message: string) {\n    ws?.send(message)\n  },\n}\n\ntype EventsCustomNamesType = 'messages-received' | 'status-changed'\n\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\ntype StatusChangedSubscriberType = (status: StatusWSType) => void\n\nexport default chatAPI\n","import { FormAction } from 'redux-form'\nimport { v1 } from 'uuid'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nimport chatAPI from '../../api/chat-api'\n\nimport {\n  ChatMessageAPIType,\n  ChatMessageType,\n  StatusWSType,\n} from '../../types/types'\n\nconst initialState = {\n  messages: [] as ChatMessageType[],\n  statusWS: 'pending' as StatusWSType,\n}\n\nconst chatReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'sn/chat/MESSAGES_RECEIVED': {\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          ...action.payload.messages.map((m) => ({ ...m, id: v1() })),\n        ].filter((item, index, array) => index >= array.length - 100),\n        // TODO v1() = impure function call\n      }\n    }\n    case 'sn/chat/MESSAGES_CLEARED': {\n      return {\n        ...state,\n        messages: [],\n      }\n    }\n    case 'sn/chat/STATUS_CHANGED': {\n      return {\n        ...state,\n        statusWS: action.payload.statusWS,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  messagesReceived: (messages: ChatMessageAPIType[]) =>\n    ({\n      type: 'sn/chat/MESSAGES_RECEIVED',\n      payload: { messages },\n    } as const),\n  messagesCleared: () =>\n    ({\n      type: 'sn/chat/MESSAGES_CLEARED',\n    } as const),\n  statusChanged: (statusWS: StatusWSType) =>\n    ({\n      type: 'sn/chat/STATUS_CHANGED',\n      payload: { statusWS },\n    } as const),\n}\n\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.start()\n\n  chatAPI.subscribe('messages-received', (messages: ChatMessageAPIType[]) =>\n    dispatch(actions.messagesReceived(messages))\n  )\n  chatAPI.subscribe('status-changed', (statusWS: StatusWSType) =>\n    dispatch(actions.statusChanged(statusWS))\n  )\n}\n\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.stop()\n  dispatch(actions.messagesCleared())\n}\n\nexport const sendMessage = (message: string): ThunkType => {\n  return async () => {\n    chatAPI.sendMessage(message)\n  }\n}\n\nexport default chatReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoElement_container__kqBdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"RenderTextField_error__1byTe\"};","import { AppStateType } from '../redux-store'\n\nexport const getInitialized = (state: AppStateType) => state.app.initialized\n\nexport const getTheme = (state: AppStateType) => state.app.theme\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileData_container__1mTJ8\",\"block\":\"ProfileData_block__NKfSg\",\"aboutMe\":\"ProfileData_aboutMe__P2lzC\",\"job\":\"ProfileData_job__2Xsrz\",\"contacts\":\"ProfileData_contacts__3Ofnk\",\"title\":\"ProfileData_title__2vA5a\",\"text\":\"ProfileData_text__3l1Mc\",\"contact\":\"ProfileData_contact__2lXgR\",\"contactTitle\":\"ProfileData_contactTitle__3S8nu\",\"contactTextWrap\":\"ProfileData_contactTextWrap__2UriX\",\"contactText\":\"ProfileData_contactText__L91HK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Prompt_container__1ET_T\",\"containerProfile\":\"Prompt_containerProfile__1bdiF\",\"containerSearch\":\"Prompt_containerSearch__3NoaH\",\"containerPagination\":\"Prompt_containerPagination__3mOJK\",\"arrow\":\"Prompt_arrow__1QUWk\",\"arrowSearch\":\"Prompt_arrowSearch__7-CO9\",\"arrowPagination\":\"Prompt_arrowPagination__3vT4L\",\"text\":\"Prompt_text__2xRlp\"};","import { AppStateType } from '../redux-store'\n\nexport const getLogin = (state: AppStateType) => state.auth.login\n\nexport const getIsAuth = (state: AppStateType) => state.auth.isAuth\n\nexport const getAuthorizedUserID = (state: AppStateType) => state.auth.userID\n\nexport const getCaptchaURL = (state: AppStateType) => state.auth.captchaURL\n\nexport const getMyPhoto = (state: AppStateType) => state.auth.myPhoto\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"ProfilePost_postContainer__35KIf\",\"post\":\"ProfilePost_post__173rt\",\"postSelected\":\"ProfilePost_postSelected__2xUxR\",\"postContainerDelete\":\"ProfilePost_postContainerDelete__1enbW\",\"holeOut\":\"ProfilePost_holeOut__MiND7\",\"columnLeft\":\"ProfilePost_columnLeft__1Pvhx\",\"columnCenter\":\"ProfilePost_columnCenter__2puM0\",\"message\":\"ProfilePost_message__2SAIT\",\"columnRight\":\"ProfilePost_columnRight__pR4nD\",\"plugColumnRight\":\"ProfilePost_plugColumnRight__3N3NI\",\"wrapLike\":\"ProfilePost_wrapLike__2wFEi\",\"likesCount\":\"ProfilePost_likesCount__3DSIF\",\"like\":\"ProfilePost_like__vBOBH\",\"noLike\":\"ProfilePost_noLike__1dzSj\"};","import {\n  DefaultResponseType,\n  instance,\n  ResultCodeForCaptcha,\n  ResultCodesEnum,\n} from './api'\n\ntype MeDataType = {\n  id: number\n  email: string\n  login: string\n}\n\nconst authAPI = {\n  async me() {\n    const response = await instance.get<DefaultResponseType<MeDataType>>(\n      'auth/me'\n    )\n    return response.data\n  },\n  async login(\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: null | string = null\n  ) {\n    const response = await instance.post<\n      DefaultResponseType<\n        { userId: number },\n        ResultCodesEnum | ResultCodeForCaptcha\n      >\n    >('/auth/login', {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    })\n    return response.data\n  },\n  async logout() {\n    const response = await instance.delete<DefaultResponseType>('/auth/login')\n    return response.data\n  },\n}\n\nexport default authAPI\n","import { PhotosType, ProfileType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype SavePhotoDataType = {\n  photos: PhotosType\n}\n\nconst profileAPI = {\n  async getProfile(id: number | null) {\n    const response = await instance.get<ProfileType>(`profile/${id}`)\n    return response.data\n  },\n\n  async getStatus(id: number) {\n    const response = await instance.get<string>(`profile/status/${id}`)\n    return response.data\n  },\n\n  async updateStatus(status: string) {\n    const response = await instance.put<DefaultResponseType>('profile/status', {\n      status,\n    })\n    return response.data\n  },\n\n  async savePhotoAPI(photoFile: File) {\n    const formData = new FormData()\n    formData.append('image', photoFile)\n    const response = await instance.put<DefaultResponseType<SavePhotoDataType>>(\n      'profile/photo',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    )\n    return response.data\n  },\n\n  async saveProfileAPI(profile: ProfileType) {\n    const response = await instance.put<DefaultResponseType>('profile', profile)\n    return response.data\n  },\n}\n\nexport default profileAPI\n","import { instance } from './api'\n\ntype GetCaptchaResponseType = {\n  url: string\n}\n\nconst securityAPI = {\n  async getCaptchaURL() {\n    const response = await instance.get<GetCaptchaResponseType>(\n      'security/get-captcha-url'\n    )\n    return response.data\n  },\n}\n\nexport default securityAPI\n","import { Dispatch } from 'react'\nimport { FormAction, stopSubmit } from 'redux-form'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nimport authAPI from '../../api/auth-api'\nimport profileAPI from '../../api/profile-api'\nimport securityAPI from '../../api/security-api'\nimport { ResultCodesEnum, ResultCodeForCaptcha } from '../../api/api'\n\nconst initialState = {\n  userID: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaURL: null as string | null,\n  myPhoto: null as string | null,\n}\n\nconst authReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'sn/auth/SET_MY_PHOTO':\n    case 'sn/auth/SET_USER_DATA':\n    case 'sn/auth/GET_CAPTCHA_URL_SUCCESS': {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  setAuthUserData: (\n    userID: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n  ) => ({\n    type: 'sn/auth/SET_USER_DATA',\n    payload: {\n      userID,\n      email,\n      login,\n      isAuth,\n    } as const,\n  }),\n\n  setCaptcha: (captchaURL: string | null) => ({\n    type: 'sn/auth/GET_CAPTCHA_URL_SUCCESS',\n    payload: { captchaURL } as const,\n  }),\n\n  setMyPhoto: (myPhoto: string | null) => ({\n    type: 'sn/auth/SET_MY_PHOTO',\n    payload: { myPhoto } as const,\n  }),\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _handleError = (dispatch: Dispatch<FormAction>, response: any) => {\n  if (response.resultCode === ResultCodesEnum.Error) {\n    const message = response.messages\n    const action = stopSubmit('loginForm', {\n      _error: message.length > 0 ? message[0] : 'Some error',\n    })\n    // Some error - if an empty message comes from the server\n    dispatch(action)\n  }\n}\n\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.me()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    const { id, email, login } = response.data\n    dispatch(actions.setAuthUserData(id, email, login, true))\n  }\n\n  _handleError(dispatch, response)\n\n  if (Object.keys(response.data).length !== 0) {\n    const myProfile = await profileAPI.getProfile(response.data.id)\n    dispatch(actions.setMyPhoto(myProfile.photos.large))\n  }\n}\n\nconst setCaptchaThunk = (): ThunkType => async (dispatch) => {\n  const response = await securityAPI.getCaptchaURL()\n  const captcha = response.url\n  dispatch(actions.setCaptcha(captcha))\n}\n\nexport const loginThunk =\n  (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captcha: string | null\n  ): ThunkType =>\n  async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getAuthUserData())\n      dispatch(actions.setCaptcha(null))\n    }\n\n    _handleError(dispatch, response)\n\n    if (response.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\n      dispatch(setCaptchaThunk())\n    }\n  }\n\nexport const logoutThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.logout()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false))\n    dispatch(actions.setMyPhoto(null))\n  }\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { PostType, ProfileType, PhotosType } from '../../types/types'\nimport { ResultCodesEnum } from '../../api/api'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  posts: [\n    {\n      idPost: 1,\n      message:\n        // eslint-disable-next-line max-len\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis ut quo maiores neque laboriosam. Ratione adipisci reiciendis autem placeat alias necessitatibus pariatur saepe ipsum, temporibus animi, facilis minus doloribus ducimus',\n      likesCount: 1,\n      isLikeClick: true,\n    },\n    {\n      idPost: 2,\n      message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n      likesCount: 0,\n      isLikeClick: false,\n    },\n    {\n      idPost: 3,\n      message:\n        // eslint-disable-next-line max-len\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis ut quo maiores neque laboriosam. Ratione adipisci reiciendis autem placeat alias necessitatibus...',\n      likesCount: 0,\n      isLikeClick: false,\n    },\n  ] as Array<PostType>,\n  postsForDelete: [] as Array<number>,\n\n  profile: null as ProfileType | null,\n  status: '',\n  showSuccessSave: '',\n  errorProfileContacts: '',\n  isEditModeProfile: false,\n}\n\nconst profileReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'sn/profile/SET_USER': {\n      return {\n        ...state,\n        profile: action.profile,\n      }\n    }\n    case 'sn/profile/SET_STATUS': {\n      return {\n        ...state,\n        status: action.status,\n      }\n    }\n    case 'sn/profile/INITIALIZE_POSTS': {\n      return {\n        ...state,\n        posts: action.posts,\n      }\n    }\n    case 'sn/profile/ADD_POST': {\n      const newPost = {\n        idPost: Date.now(), // TODO impure function call\n        message: action.newPostText,\n        likesCount: 0,\n        isLikeClick: false,\n      }\n      return {\n        ...state,\n        posts: [newPost, ...state.posts],\n      }\n    }\n    case 'sn/profile/SET_POST_FOR_DELETING': {\n      return {\n        ...state,\n        postsForDelete: [...state.postsForDelete, action.idPost],\n      }\n    }\n    case 'sn/profile/DELETE_POST_FOR_DELETING': {\n      return {\n        ...state,\n        postsForDelete: [\n          ...state.postsForDelete.filter((id) => id !== action.idPost),\n        ],\n      }\n    }\n    case 'sn/profile/CLEAR_POSTS_FOR_DELETING': {\n      return {\n        ...state,\n        postsForDelete: [],\n      }\n    }\n    case 'sn/profile/DELETE_POST': {\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.idPost !== action.idPost),\n      }\n    }\n    case 'sn/profile/SET_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: ++p.likesCount,\n                isLikeClick: true,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'sn/profile/DELETE_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: --p.likesCount,\n                isLikeClick: false,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'sn/profile/SAVE_PHOTO_SUCCESS': {\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\n      }\n    }\n    case 'sn/profile/SHOW_SUCCESS_SAVE': {\n      return {\n        ...state,\n        showSuccessSave: action.message,\n      }\n    }\n    case 'sn/profile/SHOW_ERROR_PROFILE_CONTACTS': {\n      return {\n        ...state,\n        errorProfileContacts: action.message,\n      }\n    }\n    case 'sn/profile/TOGGLE_EDIT_MODE_PROFILE': {\n      return {\n        ...state,\n        isEditModeProfile: action.bool,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializePosts: (posts: Array<PostType>) =>\n    ({ type: 'sn/profile/INITIALIZE_POSTS', posts } as const),\n  // delete one post\n  addPost: (newPostText: string) =>\n    ({ type: 'sn/profile/ADD_POST', newPostText } as const),\n  deletePost: (idPost: number) =>\n    ({ type: 'sn/profile/DELETE_POST', idPost } as const),\n  // delete multiple posts\n  setPostForDeleting: (idPost: number) =>\n    ({ type: 'sn/profile/SET_POST_FOR_DELETING', idPost } as const),\n  deletePostForDeleting: (idPost: number) =>\n    ({ type: 'sn/profile/DELETE_POST_FOR_DELETING', idPost } as const),\n  clearPostsForDeleting: () =>\n    ({ type: 'sn/profile/CLEAR_POSTS_FOR_DELETING' } as const),\n  // like\n  setLikeOnPost: (idPost: number) =>\n    ({ type: 'sn/profile/SET_LIKE_ON_POST', idPost } as const),\n  deleteLikeOnPost: (idPost: number) =>\n    ({ type: 'sn/profile/DELETE_LIKE_ON_POST', idPost } as const),\n\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: 'sn/profile/SET_USER', profile } as const),\n  setStatus: (status: string) =>\n    ({ type: 'sn/profile/SET_STATUS', status } as const),\n  savePhotoSuccess: (photos: PhotosType) =>\n    ({ type: 'sn/profile/SAVE_PHOTO_SUCCESS', photos } as const),\n  showSuccessSaveProfile: (message: string) =>\n    ({ type: 'sn/profile/SHOW_SUCCESS_SAVE', message } as const),\n  showErrorProfileContacts: (message: string) =>\n    ({ type: 'sn/profile/SHOW_ERROR_PROFILE_CONTACTS', message } as const),\n  setEditModeProfile: (bool: boolean) =>\n    ({ type: 'sn/profile/TOGGLE_EDIT_MODE_PROFILE', bool } as const),\n}\n\nexport const getUserProfile =\n  (userId: number | null): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(actions.setUserProfile(response))\n  }\n\nexport const getStatus =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getStatus(id)\n    dispatch(actions.setStatus(response))\n  }\n\nexport const updateStatus =\n  (status: string): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.setStatus(status))\n    }\n  }\n\nexport const savePhotoThunk =\n  (file: File): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.savePhotoAPI(file)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.savePhotoSuccess(response.data.photos))\n    }\n  }\n\nexport const saveProfileThunk =\n  (profile: ProfileType): ThunkType =>\n  async (dispatch, getState) => {\n    const response = await profileAPI.saveProfileAPI(profile)\n    const { userID } = getState().auth\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getUserProfile(userID))\n      dispatch(actions.showSuccessSaveProfile('Data saved successfully!'))\n      setTimeout(dispatch, 4000, actions.showSuccessSaveProfile(''))\n      dispatch(actions.showErrorProfileContacts(''))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      // a template for showing the error of a specific field:\n      // const key = response.data.messages[0]\n      // .match(/Contacts->(\\w+)/)[1].toLowerCase()\n      // dispatch(stopSubmit('editProfile', {\n      //   contacts: { [key]: response.data.messages[0] },\n      // }));\n      dispatch(actions.showErrorProfileContacts(response.messages[0]))\n    }\n  }\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { getAuthUserData } from './auth-reducer'\nimport { ThemeType } from '../../types/types'\n\nconst initialState = {\n  initialized: false,\n  theme: 'theme1' as ThemeType,\n}\n\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'sn/app/INITIALIZED_SUCCESS': {\n      return {\n        ...state,\n        initialized: true,\n      }\n    }\n    case 'sn/app/TOGGLE_THEME': {\n      return {\n        ...state,\n        theme: action.theme,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializedSuccess: () => ({ type: 'sn/app/INITIALIZED_SUCCESS' } as const),\n  setTheme: (theme: ThemeType) =>\n    ({ type: 'sn/app/TOGGLE_THEME', theme } as const),\n}\n\nexport const initializeApp = (): ThunkType => async (dispatch) => {\n  await dispatch(getAuthUserData())\n  dispatch(actions.initializedSuccess())\n}\n\nexport default appReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose,\n  Action,\n} from 'redux'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nimport authReducer from './reducers/auth-reducer'\nimport profileReducer from './reducers/profile-reducer'\nimport usersReducer from './reducers/users-reducer'\nimport appReducer from './reducers/app-reducer'\nimport chatReducer from './reducers/chat-reducer'\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n  chat: chatReducer,\n})\n\n// types state app\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\n// types actions\nexport type InferActionsTypes<T> = T extends {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: (...args: any[]) => infer U\n}\n  ? U\n  : never\n\n// type thunks\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n  R,\n  AppStateType,\n  unknown,\n  A\n>\n\n// @ts-ignore because of Redux DevTools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import React, { SetStateAction, Dispatch } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport { Checkbox, FormControlLabel, IconButton } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CloseIcon from '@material-ui/icons/Close'\nimport cn from 'classnames'\nimport s from './ProfileButtonsPostsDelete.module.scss'\n\nimport { actions } from '../../../../redux/reducers/profile-reducer'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\n\nimport { PostType } from '../../../../types/types'\n\ntype PropsType = {\n  posts: PostType[]\n  postsForDelete: Set<number>\n  isSelectedAllPosts: boolean\n  setIsSelectedAllPosts: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndXAndPrompt: Dispatch<SetStateAction<boolean>>\n  setIsCancelDeletion: Dispatch<SetStateAction<boolean>>\n  setIsShowAnimation: Dispatch<SetStateAction<boolean>>\n}\n\nconst ProfileButtonsPostsDelete: React.FC<PropsType> = (props) => {\n  const {\n    posts,\n    postsForDelete,\n    isSelectedAllPosts,\n    setIsSelectedAllPosts,\n    setIsHiddenAllLikeAndXAndPrompt,\n    setIsCancelDeletion,\n    setIsShowAnimation,\n  } = props\n\n  const stylesButton: React.CSSProperties = {\n    color: 'white',\n    maxWidth: '120px',\n    height: '70%',\n    margin: '10px',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const dispatch = useDispatch()\n  const theme = useSelector(getTheme)\n\n  const handleDeleteSelectedPost = () => {\n    // start delete animation\n    setIsShowAnimation(true)\n\n    setIsSelectedAllPosts(false)\n\n    // return X and likes on all posts\n    setIsHiddenAllLikeAndXAndPrompt(false)\n\n    setTimeout(() => {\n      postsForDelete.forEach((p) => {\n        dispatch(actions.deletePost(p))\n      })\n      dispatch(actions.clearPostsForDeleting())\n\n      // end of delete animation\n      setIsShowAnimation(false)\n    }, 600)\n  }\n\n  const handleCancelDeletion = () => {\n    dispatch(actions.clearPostsForDeleting())\n    setIsCancelDeletion(true)\n    setIsSelectedAllPosts(false)\n  }\n\n  const handleSelectedAllPosts = () => {\n    if (!isSelectedAllPosts) {\n      posts.forEach((post) => {\n        dispatch(actions.setPostForDeleting(post.idPost))\n      })\n      setIsSelectedAllPosts(true)\n    } else {\n      dispatch(actions.clearPostsForDeleting())\n      setIsSelectedAllPosts(false)\n    }\n  }\n\n  return (\n    <div className={s.wrapButtons}>\n      <div\n        hidden={postsForDelete.size === 0}\n        className={cn({ [s.buttons]: postsForDelete.size > 0 })}\n      >\n        <FormControlLabel\n          control={\n            <Checkbox color={theme === 'theme1' ? 'primary' : 'secondary'} />\n          }\n          label='Select all'\n          labelPlacement='end'\n          style={{ marginLeft: '14px' }}\n          checked={isSelectedAllPosts && postsForDelete.size === posts.length}\n          onChange={handleSelectedAllPosts}\n        />\n\n        <div className={s.buttonDesktop}>\n          <Button\n            variant='contained'\n            style={stylesButton}\n            startIcon={<DeleteIcon />}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleDeleteSelectedPost}\n          >\n            Delete\n          </Button>\n        </div>\n        <div hidden className={s.buttonMobile}>\n          <IconButton\n            title='Delete'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleDeleteSelectedPost}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n\n        <div className={s.buttonDesktop}>\n          <Button\n            variant='outlined'\n            style={stylesButton}\n            startIcon={<CloseIcon />}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleCancelDeletion}\n          >\n            Cancel\n          </Button>\n        </div>\n        <div hidden className={s.buttonMobile}>\n          <IconButton\n            title='Cancel'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            onClick={handleCancelDeletion}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileButtonsPostsDelete\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport s from './ProfileAvatarPost.module.scss'\n\nimport { actions } from '../../../../../redux/reducers/profile-reducer'\nimport { getTheme } from '../../../../../redux/selectors/app-selectors'\n\nimport unknown from '../../../../../img/no_photo.svg'\nimport Avatar from '../../../../common/Avatar/Avatar'\n\nimport { ProfileType } from '../../../../../types/types'\n\ntype PropsType = {\n  idPost: number\n  profile: ProfileType | null\n  postsForDelete: Set<number>\n  isSelectedPost: boolean\n  setIsSelectedPost: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndXAndPrompt: Dispatch<SetStateAction<boolean>>\n}\n\nconst ProfileAvatarPost: React.FC<PropsType> = ({\n  idPost,\n  profile,\n  postsForDelete,\n  isSelectedPost,\n  setIsSelectedPost,\n  setIsHiddenAllLikeAndXAndPrompt,\n}) => {\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const handleClickOnAvatar = () => {\n    if (!isSelectedPost) {\n      setIsHiddenAllLikeAndXAndPrompt(true)\n      setIsSelectedPost(true)\n      dispatch(actions.setPostForDeleting(idPost))\n    } else {\n      if (postsForDelete.size === 0) {\n        // do not return all X and likes, if some posts are still selected\n        setIsHiddenAllLikeAndXAndPrompt(false)\n      }\n      setIsSelectedPost(false)\n      dispatch(actions.deletePostForDeleting(idPost))\n    }\n  }\n\n  return (\n    <div\n      aria-hidden='true'\n      onClick={handleClickOnAvatar}\n      className={cn(\n        { [s.avatar]: !isSelectedPost },\n        {\n          [s.postSelectedTheme1]: isSelectedPost && theme === 'theme1',\n        },\n        {\n          [s.postSelectedTheme2]: isSelectedPost && theme === 'theme2',\n        }\n      )}\n    >\n      <Avatar\n        size='medium'\n        id={profile?.userId || null}\n        photo={profile?.photos.large || unknown}\n      />\n    </div>\n  )\n}\n\nexport default ProfileAvatarPost\n","import { AppStateType } from '../redux-store'\n\nexport const getProfile = (state: AppStateType) => state.profilePage.profile\n\nexport const getStatus = (state: AppStateType) => state.profilePage.status\n\nexport const getShowSuccessSave = (state: AppStateType) =>\n  state.profilePage.showSuccessSave\n\nexport const getErrorProfileContacts = (state: AppStateType) =>\n  state.profilePage.errorProfileContacts\n\nexport const getPosts = (state: AppStateType) => state.profilePage.posts\n\nexport const getPostsForDelete = (state: AppStateType) =>\n  new Set(state.profilePage.postsForDelete)\n\nexport const getEditModeProfile = (state: AppStateType) =>\n  state.profilePage.isEditModeProfile\n","import React, {\n  useState,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n  memo,\n  useCallback,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './ProfilePost.module.scss'\n\nimport ProfileAvatarPost from './ProfileAvatarPost/ProfileAvatarPost'\nimport Prompt from '../../../common/Prompt/Prompt'\nimport Name from '../../../common/Name/Name'\n\nimport { getPostsForDelete } from '../../../../redux/selectors/profile-selectors'\nimport { actions } from '../../../../redux/reducers/profile-reducer'\n\nimport { PostType, ProfileType } from '../../../../types/types'\n\ntype PropsType = {\n  post: PostType\n  profile: ProfileType | null\n  idPostFirst: number\n  isShowAnimation: boolean\n  isCancelDeletion: boolean\n  isSelectedAllPosts: boolean\n  isHiddenAllLikeAndXAndPrompt: boolean\n  setIsCancelDeletion: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndXAndPrompt: Dispatch<SetStateAction<boolean>>\n  handleDeleteOnePost: (idPost: number) => void\n}\n\nconst ProfilePost: React.FC<PropsType> = (props) => {\n  const {\n    post: { idPost, message, likesCount, isLikeClick },\n    profile,\n    idPostFirst,\n    isShowAnimation,\n    isCancelDeletion,\n    isSelectedAllPosts,\n    handleDeleteOnePost,\n    setIsCancelDeletion,\n    isHiddenAllLikeAndXAndPrompt,\n    setIsHiddenAllLikeAndXAndPrompt,\n  } = props\n\n  const postsForDelete = useSelector(getPostsForDelete)\n\n  const [isShowPrompt, setIsShowPrompt] = useState(true)\n  const [isSelectedPost, setIsSelectedPost] = useState(false)\n  const [isClickDeletePost, setIsClickDeletePost] = useState(false)\n\n  useEffect(() => {\n    if (isHiddenAllLikeAndXAndPrompt) {\n      setIsShowPrompt(false)\n    }\n  }, [isHiddenAllLikeAndXAndPrompt])\n\n  useEffect(() => {\n    if (isSelectedAllPosts || postsForDelete.has(idPost)) {\n      setIsSelectedPost(true)\n    } else {\n      setIsSelectedPost(false)\n    }\n  }, [isSelectedAllPosts, postsForDelete, idPost])\n\n  useEffect(() => {\n    setIsSelectedPost(false)\n    setIsCancelDeletion(false)\n  }, [isCancelDeletion, setIsCancelDeletion])\n\n  useEffect(() => {\n    if (postsForDelete.size === 0) {\n      // return all X and likes if there are no more selected posts\n      setIsHiddenAllLikeAndXAndPrompt(false)\n    }\n  }, [postsForDelete, setIsHiddenAllLikeAndXAndPrompt])\n\n  return (\n    <article\n      className={cn(s.postContainer, {\n        [s.postContainerDelete]:\n          isClickDeletePost || (isShowAnimation && postsForDelete.has(idPost)),\n      })}\n    >\n      <div className={cn(s.post, { [s.postSelected]: isSelectedPost })}>\n        <div className={s.columnLeft}>\n          <ProfileAvatarPost\n            idPost={idPost}\n            profile={profile}\n            postsForDelete={postsForDelete}\n            isSelectedPost={isSelectedPost}\n            setIsSelectedPost={setIsSelectedPost}\n            setIsHiddenAllLikeAndXAndPrompt={setIsHiddenAllLikeAndXAndPrompt}\n          />\n        </div>\n\n        {idPostFirst === idPost && isShowPrompt && (\n          <Prompt.DeletingProfilePosts />\n        )}\n\n        <div className={s.columnCenter}>\n          <Name id={profile?.userId} name={profile?.fullName} size='normal' />\n          <div className={s.message}>{message}</div>\n        </div>\n\n        {!isHiddenAllLikeAndXAndPrompt ? (\n          <div className={s.columnRight}>\n            <ButtonDeletePost\n              idPost={idPost}\n              handleDeleteOnePost={handleDeleteOnePost}\n              setIsClickDeletePost={setIsClickDeletePost}\n            />\n            <ButtonSetLike\n              idPost={idPost}\n              likesCount={likesCount}\n              isLikeClick={isLikeClick}\n            />\n          </div>\n        ) : (\n          <div className={s.plugColumnRight} />\n        )}\n      </div>\n    </article>\n  )\n}\n\ntype ButtonDeletePostPropsType = {\n  idPost: number\n  handleDeleteOnePost: (idPost: number) => void\n  setIsClickDeletePost: Dispatch<SetStateAction<boolean>>\n}\n\nconst ButtonDeletePost: React.FC<ButtonDeletePostPropsType> = memo(\n  ({ idPost, handleDeleteOnePost, setIsClickDeletePost }) => {\n    const handleDeletePost = useCallback(() => {\n      setIsClickDeletePost(true)\n      setTimeout(() => handleDeleteOnePost(idPost), 300)\n    }, [handleDeleteOnePost, idPost, setIsClickDeletePost])\n\n    return (\n      <IconButton title='Delete post' size='small' onClick={handleDeletePost}>\n        <CloseIcon />\n      </IconButton>\n    )\n  }\n)\n\ntype ButtonSetLikePropsType = Omit<PostType, 'message'>\n\nconst ButtonSetLike: React.FC<ButtonSetLikePropsType> = memo(\n  ({ idPost, likesCount, isLikeClick }) => {\n    const dispatch = useDispatch()\n\n    const handleSetLike = useCallback(() => {\n      if (!isLikeClick) {\n        dispatch(actions.setLikeOnPost(idPost))\n      } else {\n        dispatch(actions.deleteLikeOnPost(idPost))\n      }\n    }, [dispatch, idPost, isLikeClick])\n\n    return (\n      <div className={s.wrapLike}>\n        <span className={s.likesCount}>\n          {likesCount > 0 ? `+${likesCount}` : ''}\n        </span>\n        <IconButton title='Like' size='small' onClick={handleSetLike}>\n          <ThumbUpAltIcon\n            className={cn(s.like, { [s.noLike]: !isLikeClick })}\n          />\n        </IconButton>\n      </div>\n    )\n  }\n)\n\nexport default memo(ProfilePost)\n","import { Dispatch, SetStateAction, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PostType, ThemeType } from '../types/types'\n\ntype ActionPostsType = (posts: Array<PostType>) => {\n  type: string\n  posts: Array<PostType>\n}\n\ntype ActionThemeType = (theme: ThemeType) => {\n  type: string\n  theme: ThemeType\n}\n\nconst useLocalStorage = (\n  key: string,\n  value: string | PostType[],\n  action: ActionPostsType | ActionThemeType,\n  callback?: Dispatch<SetStateAction<ThemeType>>\n) => {\n  const dispatch = useDispatch()\n\n  // reading and applying theme from Local Storage\n  useEffect(() => {\n    let currentValue\n    const currentValueJson = localStorage.getItem(key)\n\n    if (currentValueJson) {\n      currentValue = JSON.parse(currentValueJson)\n    }\n\n    if (currentValue) {\n      dispatch(action(currentValue))\n      if (callback) callback(currentValue)\n    }\n  }, [action, key, callback, dispatch])\n\n  // writing a theme to Local Storage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n}\n\nexport default useLocalStorage\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState, memo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport PostAddIcon from '@material-ui/icons/PostAdd'\nimport { IconButton, TextField } from '@material-ui/core'\nimport s from './ProfileWall.module.scss'\nimport stylesAdaptiveButtons from './ProfileButtonsPostsDelete/ProfileButtonsPostsDelete.module.scss'\n\nimport ProfileButtonsPostsDelete from './ProfileButtonsPostsDelete/ProfileButtonsPostsDelete'\nimport ProfilePost from './ProfilePost/ProfilePost'\nimport NoElement from '../../common/NoElement/NoElement'\nimport useLocalStorage from '../../../hooks/useLocalStorage'\n\nimport {\n  getPosts,\n  getPostsForDelete,\n  getProfile,\n} from '../../../redux/selectors/profile-selectors'\nimport { actions } from '../../../redux/reducers/profile-reducer'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport { PostType } from '../../../types/types'\n\nconst ProfileWall: React.FC = () => {\n  const profile = useSelector(getProfile)\n  const posts = useSelector(getPosts)\n  const postsForDelete = useSelector(getPostsForDelete)\n  const dispatch = useDispatch()\n\n  const [isShowAnimation, setIsShowAnimation] = useState(false)\n  const [isCancelDeletion, setIsCancelDeletion] = useState(false)\n  const [isSelectedAllPosts, setIsSelectedAllPosts] = useState(false)\n  const [isHiddenAllLikeAndXAndPrompt, setIsHiddenAllLikeAndXAndPrompt] =\n    useState(false)\n\n  useLocalStorage('posts', posts, actions.initializePosts)\n\n  const handleDeleteOnePost = useCallback(\n    (idPost: number) => {\n      dispatch(actions.deletePost(idPost))\n    },\n    [dispatch]\n  )\n\n  useEffect(() => {\n    if (postsForDelete.size === posts.length) {\n      setIsSelectedAllPosts(true)\n    } else {\n      setIsSelectedAllPosts(false)\n    }\n  }, [postsForDelete.size, posts.length])\n\n  const postsElements = posts.map((p: PostType) => (\n    <ProfilePost\n      key={p.idPost}\n      post={{\n        idPost: p.idPost,\n        message: p.message,\n        likesCount: p.likesCount,\n        isLikeClick: p.isLikeClick,\n      }}\n      idPostFirst={posts[0].idPost}\n      profile={profile}\n      isSelectedAllPosts={isSelectedAllPosts}\n      isHiddenAllLikeAndXAndPrompt={isHiddenAllLikeAndXAndPrompt}\n      setIsHiddenAllLikeAndXAndPrompt={setIsHiddenAllLikeAndXAndPrompt}\n      isShowAnimation={isShowAnimation}\n      isCancelDeletion={isCancelDeletion}\n      setIsCancelDeletion={setIsCancelDeletion}\n      handleDeleteOnePost={handleDeleteOnePost}\n    />\n  ))\n\n  return (\n    <section className={s.container}>\n      <h1 className={s.visuallyHidden}>Profile wall</h1>\n\n      <ProfileButtonsPostsDelete\n        posts={posts}\n        postsForDelete={postsForDelete}\n        isSelectedAllPosts={isSelectedAllPosts}\n        setIsSelectedAllPosts={setIsSelectedAllPosts}\n        setIsHiddenAllLikeAndXAndPrompt={setIsHiddenAllLikeAndXAndPrompt}\n        setIsCancelDeletion={setIsCancelDeletion}\n        setIsShowAnimation={setIsShowAnimation}\n      />\n\n      {postsForDelete.size === 0 && <AddPostForm />}\n\n      <div className={s.posts}>\n        {postsElements}\n\n        {!posts.length && <NoElement elements='posts' writeSomething />}\n      </div>\n    </section>\n  )\n}\n\nconst AddPostForm: React.FC = memo(() => {\n  const stylesAddPostButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: '10px 0 10px 10px',\n    width: '140px',\n  }\n\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [value, setValue] = useState('')\n\n  const handleAddPost = () => {\n    if (!value.trim()) {\n      return\n    }\n    dispatch(actions.addPost(value))\n    setValue('')\n  }\n\n  const handleChangeTextField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className={s.form}>\n      <TextField\n        name='newPostText'\n        placeholder='Enter the post text...'\n        multiline\n        fullWidth\n        variant='outlined'\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        inputProps={{ maxLength: 1000, value }}\n        onChange={handleChangeTextField}\n      />\n      <div className={stylesAdaptiveButtons.buttonDesktop}>\n        <Button\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={stylesAddPostButton}\n          endIcon={<PostAddIcon />}\n          onClick={handleAddPost}\n        >\n          Add post\n        </Button>\n      </div>\n      <div hidden className={stylesAdaptiveButtons.buttonMobile}>\n        <IconButton\n          title='Add post'\n          aria-label='Add post'\n          style={{ marginLeft: 5 }}\n          onClick={handleAddPost}\n        >\n          <PostAddIcon color={theme === 'theme1' ? 'primary' : 'secondary'} />\n        </IconButton>\n      </div>\n    </div>\n  )\n})\n\nexport default memo(ProfileWall)\n","import React from 'react'\nimport s from './ProfilePlug.module.scss'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfilePlug: React.FC<PropsType> = ({ isOwner }) => {\n  return (\n    <div className={s.container}>\n      <div className={s.columnLeft}>\n        <div className={s.avatar} />\n        {isOwner && <div className={s.button} />}\n      </div>\n\n      <div className={s.columnRight}>\n        <div className={s.nameWrap}>\n          <div className={s.name} />\n        </div>\n\n        <div className={s.status} />\n\n        <div className={s.titleOne} />\n        <div className={s.text} />\n        <div className={s.titleTwo} />\n        <div className={s.text} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfilePlug\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    borderRadius: '5px 5px 0 0',\n    padding: theme.spacing(1),\n    minHeight: '30px',\n    lineHeight: '25px',\n    backgroundColor: '#4f4f4f',\n  },\n}))\n\nexport default useStyles\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\n\nconst useOutsideAlerter = (\n  alerter: React.RefObject<HTMLDivElement>,\n  action: Dispatch<SetStateAction<boolean>>\n) => {\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (\n        alerter.current &&\n        !alerter.current.contains(e.target as HTMLInputElement)\n      ) {\n        action(false)\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [alerter, action])\n}\n\nexport default useOutsideAlerter\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, TextField } from '@material-ui/core'\nimport SaveIcon from '@material-ui/icons/Save'\nimport cn from 'classnames'\nimport s from './ProfileStatus.module.scss'\nimport stylesField from '../../../common/FieldWithCounter/FieldWithCounter.module.scss'\nimport useStyles from './stylesCustomMaterialUI'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\n\nimport useOutsideAlerter from '../../../../hooks/useOutsideAlerter'\nimport { getStatus } from '../../../../redux/selectors/profile-selectors'\nimport { updateStatus } from '../../../../redux/reducers/profile-reducer'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileStatus = ({ isOwner }: PropsType) => {\n  const status = useSelector(getStatus)\n\n  const [editMode, setEditMode] = useState(false)\n  const [statusLocal, setStatusLocal] = useState(status)\n\n  useEffect(() => {\n    setStatusLocal(status)\n  }, [status])\n\n  const statusRef = useRef<HTMLDivElement | null>(null)\n  useOutsideAlerter(statusRef, setEditMode)\n\n  return (\n    <div ref={statusRef} className={s.container}>\n      {isOwner && !editMode && (\n        <Status status={status} setEditMode={setEditMode} />\n      )}\n\n      {!isOwner && status && <div className={s.statusNotMy}>{status}</div>}\n\n      {editMode && (\n        <StatusForm\n          statusLocal={statusLocal}\n          setStatusLocal={setStatusLocal}\n          setEditMode={setEditMode}\n        />\n      )}\n    </div>\n  )\n}\n\ntype StatusPropsType = {\n  status: string\n  setEditMode: Dispatch<SetStateAction<boolean>>\n}\n\nconst Status: React.FC<StatusPropsType> = ({ status, setEditMode }) => {\n  const handleClick = () => {\n    setEditMode(true)\n  }\n\n  return (\n    // outer div and input for keyboard operation\n    <div title='Change status' aria-hidden='true' onChange={handleClick}>\n      <input className={s.visuallyHidden} aria-label='Change status profile' />\n      <div\n        aria-hidden='true'\n        className={cn(s.statusMy, s.elementInteractive)}\n        onClick={handleClick}\n      >\n        {status || <span className={s.noStatus}>Your status is empty</span>}\n      </div>\n    </div>\n  )\n}\n\ntype StatusFormPropsType = {\n  statusLocal: string\n  setStatusLocal: Dispatch<SetStateAction<string>>\n  setEditMode: Dispatch<SetStateAction<boolean>>\n}\n\nconst StatusForm: React.FC<StatusFormPropsType> = ({\n  statusLocal,\n  setStatusLocal,\n  setEditMode,\n}) => {\n  const classes = useStyles()\n\n  const stylesSaveAndButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    boxShadow: '2px 2px 5px var(--color-darkBlueTransparent)',\n    margin: 10,\n    width: '100%',\n  }\n\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [isEditInputStatusForm, setIsEditInputStatusForm] = useState(false)\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleFocusInput = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n\n  const handleBlurInput = () => {\n    setIsHiddenCounter(true)\n  }\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value.length)\n    setIsEditInputStatusForm(true)\n    setStatusLocal(e.currentTarget.value)\n  }\n\n  const handleSaveStatus = () => {\n    dispatch(updateStatus(statusLocal))\n    setIsEditInputStatusForm(false)\n    setEditMode(false)\n  }\n\n  return (\n    <>\n      <div className={s.statusEditMode}>\n        <TextField\n          autoFocus\n          multiline\n          fullWidth\n          name='newStatusText'\n          placeholder='Your status...'\n          inputProps={{ maxLength: 300 }}\n          className={classes.status}\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          value={statusLocal}\n          onChange={handleChangeInput}\n          onFocus={handleFocusInput}\n          onBlur={handleBlurInput}\n        />\n\n        <div className={s.buttonAndCounter}>\n          <div className={s.buttonWrap}>\n            <Button\n              onClick={handleSaveStatus}\n              disabled={!isEditInputStatusForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              style={stylesSaveAndButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </div>\n\n          <span\n            className={cn(\n              stylesField.count,\n              { [stylesField.countHidden]: isHiddenCounter },\n              { [stylesField.countYellow]: count >= 290 },\n              { [stylesField.countRed]: count === 300 }\n            )}\n          >\n            {count} of 300\n          </span>\n        </div>\n      </div>\n      <div className={s.plug} />\n    </>\n  )\n}\n\nexport default ProfileStatus\n","import React, { memo } from 'react'\nimport { ProfileType, СontactsType } from '../../../../types/types'\nimport s from './ProfileData.module.scss'\n\ntype PropsType = {\n  profile: ProfileType\n}\n\nconst ProfileData: React.FC<PropsType> = ({ profile }) => (\n  <div className={s.container}>\n    <div className={s.block}>\n      {profile.aboutMe && (\n        <div className={s.aboutMe}>\n          <div className={s.title}>About me:</div>\n          <div className={s.text}>{profile.aboutMe}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.block}>\n      <div className={s.job}>\n        <div className={s.title}>Job search:</div>\n        {profile.lookingForAJob ? (\n          <div className={s.text}>Now looking for a job!</div>\n        ) : (\n          <div className={s.text}>I&#39;m not looking for a job</div>\n        )}\n      </div>\n    </div>\n\n    <div className={s.block}>\n      {profile.lookingForAJobDescription && (\n        <div className={s.job}>\n          <div className={s.title}>Professional skills:</div>\n          <div className={s.text}>{profile.lookingForAJobDescription}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.block}>\n      {Object.values(profile.contacts).some((el) => el && el !== '') && (\n        <div className={s.contacts}>\n          <div className={s.title}>My contacts</div>\n          {Object.keys(profile.contacts).map((key) => (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key as keyof СontactsType]}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n)\n\ntype ContactPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\nconst Contact: React.FC<ContactPropsType> = memo(\n  ({ contactTitle, contactValue }) => (\n    <>\n      {contactValue && (\n        <div className={s.contact}>\n          <span className={s.contactTitle}>{contactTitle}:</span>\n          <div className={s.contactTextWrap}>\n            <a className={s.contactText} href={contactValue}>\n              {contactValue.replace(/(?:https?):\\/\\/([^/\\s]+)[^\\s]*/gi, '$1')}\n            </a>\n          </div>\n        </div>\n      )}\n    </>\n  )\n)\n\nexport default ProfileData\n","import { useState } from 'react'\n\nimport cn from 'classnames'\nimport s from './FieldWithCounter.module.scss'\n\ntype PropsType = {\n  renderContent: (\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    handleFocus: (e: React.FocusEvent<HTMLInputElement>) => void,\n    handleBlur: () => void\n  ) => JSX.Element\n  maxLength: number\n  setIsEditInputProfileForm: (bool: boolean) => void\n}\n\nconst FieldWithCounter: React.FC<PropsType> = (props) => {\n  const { maxLength, renderContent, setIsEditInputProfileForm } = props\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsEditInputProfileForm(true)\n    setCount(e.target.value.length)\n  }\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n  const handleBlur = () => {\n    setIsHiddenCounter(true)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {renderContent(handleInput, handleFocus, handleBlur)}\n\n      <span\n        className={cn(\n          s.count,\n          { [s.countHidden]: isHiddenCounter },\n          { [s.count_color_yellow]: count >= maxLength - 10 },\n          { [s.count_color_red]: count === maxLength }\n        )}\n      >\n        {count} of {maxLength}\n      </span>\n    </div>\n  )\n}\n\nexport default FieldWithCounter\n","import { useSelector } from 'react-redux'\nimport { TextField } from '@material-ui/core'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport s from './RenderTextField.module.scss'\n\nconst RenderTextField = (props) => {\n  const {\n    label,\n    input,\n    placeholder,\n    multiline,\n    variant,\n    inputProps,\n    onInput,\n    onFocus,\n    meta: { touched, error, warning },\n    fullWidth,\n    ...custom\n  } = props\n\n  const theme = useSelector(getTheme)\n\n  return (\n    <>\n      <TextField\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        label={label}\n        InputLabelProps={{ htmlFor: label }}\n        inputProps={{ ...inputProps, id: label }}\n        onInput={onInput}\n        onFocus={onFocus}\n        variant={variant}\n        multiline={multiline}\n        fullWidth={fullWidth}\n        placeholder={placeholder}\n        {...input}\n        {...custom}\n      />\n      {touched &&\n        ((error && <span className={s.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </>\n  )\n}\n\nexport default RenderTextField\n","import { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nconst RenderCheckbox = ({ input, label }) => {\n  const theme = useSelector(getTheme)\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={!!input.value}\n            onChange={input.onChange}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={{ marginLeft: 5, padding: 6 }}\n          />\n        }\n        label={label}\n        labelPlacement='start'\n        style={{ marginLeft: 0 }}\n      />\n    </div>\n  )\n}\n\nexport default RenderCheckbox\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport FieldWithCounter from '../../../common/FieldWithCounter/FieldWithCounter'\nimport RenderTextField from '../../../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../../../common/RenderFormElement/RenderCheckbox'\nimport s from './ProfileDataForm.module.scss'\n\nimport { ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  initialValues: ProfileType\n  errorProfileContacts: string\n  setIsEditInputProfileForm: Dispatch<SetStateAction<boolean>>\n}\n\nconst Form: React.FC<\n  InjectedFormProps<ProfileType, OwnPropsType> & OwnPropsType\n> = (props) => {\n  const {\n    handleSubmit,\n    initialValues,\n    errorProfileContacts,\n    setIsEditInputProfileForm,\n  } = props\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h1 className={s.titleForm}>Edit profile</h1>\n\n      <FieldDataForm\n        label='Name:'\n        name='fullName'\n        placeholder='Your name'\n        maxLength={100}\n        multiline='false'\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n\n      <FieldDataForm\n        label='About me:'\n        name='aboutMe'\n        placeholder='Write about yourself!'\n        maxLength={1000}\n        multiline='true'\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n\n      <div className={s.block}>\n        <Field\n          component={RenderCheckbox}\n          onChange={() => {\n            setIsEditInputProfileForm(true)\n          }}\n          name='lookingForAJob'\n          label='Are you looking for a job?'\n        />\n      </div>\n\n      <FieldDataForm\n        label='Professional skills:'\n        name='lookingForAJobDescription'\n        placeholder='What you can do?'\n        maxLength={1000}\n        multiline='true'\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n\n      <address className={s.block}>\n        <div className={s.titleAllContacts}>Contacts:</div>\n\n        {errorProfileContacts ? (\n          <div className={s.errorProfileContacts}>{errorProfileContacts}</div>\n        ) : (\n          <></>\n        )}\n\n        {Object.keys(initialValues.contacts).map((key) => (\n          <div className={s.contact} key={key}>\n            <div className={s.titleContact}>{key}:</div>\n\n            <Field\n              component={RenderTextField}\n              onInput={() => setIsEditInputProfileForm(true)}\n              name={`contacts.${key}`}\n              placeholder='https://...'\n              multiline\n              fullWidth\n            />\n          </div>\n        ))}\n      </address>\n    </form>\n  )\n}\n\ntype FieldDataFormPropsType = {\n  label: string\n  name: string\n  placeholder: string\n  maxLength: number\n  multiline: 'true' | 'false'\n  setIsEditInputProfileForm: Dispatch<SetStateAction<boolean>>\n}\n\nconst FieldDataForm: React.FC<FieldDataFormPropsType> = (props) => {\n  const {\n    label,\n    name,\n    placeholder,\n    maxLength,\n    multiline,\n    setIsEditInputProfileForm,\n  } = props\n\n  return (\n    <div className={s.block}>\n      <FieldWithCounter\n        renderContent={(handleInput, handleFocus, handleBlur) => (\n          <Field\n            component={RenderTextField}\n            label={label}\n            name={name}\n            placeholder={placeholder}\n            inputProps={{ maxLength }}\n            multiline={multiline === 'true'}\n            fullWidth\n            variant='filled'\n            onInput={handleInput}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n          />\n        )}\n        maxLength={maxLength}\n        setIsEditInputProfileForm={setIsEditInputProfileForm}\n      />\n    </div>\n  )\n}\n\nconst ProfileDataForm = reduxForm<ProfileType, OwnPropsType>({\n  form: 'editProfile',\n})(Form)\n\nexport default ProfileDataForm\n","export default __webpack_public_path__ + \"static/media/camera.b8f081b1.svg\";","import React from 'react'\n\nimport cn from 'classnames'\nimport s from './ProfileInputChangeAvatar.module.scss'\nimport camera from '../../../../img/icons/camera.svg'\n\ntype PropsType = {\n  isOwner: boolean\n  isEditModeProfile: boolean\n  handleChangeAvatar: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst ProfileInputChangeAvatar: React.FC<PropsType> = ({\n  isOwner,\n  isEditModeProfile,\n  handleChangeAvatar,\n}) => (\n  <>\n    {isOwner && !isEditModeProfile && (\n      <div className={s.container} title='Change avatar'>\n        <label htmlFor='file_out'>\n          <input\n            type='file'\n            id='file_out'\n            className={s.visuallyHidden}\n            onChange={handleChangeAvatar}\n          />\n          <span\n            className={cn(s.wrapImg, s.elementInteractive)}\n            style={{ borderRadius: '50%' }}\n          >\n            <img src={camera} alt='change avatar' />\n          </span>\n        </label>\n      </div>\n    )}\n  </>\n)\n\nexport default ProfileInputChangeAvatar\n","import React, { useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { submit } from 'redux-form'\n\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './ProfileInfoContainer.module.scss'\n\nimport Avatar from '../../common/Avatar/Avatar'\nimport Preloader from '../../common/Preloader/Preloader'\nimport ProfilePlug from './ProfilePlug/ProfilePlug'\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\nimport ProfileData from './ProfileData/ProfileData'\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\nimport ProfileInputChangeAvatar from './ProfileInputChangeAvatar/ProfileInputChangeAvatar'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\nimport {\n  getEditModeProfile,\n  getErrorProfileContacts,\n  getProfile,\n  getShowSuccessSave,\n} from '../../../redux/selectors/profile-selectors'\nimport {\n  actions,\n  savePhotoThunk,\n  saveProfileThunk,\n} from '../../../redux/reducers/profile-reducer'\n\nimport { ProfileType } from '../../../types/types'\n\n// when going to the profile page, scroll up to the name\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    const fullName = document.getElementById('scrollToTopOnMount')\n    fullName?.scrollIntoView(false)\n  }, [])\n  return null\n}\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileInfoContainer: React.FC<PropsType> = ({ isOwner }) => {\n  const stylesSaveAndCancelButton: React.CSSProperties = {\n    fontSize: 12,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: 10,\n  }\n\n  const stylesEditButton: React.CSSProperties = {\n    fontSize: 12,\n    marginTop: 20,\n  }\n\n  // for ProfileInfoDataForm\n  const errorProfileContacts = useSelector(getErrorProfileContacts)\n\n  const theme = useSelector(getTheme)\n  const profile = useSelector(getProfile)\n  const showSuccessSave = useSelector(getShowSuccessSave)\n  const isEditModeProfile = useSelector(getEditModeProfile)\n  const dispatch = useDispatch()\n\n  const [isEditInputProfileForm, setIsEditInputProfileForm] = useState(false)\n\n  const onSubmitProfile = (values: ProfileType) => {\n    dispatch(saveProfileThunk(values))\n  }\n\n  const handleChangeAvatar = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      dispatch(savePhotoThunk(e.target.files[0]))\n    }\n  }\n\n  const handleEditProfile = () => {\n    dispatch(actions.setEditModeProfile(true))\n  }\n\n  const handleSaveProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(submit('editProfile'))\n  }\n\n  const handleCancelProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(actions.setEditModeProfile(false))\n  }\n\n  if (!profile) {\n    return (\n      <>\n        <Preloader display='default' />\n        <ProfilePlug isOwner={isOwner} />\n      </>\n    )\n  }\n\n  return (\n    <section className={s.container}>\n      <h1 className={s.visuallyHidden}>Profile information</h1>\n      <div className={s.columnLeft}>\n        <div className={s.avatarWrap}>\n          <Avatar photo={profile.photos.large} size='extra-large' id={null} />\n          <ProfileInputChangeAvatar\n            isOwner={isOwner}\n            isEditModeProfile={isEditModeProfile}\n            handleChangeAvatar={handleChangeAvatar}\n          />\n        </div>\n\n        {isOwner && !isEditModeProfile && (\n          <Button\n            onClick={handleEditProfile}\n            variant='outlined'\n            style={stylesEditButton}\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\n          >\n            Edit profile\n          </Button>\n        )}\n\n        {isEditModeProfile && (\n          <div className={s.buttonsSaveAndCancelProfile}>\n            <Button\n              onClick={handleSaveProfile}\n              disabled={!isEditInputProfileForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n            <Button\n              onClick={handleCancelProfile}\n              variant='outlined'\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<CloseIcon />}\n            >\n              Cancel\n            </Button>\n          </div>\n        )}\n\n        {isEditModeProfile && showSuccessSave && (\n          <ShowSuccessSavePortal>\n            <div className={s.successSave}>{showSuccessSave}</div>\n          </ShowSuccessSavePortal>\n        )}\n      </div>\n\n      <div className={s.columnRight}>\n        {!isEditModeProfile && (\n          <div id='scrollToTopOnMount' className={s.fullName}>\n            {profile.fullName}\n          </div>\n        )}\n\n        {!isEditModeProfile && <ProfileStatus isOwner={isOwner} />}\n\n        {isEditModeProfile ? (\n          <ProfileDataForm\n            initialValues={profile}\n            onSubmit={onSubmitProfile}\n            errorProfileContacts={errorProfileContacts}\n            setIsEditInputProfileForm={setIsEditInputProfileForm}\n          />\n        ) : (\n          <ProfileData profile={profile} />\n        )}\n      </div>\n\n      {/* when you go to the profile page, the scroll will be reset */}\n      <ScrollToTopOnMount />\n    </section>\n  )\n}\n\nconst ShowSuccessSavePortal = ({ children }: { children: React.ReactNode }) => {\n  const el: HTMLDivElement = document.createElement('div')\n  document.body.append(el)\n\n  return createPortal(children, el)\n}\n\nexport default ProfileInfoContainer\n","import React from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport ProfileWall from './ProfileWall/ProfileWall'\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\n\nimport { getEditModeProfile } from '../../redux/selectors/profile-selectors'\nimport { AppStateType } from '../../redux/redux-store'\nimport {\n  getUserProfile,\n  getStatus,\n  actions,\n} from '../../redux/reducers/profile-reducer'\n\ntype MapStatePropsType = {\n  authorizedUserID: number | null\n  isEditModeProfile: boolean\n}\n\ntype MapDispatchPropsType = {\n  getUserProfile: (userId: number) => void\n  getStatus: (userId: number) => void\n  setEditModeProfile: (bool: boolean) => void\n}\n\ntype PathParamsType = {\n  userId: string\n}\n\ntype PropsType = MapStatePropsType &\n  MapDispatchPropsType &\n  RouteComponentProps<PathParamsType>\n\nclass ProfileContainer extends React.PureComponent<PropsType> {\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: PropsType) {\n    const { match } = this.props\n    // render when switching from one page to another\n    if (match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  componentWillUnmount() {\n    const { isEditModeProfile, setEditModeProfile } = this.props\n    if (isEditModeProfile) {\n      setEditModeProfile(false)\n    }\n  }\n\n  refreshProfile() {\n    // getUserProfile and getStatus are already declared in the upper scope\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { match, authorizedUserID, history, getUserProfile, getStatus } =\n      this.props\n    let userId: number | null = +match.params.userId\n\n    if (!userId) {\n      userId = authorizedUserID\n      if (!userId) {\n        history.push('/login')\n      }\n    }\n\n    getUserProfile(userId as number)\n    getStatus(userId as number)\n  }\n\n  render(): React.ReactElement<PropsType> {\n    const { match, authorizedUserID, isEditModeProfile } = this.props\n    const isOwner = +match.params.userId === authorizedUserID\n\n    return (\n      <main>\n        <ProfileInfoContainer isOwner={isOwner} />\n        {!isEditModeProfile && isOwner && <ProfileWall />}\n      </main>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    authorizedUserID: state.auth.userID,\n    isEditModeProfile: getEditModeProfile(state),\n  }\n}\n\nexport default compose<React.ComponentType>(\n  connect<\n    MapStatePropsType,\n    MapDispatchPropsType,\n    RouteComponentProps<PathParamsType>,\n    AppStateType\n  >(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    setEditModeProfile: actions.setEditModeProfile,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n","export default __webpack_public_path__ + \"static/media/preloaderStart.a6528613.svg\";","import React from 'react'\nimport preloaderStart from '../../../img/preloader/preloaderStart.svg'\nimport s from './Preloader.module.scss'\n\nconst PreloaderStart: React.FC = () => {\n  return (\n    <div className={s.container}>\n      <div className={s.wrap}>\n        <img src={preloaderStart} alt='preloader' />\n      </div>\n    </div>\n  )\n}\n\nexport default PreloaderStart\n","export default __webpack_public_path__ + \"static/media/logo.15f621b4.svg\";","import React, { useEffect, useState, memo, useCallback } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport InvertColorsIcon from '@material-ui/icons/InvertColors'\nimport { IconButton } from '@material-ui/core'\nimport s from './Header.module.scss'\nimport logo from '../../img/icons/logo.svg'\n\nimport Avatar from '../common/Avatar/Avatar'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nimport {\n  getAuthorizedUserID,\n  getIsAuth,\n  getLogin,\n  getMyPhoto,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { logoutThunk } from '../../redux/reducers/auth-reducer'\nimport { actions } from '../../redux/reducers/app-reducer'\n\nimport { ThemeType } from '../../types/types'\n\nconst Header: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const login = useSelector(getLogin)\n  const myID = useSelector(getAuthorizedUserID)\n  const myPhoto = useSelector(getMyPhoto)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [themeLocal, setThemeLocal] = useState(theme as ThemeType)\n\n  useEffect(() => {\n    const colors = {\n      cyan: `var(--color-cyan-${themeLocal})`,\n      cyanLight: `var(--color-cyanLight-${themeLocal})`,\n      cyanMedium: `var(--color-cyanMedium-${themeLocal})`,\n      cyanDark: `var(--color-cyanDark-${themeLocal})`,\n      darkBlue: `var(--color-darkBlue-${themeLocal})`,\n      darkBlueTransparent: `var(--color-darkBlueTransparent-${themeLocal})`,\n    }\n\n    const keys = Object.keys(colors)\n    const values = Object.values(colors)\n\n    for (let i = 0; i < keys.length; i++) {\n      document.body.style.setProperty(`--color-${keys[i]}`, values[i])\n    }\n  }, [theme, themeLocal])\n\n  useLocalStorage('theme', theme, actions.setTheme, setThemeLocal)\n\n  const handleToggleTheme = useCallback(() => {\n    dispatch(actions.setTheme(themeLocal === 'theme1' ? 'theme2' : 'theme1'))\n    setThemeLocal(themeLocal === 'theme1' ? 'theme2' : 'theme1')\n  }, [dispatch, themeLocal])\n\n  const handleLogout = useCallback(() => {\n    dispatch(logoutThunk())\n  }, [dispatch])\n\n  return (\n    <header className={s.header}>\n      <Logo />\n      <div className={s.rightColumn}>\n        {isAuth ? (\n          <>\n            <div className={s.loginAndPhoto}>\n              <Avatar photo={myPhoto} size='small' id={myID} />\n              <span className={s.loginName}>{login}</span>\n            </div>\n            <ButtonChangeTheme\n              theme={theme}\n              handleToggleTheme={handleToggleTheme}\n            />\n            <ButtonLogout handleLogout={handleLogout} />\n          </>\n        ) : (\n          <ButtonChangeTheme\n            theme={theme}\n            handleToggleTheme={handleToggleTheme}\n          />\n        )}\n      </div>\n    </header>\n  )\n}\n\nconst Logo: React.FC = memo(() => (\n  <NavLink className={s.logoAndTitle} to='/profile'>\n    <img src={logo} alt='logo' />\n    <span className={s.headerTitleDesktop}>Social network</span>\n    <span hidden className={s.headerTitleMobile}>\n      SN\n    </span>\n  </NavLink>\n))\n\ntype ButtonChangeThemePropsType = {\n  theme: ThemeType\n  handleToggleTheme: () => void\n}\n\nconst ButtonChangeTheme: React.FC<ButtonChangeThemePropsType> = ({\n  theme,\n  handleToggleTheme,\n}) => (\n  <>\n    <span className={s.buttonThemeDesktop}>\n      <Button\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        style={{ padding: '6px 12px', marginRight: '12px' }}\n        onClick={handleToggleTheme}\n        startIcon={<InvertColorsIcon />}\n      >\n        Change theme\n      </Button>\n    </span>\n\n    <span hidden className={s.buttonThemeMobile}>\n      <IconButton\n        onClick={handleToggleTheme}\n        aria-label='changeTheme'\n        style={{ margin: '0 12px' }}\n        title='Change theme'\n      >\n        <InvertColorsIcon\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n        />\n      </IconButton>\n    </span>\n  </>\n)\n\nconst ButtonLogout: React.FC<{ handleLogout: () => void }> = memo(\n  ({ handleLogout }) => (\n    <>\n      <span className={s.buttonLogoutDesktop}>\n        <Button\n          onClick={handleLogout}\n          variant='outlined'\n          style={{ marginRight: '12px' }}\n          startIcon={<ExitToAppIcon />}\n        >\n          Log out\n        </Button>\n      </span>\n      <span hidden className={s.buttonLogoutMobile}>\n        <IconButton title='Logout of profile' onClick={handleLogout}>\n          <ExitToAppIcon />\n        </IconButton>\n      </span>\n    </>\n  )\n)\n\nexport default Header\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NavLink, useLocation } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Navbar.module.scss'\nimport { getAuthorizedUserID } from '../../redux/selectors/auth-selectors'\n\nconst Navbar: React.FC = () => {\n  const authorizedUserID = useSelector(getAuthorizedUserID)\n  const { pathname } = useLocation()\n\n  const profileUrl = `/profile/${authorizedUserID}`\n\n  const pages = [\n    { id: 1, name: 'Profile', to: profileUrl, exact: true },\n    { id: 2, name: 'Chat', to: '/chat', exact: false },\n    { id: 3, name: 'Find Users', to: '/users', exact: false },\n    { id: 4, name: 'Friends', to: '/friends', exact: false },\n  ]\n\n  type PageType = {\n    id: number\n    name: string\n    to: string\n    exact: boolean\n  }\n\n  return (\n    <nav className={s.nav}>\n      <ul>\n        {pages.map((p: PageType) => (\n          <li key={p.id}>\n            <NavLink\n              exact={p.exact}\n              to={p.to}\n              activeClassName={s.active}\n              className={s.navLink}\n              replace\n            >\n              <svg\n                width='24'\n                height='24'\n                viewBox='0 0 24 24'\n                className={cn(s.navLinkImg, {\n                  [s.activeIcon]: pathname === p.to,\n                })}\n              >\n                {/\\/profile*/.test(p.to)\n                  ? profilePath\n                  : p.to === '/chat'\n                  ? chatPath\n                  : p.to === '/users'\n                  ? usersPath\n                  : friendsPath}\n              </svg>\n              {p.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n\nconst profilePath = (\n  <path d='M12 4a4 4 0 014 4 4 4 0 01-4 4 4 4 0 01-4-4 4 4 0 014-4m0 10c4.42 0 8 1.79 8 4v2H4v-2c0-2.21 3.58-4 8-4z' />\n)\n\nconst chatPath = (\n  <path d='M20 2H4a2 2 0 00-2 2v18l4-4h14a2 2 0 002-2V4a2 2 0 00-2-2z' />\n)\n\nconst usersPath = (\n  <path d='M15.5 12a4.48 4.48 0 013.81 6.9l3.08 3.1L21 23.39l-3.12-3.07A4.5 4.5 0 1115.5 12m0 2a2.5 2.5 0 00-2.5 2.5 2.5 2.5 0 002.5 2.5 2.5 2.5 0 002.5-2.5 2.5 2.5 0 00-2.5-2.5M10 4a4 4 0 014 4c0 .91-.31 1.75-.82 2.43-.86.32-1.63.83-2.27 1.47L10 12a4 4 0 01-4-4 4 4 0 014-4M2 20v-2c0-2.12 3.31-3.86 7.5-4a6.56 6.56 0 00.5 6H2z' />\n)\n\nconst friendsPath = (\n  <path d='M12 5.5A3.5 3.5 0 0115.5 9a3.5 3.5 0 01-3.5 3.5A3.5 3.5 0 018.5 9 3.5 3.5 0 0112 5.5M5 8c.56 0 1.08.15 1.53.42a5.54 5.54 0 001.13 3.96A3 3 0 015 14a3 3 0 01-3-3 3 3 0 013-3m14 0a3 3 0 013 3 3 3 0 01-3 3 3 3 0 01-2.66-1.62 5.54 5.54 0 001.13-3.96c.45-.27.97-.42 1.53-.42M5.5 18.25c0-2.07 2.91-3.75 6.5-3.75s6.5 1.68 6.5 3.75V20h-13v-1.75M0 20v-1.5c0-1.39 1.89-2.56 4.45-2.9a4.04 4.04 0 00-.95 2.65V20H0m24 0h-3.5v-1.75c0-1.03-.36-1.97-.95-2.65 2.56.34 4.45 1.51 4.45 2.9V20z' />\n)\n\nexport default Navbar\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport cn from 'classnames'\nimport Button from '@material-ui/core/Button'\nimport s from './Login.module.scss'\nimport RenderTextField from '../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../common/RenderFormElement/RenderCheckbox'\n\nimport {\n  getAuthorizedUserID,\n  getCaptchaURL,\n  getIsAuth,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { loginThunk } from '../../redux/reducers/auth-reducer'\n\nconst validate = (values: LoginFormValuesType) => {\n  type ErrorsType = {\n    email?: string\n    password?: string\n    captcha?: string\n  }\n\n  const errors: ErrorsType = {}\n\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n\n  return errors\n}\n\ntype OwnPropsType = {\n  captchaURL: string | null\n  handleEnterTestAccount: () => void\n}\n\ntype LoginFormValuesType = {\n  email: string\n  password: string\n  rememberMe: boolean\n  captcha: string\n}\n\nconst Login: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const captchaURL = useSelector(getCaptchaURL)\n  const userID = useSelector(getAuthorizedUserID)\n  const dispatch = useDispatch()\n\n  const onSubmit = (values: LoginFormValuesType) => {\n    dispatch(\n      loginThunk(\n        values.email,\n        values.password,\n        values.rememberMe,\n        values.captcha\n      )\n    )\n  }\n\n  const handleEnterTestAccount = () => {\n    const email = 'free@samuraijs.com'\n    const password = 'free'\n    dispatch(loginThunk(email, password, false, null))\n  }\n\n  if (isAuth) {\n    return <Redirect to={`/profile/${userID}`} />\n  }\n\n  return (\n    <main className={s.container}>\n      <div className={s.body}>\n        <h1>Log in</h1>\n        <LoginReduxForm\n          onSubmit={onSubmit}\n          captchaURL={captchaURL}\n          handleEnterTestAccount={handleEnterTestAccount}\n        />\n      </div>\n    </main>\n  )\n}\n\nconst LoginForm: React.FC<\n  InjectedFormProps<LoginFormValuesType, OwnPropsType> & OwnPropsType\n> = ({ handleSubmit, handleEnterTestAccount, error, captchaURL }) => {\n  const stylesLoginButton: React.CSSProperties = {\n    fontSize: 16,\n    fontWeight: 700,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const stylesTestLoginButton: React.CSSProperties = {\n    marginBottom: '15px',\n    ...stylesLoginButton,\n  }\n\n  const theme = useSelector(getTheme)\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.loginBlockSubstrate}>\n        <div className={s.loginBlock}>\n          <div className={s.wrapElementForm}>\n            <Field\n              component={RenderTextField}\n              autoComplete='username'\n              name='email'\n              label='Email:'\n              type='email'\n              fullWidth\n            />\n          </div>\n          <div className={s.wrapElementForm}>\n            <Field\n              component={RenderTextField}\n              autoComplete='current-password'\n              name='password'\n              label='Password:'\n              type='password'\n              fullWidth\n            />\n          </div>\n          <div className={cn(s.wrapElementForm, s.wrapCheckbox)}>\n            <Field\n              component={RenderCheckbox}\n              name='rememberMe'\n              label='Remember me'\n            />\n          </div>\n\n          {captchaURL && <img src={captchaURL} alt='captcha' />}\n          {captchaURL && (\n            <Field component={RenderTextField} fullWidth name='captcha' />\n          )}\n\n          <div className={s.wrapElementForm}>\n            <Button\n              type='submit'\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesLoginButton}\n            >\n              Log in\n            </Button>\n\n            {error && (\n              <article className={s.error}>\n                {error === 'You are not authorized' ? (\n                  <>\n                    <p>1. You are either not authorized</p>\n                    <p>or</p>\n                    <p>\n                      2. Please, unblock third party cookies or show all cookies\n                      or add an exception for <br />\n                      <u>ignatov-ru.github.io</u>\n                      <br /> to resolve (see browser settings)\n                    </p>\n                  </>\n                ) : (\n                  error\n                )}\n              </article>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <p>or</p>\n\n      <Button\n        onClick={handleEnterTestAccount}\n        variant='contained'\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        fullWidth\n        style={stylesTestLoginButton}\n      >\n        Login to test account\n      </Button>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, OwnPropsType>({\n  form: 'loginForm',\n  validate,\n})(LoginForm)\n\nexport default Login\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error })\n  }\n\n  render() {\n    const { error } = this.state\n    const { children } = this.props\n\n    if (error) {\n      return (\n        <div>\n          <h2>Something went wrong</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error?.toString()}\n          </details>\n        </div>\n      )\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useEffect, lazy, Suspense } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport PreloaderStart from './components/common/Preloader/PreloaderStart'\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Login from './components/Login/Login'\nimport ErrorBoundary from './components/Error/ErrorBoundary'\nimport Preloader from './components/common/Preloader/Preloader'\n\nimport s from './App.module.scss'\n\nimport { getInitialized } from './redux/selectors/app-selectors'\nimport { getAuthorizedUserID } from './redux/selectors/auth-selectors'\nimport { initializeApp } from './redux/reducers/app-reducer'\n\nconst SuspendedChat = lazy(() => import('./components/Chat/Chat'))\nconst SuspendedUsers = lazy(() => import('./components/Users/UsersContainer'))\nconst SuspendedFriends = lazy(\n  () => import('./components/Friends/FriendsContainer')\n)\n\nconst App: React.FC = () => {\n  const userID = useSelector(getAuthorizedUserID)\n  const initialized = useSelector(getInitialized)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeApp())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <PreloaderStart />\n  }\n\n  return (\n    <div className={s.fon}>\n      <div className={s.container}>\n        <div className={s.appWrapper}>\n          <Header />\n          <Navbar />\n\n          <div className={s.appWrapperContent}>\n            <ErrorBoundary>\n              <Suspense fallback={<Preloader display='default' />}>\n                <Switch>\n                  <Redirect from='/profile/undefined' to='/' />\n\n                  <Route\n                    path='/profile/:userId'\n                    render={() => <ProfileContainer />}\n                  />\n\n                  <Route path='/chat' render={() => <SuspendedChat />} />\n\n                  <Route path='/friends' render={() => <SuspendedFriends />} />\n\n                  <Route path='/users' render={() => <SuspendedUsers />} />\n\n                  <Route path='/login' render={() => <Login />} />\n\n                  <Redirect exact from='/' to={`/profile/${userID}`} />\n\n                  <Redirect from='*' to='/' />\n                </Switch>\n              </Suspense>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './styles/theme.css'\nimport {\n  createTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport store from './redux/redux-store'\nimport App from './App'\n\nlet theme = createTheme({\n  palette: {\n    type: 'dark',\n    // color of main buttons, active links in navigation,\n    // decorative lines, borders for forms elements\n    primary: {\n      main: '#00bcd4',\n      // 1st theme, blue\n    },\n    secondary: {\n      main: '#00d482',\n      // 2nd theme, green\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfilePlug_container__cLnav\",\"columnLeft\":\"ProfilePlug_columnLeft__1gWkq\",\"columnRight\":\"ProfilePlug_columnRight__P0_mc\",\"avatar\":\"ProfilePlug_avatar__3yJf0\",\"button\":\"ProfilePlug_button__LIaZ-\",\"name\":\"ProfilePlug_name__2MG01\",\"status\":\"ProfilePlug_status__2siOn\",\"titleOne\":\"ProfilePlug_titleOne__2E1qB\",\"titleTwo\":\"ProfilePlug_titleTwo__2gCQJ\",\"text\":\"ProfilePlug_text__2tnH5\",\"nameWrap\":\"ProfilePlug_nameWrap__3YLnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kFdy\",\"logoAndTitle\":\"Header_logoAndTitle__E1gOe\",\"headerTitleDesktop\":\"Header_headerTitleDesktop__3of0u\",\"headerTitleMobile\":\"Header_headerTitleMobile__3ZA7x\",\"rightColumn\":\"Header_rightColumn__2gu4E\",\"loginAndPhoto\":\"Header_loginAndPhoto__1azBA\",\"loginName\":\"Header_loginName__ncEXR\",\"buttonThemeDesktop\":\"Header_buttonThemeDesktop__1I4yL\",\"buttonThemeMobile\":\"Header_buttonThemeMobile__1i4f9\",\"buttonLogoutDesktop\":\"Header_buttonLogoutDesktop__1gRK-\",\"buttonLogoutMobile\":\"Header_buttonLogoutMobile__1W2MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileStatus_visuallyHidden__1nXln\",\"elementInteractive\":\"ProfileStatus_elementInteractive__3yog2\",\"container\":\"ProfileStatus_container__1RUzu\",\"statusEditMode\":\"ProfileStatus_statusEditMode__1PtHr\",\"buttonAndCounter\":\"ProfileStatus_buttonAndCounter__2uC-t\",\"buttonWrap\":\"ProfileStatus_buttonWrap__3HwQn\",\"plug\":\"ProfileStatus_plug__2_kyo\",\"statusMy\":\"ProfileStatus_statusMy__2__BM\",\"statusNotMy\":\"ProfileStatus_statusNotMy__1Qrk6\",\"noStatus\":\"ProfileStatus_noStatus__3Ja75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__23Xy-\",\"body\":\"Login_body__3DOsP\",\"loginBlockSubstrate\":\"Login_loginBlockSubstrate__3-IH5\",\"loginBlock\":\"Login_loginBlock__3-8mF\",\"wrapElementForm\":\"Login_wrapElementForm__11_XC\",\"wrapCheckbox\":\"Login_wrapCheckbox__C4FCE\",\"error\":\"Login_error__1DcN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapButtons\":\"ProfileButtonsPostsDelete_wrapButtons__2-ERZ\",\"buttons\":\"ProfileButtonsPostsDelete_buttons__3WrB1\",\"buttonDesktop\":\"ProfileButtonsPostsDelete_buttonDesktop__O-AW9\",\"buttonMobile\":\"ProfileButtonsPostsDelete_buttonMobile__LIpeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"FieldWithCounter_count__Cu5UD\",\"countHidden\":\"FieldWithCounter_countHidden__3sFUY\",\"count_color_yellow\":\"FieldWithCounter_count_color_yellow__ijYFI\",\"count_color_red\":\"FieldWithCounter_count_color_red__M5buP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__24NFR\",\"titleForm\":\"ProfileDataForm_titleForm__3NgXn\",\"block\":\"ProfileDataForm_block__2FUGy\",\"contact\":\"ProfileDataForm_contact__3xnPU\",\"titleAllContacts\":\"ProfileDataForm_titleAllContacts__1pG4g\",\"titleContact\":\"ProfileDataForm_titleContact__9Q8x2\",\"errorProfileContacts\":\"ProfileDataForm_errorProfileContacts__1btuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visuallyHidden\":\"ProfileInfoContainer_visuallyHidden__12Qr0\",\"elementInteractive\":\"ProfileInfoContainer_elementInteractive__BG73l\",\"container\":\"ProfileInfoContainer_container__3dIts\",\"columnLeft\":\"ProfileInfoContainer_columnLeft__9aSjt\",\"avatarWrap\":\"ProfileInfoContainer_avatarWrap__17uae\",\"columnRight\":\"ProfileInfoContainer_columnRight__1Q7wM\",\"iconButtonEditProfile\":\"ProfileInfoContainer_iconButtonEditProfile__34g6O\",\"fullName\":\"ProfileInfoContainer_fullName__2YZse\",\"buttonsSaveAndCancelProfile\":\"ProfileInfoContainer_buttonsSaveAndCancelProfile__DIbSX\",\"successSave\":\"ProfileInfoContainer_successSave__GV6TG\",\"anim\":\"ProfileInfoContainer_anim__25xiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_default\":\"Preloader_container_default__YqKY9\",\"container_block\":\"Preloader_container_block__20vZD\",\"wrap\":\"Preloader_wrap__1YoGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__3_fhn\",\"avatar_size_small\":\"Avatar_avatar_size_small__2TmTd\",\"avatar_size_medium\":\"Avatar_avatar_size_medium__2War4\",\"avatar_size_large\":\"Avatar_avatar_size_large__2RH6p\",\"avatar_size_extraLarge\":\"Avatar_avatar_size_extraLarge__-L17j\"};","import React, { memo } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport unknown from '../../../img/no_photo.svg'\nimport s from './Avatar.module.scss'\n\ntype PropsType = {\n  photo: string | null\n  size: 'small' | 'medium' | 'large' | 'extra-large'\n}\n\ntype OwnPropsType = {\n  id: number | null\n}\n\nconst Avatar: React.FC<PropsType & OwnPropsType> = ({ photo, size, id }) => {\n  // Проверка тестового аккаунта с id = 1079:\n  // установленное фото на тестовый аккаунт удаляется через короткое время\n  // на сервере и, если с этого аккаунта написано сообщение в чат, то\n  // при отрисовке этого сообщения (с удалённым фото) в ответ приходит\n  // ошибка вместо null | undefined, вскоре сервер опять присылает null\n  // вместо фото, но это происходит не сразу. Для этого случая эта проверка\n  let photoTrue\n  if (photo?.includes('1079')) {\n    photoTrue = null\n  } else {\n    photoTrue = photo\n  }\n\n  return (\n    <>\n      {id ? (\n        <NavLink to={`/profile/${id}`} replace>\n          <AvatarBody photo={photoTrue} size={size} />\n        </NavLink>\n      ) : (\n        <AvatarBody photo={photoTrue} size={size} />\n      )}\n    </>\n  )\n}\n\nconst AvatarBody: React.FC<PropsType> = ({ photo, size }) => {\n  return (\n    <div className={s.avatarWrap}>\n      <div\n        className={cn(\n          s.avatar,\n          { [s.avatar_size_extraLarge]: size === 'extra-large' },\n          { [s.avatar_size_large]: size === 'large' },\n          { [s.avatar_size_medium]: size === 'medium' },\n          { [s.avatar_size_small]: size === 'small' }\n        )}\n      >\n        <img src={photo || unknown} alt='avatar' />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Avatar)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__33PA9\",\"navLink\":\"Navbar_navLink__18rsh\",\"navLinkImg\":\"Navbar_navLinkImg__214ti\",\"active\":\"Navbar_active__2U-iw\",\"activeIcon\":\"Navbar_activeIcon__3-qcm\"};"],"sourceRoot":""}