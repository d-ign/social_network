{"version":3,"sources":["../node_modules/@material-ui/icons/ExpandMore.js","redux/users-selectors.ts","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","getUsersSelector","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","Users","props","useState","page","setPage","className","s","wrapper","Search","onPageChanged","pageNumber","term","getFoundUsers","nothingFound","container","length","foundUsers","map","u","user","User","id","photo","photos","small","name","status","followed","unfollow","follow","authorizedUserID","buttonLoadMore","IconButton","aria-label","onClick","UsersContainer","getUsers","setCurrentPage","this","clearUsers","Preloader","Component","compose","connect","auth","userID","actions","withAuthRedirect"],"mappings":"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","file":"static/js/4.bf2f38f5.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import { AppStateType } from \"./redux-store\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n  return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize\r\n}; \r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching\r\n}; \r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress\r\n};","import React, { useState } from 'react';\r\n\r\nimport User from './User/User';\r\nimport Search from './Search/Search';\r\n\r\nimport s from './Users.module.css';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { UserType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n  isFetching: boolean\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  authorizedUserID: number | null\r\n  followingInProgress: Array<number>\r\n  users: Array<UserType>\r\n  foundUsers: Array<UserType>\r\n  getFoundUsers: (pageNumber: number, pageSize: number, term: string) => void\r\n  onPageChanged: (pageNumber: number, value: string) => void\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n  let [page, setPage] = useState(1);\r\n\r\n  const searchUsers = (pageNumber: number, term: string) => {\r\n    props.getFoundUsers(pageNumber, props.pageSize, term);\r\n  }\r\n\r\n  const check = () => {\r\n    if (props.users.length > 0) {\r\n      return props.users\r\n    } else {\r\n      return props.foundUsers\r\n    }\r\n  }\r\n\r\n  return <div className={s.wrapper}>\r\n    <Search\r\n      onPageChanged={searchUsers}\r\n      totalUsersCount={props.totalUsersCount}\r\n    />\r\n\r\n    {\r\n      props.totalUsersCount === 0 && !props.isFetching &&\r\n      <div className={s.nothingFound}>Nothing found</div>\r\n    }\r\n\r\n    <div className={s.container}>\r\n      {check().map(u =>\r\n        <div key={u.id} className={s.user}>\r\n          <User\r\n            id={u.id}\r\n            photo={u.photos.small}\r\n            name={u.name}\r\n            status={u.status}\r\n            followed={u.followed}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            followingInProgress={props.followingInProgress}\r\n            authorizedUserID={props.authorizedUserID}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {<div className={s.buttonLoadMore}>\r\n        <IconButton\r\n          aria-label=\"load more users\"\r\n          onClick={() => {\r\n            setPage(++page);\r\n            props.onPageChanged(page, '');\r\n          }}\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </div>\r\n      }\r\n\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { actions } from '../../redux/reducers/users-reducer';\r\nimport { follow, unfollow, getUsers, getFoundUsers } from '../../redux/reducers/users-reducer';\r\nimport {\r\n  getUsersSelector, getPageSize, getTotalUsersCount,\r\n  getCurrentPage, getIsFetching, getFollowingInProgress\r\n} from '../../redux/users-selectors';\r\n\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { UserType } from '../../types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n  currentPage: number\r\n  pageSize: number\r\n  isFetching: boolean\r\n  totalUsersCount: number\r\n  followingInProgress: Array<number>\r\n  authorizedUserID: number | null\r\n  users: Array<UserType>\r\n  foundUsers: Array<UserType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getUsers: (currentPage: number, pageSize: number, term: string) => void\r\n  getFoundUsers: (pageNumber: number, pageSize: number, term: string) => void\r\n  setCurrentPage: (pageNumber: number) => void\r\n  unfollow: (id: number) => void\r\n  follow: (id: number) => void\r\n  clearUsers: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize, '');\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number, term: string) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize, term);\r\n    this.props.setCurrentPage(pageNumber);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearUsers();\r\n    this.props.setCurrentPage(1);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n\r\n      <Users\r\n        users={this.props.users}\r\n        foundUsers={this.props.foundUsers}\r\n        pageSize={this.props.pageSize}\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        isFetching={this.props.isFetching}\r\n        followingInProgress={this.props.followingInProgress}\r\n        authorizedUserID={this.props.authorizedUserID}\r\n\r\n        onPageChanged={this.onPageChanged}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        getFoundUsers={this.props.getFoundUsers}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    foundUsers: state.usersPage.foundUsers,\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    authorizedUserID: state.auth.userID,\r\n  }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect<MapStatePropsType, MapDispatchPropsType, null, AppStateType>(\r\n    mapStateToProps,\r\n    {\r\n      setCurrentPage: actions.setCurrentPage,\r\n      clearUsers: actions.clearUsers,\r\n      follow,\r\n      unfollow,\r\n      getFoundUsers,\r\n      getUsers,\r\n    }\r\n  ),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n"],"sourceRoot":""}