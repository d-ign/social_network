{"version":3,"sources":["App.module.scss","img/preloader/preloaderTheme1.svg","img/preloader/preloaderTheme2.svg","components/common/Preloader/Preloader.tsx","img/no_photo.svg","components/common/Name/Name.module.scss","components/common/Name/Name.tsx","components/common/NoElement/NoElement.tsx","hoc/withAuthRedirect.tsx","api/users-api.ts","redux/reducers/users-reducer.ts","api/api.ts","api/chat-api.ts","redux/reducers/chat-reducer.ts","components/common/NoElement/NoElement.module.scss","components/common/RenderFormElement/RenderTextField.module.scss","components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","redux/selectors/app-selectors.ts","components/Navbar/Navbar.module.scss","components/Profile/ProfileWall/ProfilePost/ProfilePost.module.scss","redux/selectors/auth-selectors.ts","api/auth-api.ts","api/security-api.ts","api/profile-api.ts","redux/reducers/auth-reducer.ts","redux/reducers/profile-reducer.ts","redux/reducers/app-reducer.ts","redux/redux-store.ts","redux/selectors/profile-selectors.ts","components/Profile/ProfileWall/ProfilePost/ProfilePost.tsx","hooks/useLocalStorage.tsx","components/Profile/ProfileWall/ProfileWall.tsx","img/icons/camera.svg","components/Profile/ProfileInfo/ProfilePlug/ProfilePlug.tsx","components/Profile/ProfileInfo/ProfileStatus/stylesCustomMaterialUI.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/common/FieldWithCounter/FieldWithCounter.tsx","components/common/RenderFormElement/RenderTextField.jsx","components/common/RenderFormElement/RenderCheckbox.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfoContainer.tsx","components/Profile/ProfileContainer.tsx","img/preloader/preloaderStart.svg","components/common/Preloader/PreloaderStart.tsx","img/icons/logo.svg","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Error/ErrorBoundary.jsx","hoc/withSuspense.tsx","App.tsx","index.tsx","components/Profile/ProfileInfo/ProfilePlug/ProfilePlug.module.scss","components/Profile/ProfileWall/ProfileWall.module.scss","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","components/Header/Header.module.scss","components/Login/Login.module.scss","components/common/FieldWithCounter/FieldWithCounter.module.scss","components/Profile/ProfileInfo/ProfileInfoContainer.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/common/Preloader/Preloader.module.scss","components/common/Avatar/Avatar.module.scss","components/common/Avatar/Avatar.tsx"],"names":["module","exports","Preloader","display","theme","useSelector","getTheme","className","cn","s","container_default","container_block","wrap","src","preloaderTheme1","preloaderTheme2","alt","Name","id","name","size","name__small","to","replace","NoElement","elements","writeSomething","container","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","usersAPI","getUsers","currentPage","pageSize","term","friend","instance","get","response","data","followUser","post","unfollowUser","delete","initialState","users","totalUsersCount","isFetching","followingInProgress","actions","followSuccess","userID","type","unfollowSuccess","setUsers","addUsers","setTotalUsersCount","count","clearUsers","toggleIsFetching","toggleFollowingProgress","page","dispatch","getState","a","usersPage","length","items","totalCount","_followUnfollowFlow","apiMethod","actionCreator","resultCode","ResultCodesEnum","Success","follow","bind","unfollow","usersReducer","action","map","u","followed","filter","ResultCodeForCaptcha","axios","create","withCredentials","baseURL","headers","ws","subscribers","notifySubscribersAboutStatus","status","forEach","reconnect","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","start","stop","subscribe","eventName","callback","push","sendMessage","message","send","messages","statusWS","payload","startMessagesListening","stopMessagesListening","chatReducer","m","v1","item","index","array","getInitialized","app","initialized","getLogin","login","getIsAuth","getAuthorizedUserID","getCaptchaURL","captchaURL","getMyPhoto","myPhoto","authAPI","me","email","password","rememberMe","captcha","logout","securityAPI","profileAPI","getProfile","getStatus","updateStatus","put","savePhotoAPI","photoFile","formData","FormData","append","saveProfileAPI","profile","photo","getAuthUserDataThunk","Error","stopSubmit","_error","Object","keys","myProfile","photos","large","loginThunk","CaptchaIsRequired","url","logoutThunk","authReducer","posts","idPost","likesCount","isLikeClick","postsForDelete","showSuccessSave","errorProfileContacts","isEditModeProfile","initializePosts","addPost","newPostText","deletePost","setPostForDeleting","deletePostForDeleting","clearPostsForDeleting","setLikeOnPost","deleteLikeOnPost","setUserProfile","setStatus","savePhotoSuccess","showSuccessSaveProfile","showErrorProfileContacts","setEditModeProfile","bool","getUserProfile","userId","profileReducer","newPost","Date","now","p","appReducer","rootReducer","combineReducers","profilePage","form","formReducer","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","getShowSuccessSave","getErrorProfileContacts","getPosts","getPostsForDelete","Set","getEditModeProfile","ProfilePost","React","memo","isShowAnimation","isCancelDeletion","isSelectedAllPosts","isHiddenAllLikeAndX","handleDeleteOnePost","setIsCancelDeletion","setIsHiddenAllLikeAndX","useDispatch","useState","isClickDeletePost","setIsClickDeletePost","isSelectedPost","setIsSelectedPost","useEffect","has","postContainer","postDelete","postSelected","columnLeft","aria-hidden","avatar","postSelectedTheme1","postSelectedTheme2","onClick","title","Avatar","unknown","columnCenter","fullName","plugColumnRight","columnRight","IconButton","wrapLike","like","noLike","useLocalStorage","key","value","arr","localStorage","getItem","setItem","stringify","Form","setValue","handleAddPost","trim","TextField","placeholder","multiline","fullWidth","variant","color","inputProps","maxLength","onChange","target","buttonDesktop","Button","style","textShadow","margin","width","endIcon","hidden","buttonMobile","aria-label","marginLeft","ProfileWall","stylesButton","maxWidth","height","setIsShowAnimation","setIsSelectedAllPosts","handleDeleteSelectedPost","handleCancelDeletion","postsElements","wrapButtons","buttons","FormControlLabel","control","Checkbox","label","labelPlacement","checked","startIcon","ProfilePlug","isOwner","containerMainPlug","columnLeftPlug","avatarPlug","buttonPlug","columnRightPlug","nameWrapPlug","namePlug","statusPlug","titleOnePlug","textPlug","titleTwoPlug","useStyles","makeStyles","borderRadius","padding","spacing","minHeight","lineHeight","backgroundColor","ProfileStatus","classes","editMode","setEditMode","isEditInputStatusForm","setIsEditInputStatusForm","statusLocal","setStatusLocal","isHiddenCounter","setIsHiddenCounter","setCount","ref","statusRef","useRef","handleClickOutside","current","contains","document","autoFocus","currentTarget","onFocus","select","onBlur","buttonAndCounter","buttonWrap","disabled","boxShadow","stylesField","countHidden","countYellow","countRed","plug","noStatus","statusNotMy","Contact","contactTitle","contactValue","contact","contactTextWrap","contactText","href","ProfileData","containerForm","aboutMe","text","job","lookingForAJob","lookingForAJobDescription","values","contacts","some","el","FieldWithCounter","renderContent","setIsEditInputProfileForm","position","RenderTextField","input","onInput","meta","touched","warning","custom","InputLabelProps","htmlFor","RenderCheckbox","ProfileDataForm","reduxForm","handleSubmit","initialValues","onSubmit","titleForm","handleInput","handleFocus","handleBlur","Field","component","titleAllContacts","titleContact","ScrollToTopOnMount","getElementById","scrollIntoView","ShowSuccessSavePortal","children","createElement","body","createPortal","ProfileInfoContainer","stylesSaveAndCancelButton","fontSize","isEditInputProfileForm","containerMain","camera","wrapImg","file","files","marginTop","buttonsSaveAndCancelProfile","submit","successSave","saveProfileThunk","ProfileContainer","this","refreshProfile","prevProps","match","params","authorizedUserID","history","PureComponent","withRouter","PreloaderStart","preloaderStart","ButtonChangeTheme","themeLocal","setThemeLocal","handleToggleTheme","buttonThemeDesktop","marginRight","buttonThemeMobile","Header","myID","colors","cyan","cyanLight","cyanMedium","cyanDark","darkBlue","darkBlueTransparent","i","setProperty","header","logoAndTitle","logo","headerTitleDesktop","headerTitleMobile","rightColumn","loginAndPhoto","loginName","buttonLogoutDesktop","buttonLogoutMobile","IconProfile","pathname","profileUrl","viewBox","navLinkImg","activeIcon","d","IconChat","IconUsers","IconFriends","location","nav","exact","activeClassName","active","navLink","LoginReduxForm","validate","errors","test","stylesLoginButton","fontWeight","stylesTestLoginButton","marginBottom","loginBlockSubstrate","loginBlock","row","rowCheckbox","formError","Login","ErrorBoundary","setState","whiteSpace","toString","Component","withSuspense","fallback","ChatContainer","lazy","UsersContainer","FriendsContainer","SuspendedChat","SuspendedUsers","SuspendedFriends","AppContainer","fon","appWrapper","appWrapperContent","from","path","render","createMuiTheme","palette","primary","main","secondary","responsiveFontSizes","ReactDOM","ThemeProvider","CssBaseline","AvatarBody","avatarWrap","extra_large","medium","small","photoTrue","includes"],"mappings":"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","file":"static/js/main.014b1aa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"App_fon__2Avml\",\"container\":\"App_container__3kpCf\",\"appWrapper\":\"App_appWrapper__1cqFv\",\"appWrapperContent\":\"App_appWrapperContent__1OUHu\"};","export default __webpack_public_path__ + \"static/media/preloaderTheme1.364be474.svg\";","export default __webpack_public_path__ + \"static/media/preloaderTheme2.6aed94f2.svg\";","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport preloaderTheme1 from '../../../img/preloader/preloaderTheme1.svg'\nimport preloaderTheme2 from '../../../img/preloader/preloaderTheme2.svg'\nimport s from './Preloader.module.scss'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\ntype PropsType = {\n  display?: 'default' | 'block'\n}\n\nconst Preloader: React.FC<PropsType> = ({ display = 'default' }) => {\n  const theme = useSelector(getTheme)\n\n  return (\n    <div\n      className={cn(\n        { [s.container_default]: display === 'default' },\n        { [s.container_block]: display === 'block' }\n      )}\n    >\n      <div className={s.wrap}>\n        <img\n          src={theme === 'theme1' ? preloaderTheme1 : preloaderTheme2}\n          alt='preloader'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Preloader\n","export default __webpack_public_path__ + \"static/media/no_photo.8bf0768a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Name_name__EUDyG\",\"name__small\":\"Name_name__small__19ccJ\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Name.module.scss'\n\ntype PropsType = {\n  id: number | undefined\n  name: string | undefined\n  size?: 'small' | 'normal'\n}\n\nconst Name: React.FC<PropsType> = ({ id, name, size = 'normal' }) => {\n  return (\n    <span>\n      <NavLink\n        className={cn(s.name, { [s.name__small]: size === 'small' })}\n        to={`/profile/${id || '/login'}`}\n        replace\n      >\n        {name || 'no name'}\n      </NavLink>\n    </span>\n  )\n}\n\nexport default Name\n","import React from 'react'\nimport s from './NoElement.module.scss'\n\ntype PropsType = {\n  elements: string\n  writeSomething?: boolean\n}\n\nconst NoElement: React.FC<PropsType> = ({\n  elements,\n  writeSomething = false,\n}) => {\n  return (\n    <div className={s.container}>\n      <span>{`No ${elements} ${elements === 'users' ? 'found' : ''}`}</span>\n      {writeSomething && <span>Write something!</span>}\n    </div>\n  )\n}\n\nexport default NoElement\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../redux/redux-store'\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n  isAuth: state.auth.isAuth,\n})\n\ntype MapStatePropsType = {\n  isAuth: boolean\n}\n\n// WCP - пропсы WrappedComponent\nexport default function withAuthRedirect<WCP>(\n  WrappedComponent: React.ComponentType<WCP>\n) {\n  const RedirectComponent: React.FC<MapStatePropsType & unknown> = (props) => {\n    const { isAuth, ...restProps } = props\n\n    if (!isAuth) return <Redirect to='/login' />\n\n    return <WrappedComponent {...(restProps as WCP)} />\n  }\n\n  return connect<MapStatePropsType, never, WCP, AppStateType>(\n    mapStateToPropsForRedirect\n  )(RedirectComponent)\n}\n","import { UserType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype GetUsersType = {\n  items: Array<UserType>\n  totalCount: number\n  error: string\n}\n\nconst usersAPI = {\n  async getUsers(\n    currentPage = 1,\n    pageSize: number,\n    term?: string,\n    friend?: boolean\n  ) {\n    const response = await instance.get<GetUsersType>(\n      `users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`\n    )\n    return response.data\n  },\n  async followUser(id: number) {\n    const response = await instance.post<DefaultResponseType>(\n      `follow/${id}`,\n      {}\n    )\n    return response.data\n  },\n  async unfollowUser(id: number) {\n    const response = await instance.delete<DefaultResponseType>(`follow/${id}`)\n    return response.data\n  },\n}\n\nexport default usersAPI\n","import { Dispatch } from 'redux'\nimport { DefaultResponseType, ResultCodesEnum } from '../../api/api'\nimport usersAPI from '../../api/users-api'\nimport { UserType } from '../../types/types'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nconst initialState = {\n  users: [] as Array<UserType>,\n\n  pageSize: 10,\n  totalUsersCount: 0,\n\n  isFetching: true,\n  // disabling the button after pressing\n  followingInProgress: [] as Array<number>, // array of users ID\n}\n\nconst usersReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'FOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: true }\n          }\n          return u\n        }),\n      }\n    }\n    case 'UNFOLLOW': {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: false }\n          }\n          return u\n        }),\n      }\n    }\n    case 'SET_USERS': {\n      return {\n        ...state,\n        users: [...action.users],\n      }\n    }\n    case 'ADD_USERS': {\n      return {\n        ...state,\n        users: [...state.users, ...action.users],\n      }\n    }\n    case 'CLEAR_USERS': {\n      return {\n        ...state,\n        users: [],\n      }\n    }\n    case 'SET_TOTAL_USERS_COUNT': {\n      return {\n        ...state,\n        totalUsersCount: action.count,\n      }\n    }\n    case 'TOGGLE_IS_FETCHING': {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      }\n    }\n    case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userID]\n          : state.followingInProgress.filter((id) => id !== action.userID),\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  followSuccess: (userID: number) => ({ type: 'FOLLOW', userID } as const),\n  unfollowSuccess: (userID: number) => ({ type: 'UNFOLLOW', userID } as const),\n\n  setUsers: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\n  addUsers: (users: Array<UserType>) => ({ type: 'ADD_USERS', users } as const),\n  setTotalUsersCount: (totalUsersCount: number) =>\n    ({\n      type: 'SET_TOTAL_USERS_COUNT',\n      count: totalUsersCount,\n    } as const),\n  clearUsers: () => ({ type: 'CLEAR_USERS' } as const),\n\n  toggleIsFetching: (isFetching: boolean) =>\n    ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const),\n  toggleFollowingProgress: (isFetching: boolean, userID: number) =>\n    ({\n      type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n      isFetching,\n      userID,\n    } as const),\n}\n\nexport const getUsers =\n  (page: number, term: string, friend?: boolean): ThunkType =>\n  async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true))\n\n    const response = await usersAPI.getUsers(\n      page,\n      getState().usersPage.pageSize,\n      term,\n      friend\n    )\n\n    // первичная загрузка\n    if (term.length === 0 && page === 1) {\n      dispatch(actions.setUsers(response.items))\n    }\n    // получение больше пользователей\n    if (page > 1) {\n      dispatch(actions.addUsers(response.items))\n    }\n    // первичный поиск\n    if (term.length > 0 && page === 1) {\n      dispatch(actions.clearUsers())\n      dispatch(actions.setUsers(response.items))\n    }\n\n    dispatch(actions.setTotalUsersCount(response.totalCount))\n    dispatch(actions.toggleIsFetching(false))\n  }\n\ntype DispatchType = Dispatch<ActionsTypes>\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  id: number,\n  apiMethod: (id: number) => Promise<DefaultResponseType>,\n  actionCreator: (id: number) => ActionsTypes\n) => {\n  dispatch(actions.toggleFollowingProgress(true, id))\n  const response = await apiMethod(id)\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actionCreator(id))\n  }\n  dispatch(actions.toggleFollowingProgress(false, id))\n}\n\nexport const follow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.followUser.bind(usersAPI),\n      actions.followSuccess\n    )\n  }\n\nexport const unfollow =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    await _followUnfollowFlow(\n      dispatch,\n      id,\n      usersAPI.unfollowUser.bind(usersAPI),\n      actions.unfollowSuccess\n    )\n  }\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import axios from 'axios'\n\nexport const instance = axios.create({\n  withCredentials: true, // цепляем cookie к запросу\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': 'ddfbc45b-6923-498e-99d5-3a4897cbb31f',\n  },\n})\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n  CaptchaIsRequired = 10,\n}\n\nexport type DefaultResponseType<D = never, RC = ResultCodesEnum> = {\n  data: D\n  resultCode: RC\n  messages: Array<string> | string\n}\n","import { ChatMessageAPIType, StatusWSType } from '../types/types'\n\nlet ws: WebSocket | null = null\n\nconst subscribers = {\n  'messages-received': [] as Array<MessagesReceivedSubscriberType>,\n  'status-changed': [] as Array<StatusChangedSubscriberType>,\n}\n\nconst notifySubscribersAboutStatus = (status: StatusWSType) => {\n  subscribers['status-changed'].forEach((s) => s(status))\n}\n\nconst reconnect = () => {\n  notifySubscribersAboutStatus('pending')\n  setTimeout(createChannel, 3000)\n}\n\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e.data)\n  subscribers['messages-received'].forEach((s) => s(newMessages))\n}\n\nconst openHandler = () => {\n  notifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n  notifySubscribersAboutStatus('error')\n  // eslint-disable-next-line no-console\n  console.error('REFRESH PAGE')\n}\n\nconst cleanUp = () => {\n  ws?.removeEventListener('close', reconnect)\n  ws?.removeEventListener('message', messageHandler)\n  ws?.removeEventListener('open', openHandler)\n  ws?.removeEventListener('error', errorHandler)\n}\n\nconst createChannel = () => {\n  cleanUp()\n  ws?.close()\n\n  ws = new WebSocket(\n    'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n  )\n\n  notifySubscribersAboutStatus('pending')\n\n  ws.addEventListener('close', reconnect)\n  ws.addEventListener('message', messageHandler)\n  ws.addEventListener('open', openHandler)\n  ws.addEventListener('error', errorHandler)\n}\n\nconst chatAPI = {\n  start() {\n    createChannel()\n  },\n\n  stop() {\n    subscribers['messages-received'] = []\n    subscribers['status-changed'] = []\n\n    cleanUp()\n    ws?.close()\n  },\n\n  subscribe(\n    eventName: EventsCustomNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n  ) {\n    // @ts-ignore\n    subscribers[eventName].push(callback)\n  },\n\n  sendMessage(message: string) {\n    ws?.send(message)\n  },\n}\n\ntype EventsCustomNamesType = 'messages-received' | 'status-changed'\n\ntype MessagesReceivedSubscriberType = (\n  messages: Array<ChatMessageAPIType>\n) => void\n\ntype StatusChangedSubscriberType = (status: StatusWSType) => void\n\nexport default chatAPI\n","import { FormAction } from 'redux-form'\nimport { v1 } from 'uuid'\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\n\nimport chatAPI from '../../api/chat-api'\n\nimport {\n  ChatMessageAPIType,\n  ChatMessageType,\n  StatusWSType,\n} from '../../types/types'\n\nconst initialState = {\n  messages: [] as ChatMessageType[],\n  statusWS: 'pending' as StatusWSType,\n}\n\nconst chatReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'MESSAGES_RECEIVED': {\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          ...action.payload.messages.map((m) => ({ ...m, id: v1() })),\n        ].filter((item, index, array) => index >= array.length - 100),\n        // TODO v1() - вызов не чистой функции\n      }\n    }\n    case 'STATUS_CHANGED': {\n      return {\n        ...state,\n        statusWS: action.payload.statusWS,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  messagesReceived: (messages: ChatMessageAPIType[]) =>\n    ({\n      type: 'MESSAGES_RECEIVED',\n      payload: { messages },\n    } as const),\n  statusChanged: (statusWS: StatusWSType) =>\n    ({\n      type: 'STATUS_CHANGED',\n      payload: { statusWS },\n    } as const),\n}\n\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\n  chatAPI.start()\n\n  chatAPI.subscribe('messages-received', (messages: ChatMessageAPIType[]) =>\n    dispatch(actions.messagesReceived(messages))\n  )\n  chatAPI.subscribe('status-changed', (statusWS: StatusWSType) =>\n    dispatch(actions.statusChanged(statusWS))\n  )\n}\n\nexport const stopMessagesListening = (): ThunkType => async () => {\n  chatAPI.stop()\n}\n\nexport const sendMessage = (message: string): ThunkType => {\n  return async () => {\n    chatAPI.sendMessage(message)\n  }\n}\n\nexport default chatReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoElement_container__kqBdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"RenderTextField_error__1byTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ProfileData_containerForm__K8-oX\",\"wrap\":\"ProfileData_wrap__35mMX\",\"aboutMe\":\"ProfileData_aboutMe__P2lzC\",\"job\":\"ProfileData_job__2Xsrz\",\"contacts\":\"ProfileData_contacts__3Ofnk\",\"title\":\"ProfileData_title__2vA5a\",\"text\":\"ProfileData_text__3l1Mc\",\"contact\":\"ProfileData_contact__2lXgR\",\"contactTitle\":\"ProfileData_contactTitle__3S8nu\",\"contactTextWrap\":\"ProfileData_contactTextWrap__2UriX\",\"contactText\":\"ProfileData_contactText__L91HK\"};","import { AppStateType } from '../redux-store'\n\nexport const getInitialized = (state: AppStateType) => state.app.initialized\n\nexport const getTheme = (state: AppStateType) => state.app.theme\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__33PA9\",\"navLink\":\"Navbar_navLink__18rsh\",\"navLinkImg\":\"Navbar_navLinkImg__214ti\",\"active\":\"Navbar_active__2U-iw\",\"activeIcon\":\"Navbar_activeIcon__3-qcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"ProfilePost_postContainer__35KIf\",\"post\":\"ProfilePost_post__173rt\",\"postSelected\":\"ProfilePost_postSelected__2xUxR\",\"postDelete\":\"ProfilePost_postDelete__3Svou\",\"holeOut\":\"ProfilePost_holeOut__MiND7\",\"columnLeft\":\"ProfilePost_columnLeft__1Pvhx\",\"avatar\":\"ProfilePost_avatar__3Z3xh\",\"postSelectedTheme1\":\"ProfilePost_postSelectedTheme1__3m7zh\",\"postSelectedTheme2\":\"ProfilePost_postSelectedTheme2__2aLzJ\",\"columnCenter\":\"ProfilePost_columnCenter__2puM0\",\"message\":\"ProfilePost_message__2SAIT\",\"columnRight\":\"ProfilePost_columnRight__pR4nD\",\"plugColumnRight\":\"ProfilePost_plugColumnRight__3N3NI\",\"wrapLike\":\"ProfilePost_wrapLike__2wFEi\",\"likesCount\":\"ProfilePost_likesCount__3DSIF\",\"like\":\"ProfilePost_like__vBOBH\",\"noLike\":\"ProfilePost_noLike__1dzSj\"};","import { AppStateType } from '../redux-store'\n\nexport const getLogin = (state: AppStateType) => state.auth.login\n\nexport const getIsAuth = (state: AppStateType) => state.auth.isAuth\n\nexport const getAuthorizedUserID = (state: AppStateType) => state.auth.userID\n\nexport const getCaptchaURL = (state: AppStateType) => state.auth.captchaURL\n\nexport const getMyPhoto = (state: AppStateType) => state.auth.myPhoto\n","import {\n  DefaultResponseType,\n  instance,\n  ResultCodeForCaptcha,\n  ResultCodesEnum,\n} from './api'\n\ntype MeDataType = {\n  id: number\n  email: string\n  login: string\n}\n\nconst authAPI = {\n  async me() {\n    const response = await instance.get<DefaultResponseType<MeDataType>>(\n      'auth/me'\n    )\n    return response.data\n  },\n  async login(\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: null | string = null\n  ) {\n    const response = await instance.post<\n      DefaultResponseType<\n        { userId: number },\n        ResultCodesEnum | ResultCodeForCaptcha\n      >\n    >('/auth/login', {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    })\n    return response.data\n  },\n  async logout() {\n    const response = await instance.delete<DefaultResponseType>('/auth/login')\n    return response.data\n  },\n}\n\nexport default authAPI\n","import { instance } from './api'\n\ntype GetCaptchaResponseType = {\n  url: string\n}\n\nconst securityAPI = {\n  async getCaptchaURL() {\n    const response = await instance.get<GetCaptchaResponseType>(\n      'security/get-captcha-url'\n    )\n    return response.data\n  },\n}\n\nexport default securityAPI\n","import { PhotosType, ProfileType } from '../types/types'\nimport { DefaultResponseType, instance } from './api'\n\ntype SavePhotoDataType = {\n  photos: PhotosType\n}\n\nconst profileAPI = {\n  async getProfile(id: number | null) {\n    const response = await instance.get<ProfileType>(`profile/${id}`)\n    return response.data\n  },\n\n  async getStatus(id: number) {\n    const response = await instance.get<string>(`profile/status/${id}`)\n    return response.data\n  },\n\n  async updateStatus(status: string) {\n    const response = await instance.put<DefaultResponseType>('profile/status', {\n      status,\n    })\n    return response.data\n  },\n\n  async savePhotoAPI(photoFile: File) {\n    const formData = new FormData()\n    formData.append('image', photoFile)\n    const response = await instance.put<DefaultResponseType<SavePhotoDataType>>(\n      'profile/photo',\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    )\n    return response.data\n  },\n\n  async saveProfileAPI(profile: ProfileType) {\n    const response = await instance.put<DefaultResponseType>('profile', profile)\n    return response.data\n  },\n}\n\nexport default profileAPI\n","import { FormAction, stopSubmit } from 'redux-form'\nimport { ResultCodesEnum, ResultCodeForCaptcha } from '../../api/api'\nimport authAPI from '../../api/auth-api'\nimport securityAPI from '../../api/security-api'\n\nimport { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  userID: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaURL: null as string | null,\n  myPhoto: null as string | null,\n}\n\nconst authReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n    case 'GET_CAPTCHA_URL_SUCCESS': {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n    case 'SET_MY_PHOTO': {\n      return {\n        ...state,\n        // @ts-ignore\n        myPhoto: action.payload.photo,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst actions = {\n  setAuthUserData: (\n    userID: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n  ) => ({\n    type: 'SET_USER_DATA',\n    payload: {\n      userID,\n      email,\n      login,\n      isAuth,\n    } as const,\n  }),\n\n  setCaptcha: (captchaURL: string | null) => ({\n    type: 'GET_CAPTCHA_URL_SUCCESS',\n    payload: { captchaURL } as const,\n  }),\n\n  setMyPhoto: (photo: string | null) => ({\n    type: 'SET_MY_PHOTO',\n    payload: { photo } as const,\n  }),\n}\n\nexport const getAuthUserDataThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.me()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    const { id, email, login } = response.data\n    dispatch(actions.setAuthUserData(id, email, login, true))\n  }\n\n  if (response.resultCode === ResultCodesEnum.Error) {\n    const message = response.messages\n    const action = stopSubmit('loginForm', {\n      _error: message.length > 0 ? message[0] : 'Some error',\n    })\n    // Some error - на всякий случай, если с сервера придёт пустое сообщение\n    // при ошибке\n    dispatch(action)\n  }\n\n  if (Object.keys(response.data).length !== 0) {\n    const myProfile = await profileAPI.getProfile(response.data.id)\n    dispatch(actions.setMyPhoto(myProfile.photos.large))\n  }\n}\n\nconst setCaptchaThunk = (): ThunkType => async (dispatch) => {\n  const response = await securityAPI.getCaptchaURL()\n  const captcha = response.url\n  dispatch(actions.setCaptcha(captcha))\n}\n\nexport const loginThunk =\n  (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captcha: string | null\n  ): ThunkType =>\n  async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getAuthUserDataThunk())\n      dispatch(actions.setCaptcha(null))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      const message = response.messages\n      const action = stopSubmit('loginForm', {\n        _error: message.length > 0 ? message[0] : 'Some error',\n      })\n      // Some error - на всякий случай, если с сервера придёт пустое сообщение\n      // при ошибке\n      dispatch(action)\n    }\n\n    if (response.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\n      dispatch(setCaptchaThunk())\n    }\n  }\n\nexport const logoutThunk = (): ThunkType => async (dispatch) => {\n  const response = await authAPI.logout()\n\n  if (response.resultCode === ResultCodesEnum.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false))\n    dispatch(actions.setMyPhoto(null))\n  }\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { PostType, ProfileType, PhotosType } from '../../types/types'\nimport { ResultCodesEnum } from '../../api/api'\nimport profileAPI from '../../api/profile-api'\n\nconst initialState = {\n  posts: [\n    {\n      idPost: 1,\n      message: `Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Facilis ut quo maiores neque laboriosam. Ratione adipisci\n        reiciendis autem placeat alias necessitatibus pariatur saepe\n        ipsum, temporibus animi, facilis minus doloribus ducimus.`,\n      likesCount: 1,\n      isLikeClick: true,\n    },\n    {\n      idPost: 2,\n      message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n      likesCount: 0,\n      isLikeClick: false,\n    },\n    {\n      idPost: 3,\n      message: `Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        Facilis ut quo maiores neque laboriosam. Ratione adipisci\n        reiciendis autem placeat alias necessitatibus...`,\n      likesCount: 0,\n      isLikeClick: false,\n    },\n  ] as Array<PostType>,\n  postsForDelete: [] as Array<number>,\n\n  profile: null as ProfileType | null,\n  status: '',\n  showSuccessSave: '',\n  errorProfileContacts: '',\n  isEditModeProfile: false,\n}\n\nconst profileReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'SET_USER': {\n      return {\n        ...state,\n        profile: action.profile,\n      }\n    }\n    case 'SET_STATUS': {\n      return {\n        ...state,\n        status: action.status,\n      }\n    }\n    case 'INITIALIZE_POSTS': {\n      return {\n        ...state,\n        posts: action.posts,\n      }\n    }\n    case 'ADD_POST': {\n      const newPost = {\n        idPost: Date.now(), // TODO вызов не чистой функции\n        message: action.newPostText,\n        likesCount: 0,\n        isLikeClick: false,\n      }\n      return {\n        ...state,\n        posts: [newPost, ...state.posts],\n      }\n    }\n    case 'SET_POST_FOR_DELETING': {\n      return {\n        ...state,\n        postsForDelete: [...state.postsForDelete, action.idPost],\n      }\n    }\n    case 'DELETE_POST_FOR_DELETING': {\n      return {\n        ...state,\n        postsForDelete: [\n          ...state.postsForDelete.filter((id) => id !== action.idPost),\n        ],\n      }\n    }\n    case 'CLEAR_POSTS_FOR_DELETING': {\n      return {\n        ...state,\n        postsForDelete: [],\n      }\n    }\n    case 'DELETE_POST': {\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.idPost !== action.idPost),\n      }\n    }\n    case 'SET_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: ++p.likesCount,\n                isLikeClick: true,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'DELETE_LIKE_ON_POST': {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.map((p) => {\n            if (p.idPost === action.idPost) {\n              return {\n                ...p,\n                likesCount: --p.likesCount,\n                isLikeClick: false,\n              }\n            }\n            return p\n          }),\n        ],\n      }\n    }\n    case 'SAVE_PHOTO_SUCCESS': {\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos } as ProfileType,\n      }\n    }\n    case 'SHOW_SUCCESS_SAVE': {\n      return {\n        ...state,\n        showSuccessSave: action.message,\n      }\n    }\n    case 'SHOW_ERROR_PROFILE_CONTACTS': {\n      return {\n        ...state,\n        errorProfileContacts: action.message,\n      }\n    }\n    case 'TOGGLE_EDIT_MODE_PROFILE': {\n      return {\n        ...state,\n        isEditModeProfile: action.bool,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializePosts: (posts: Array<PostType>) =>\n    ({ type: 'INITIALIZE_POSTS', posts } as const),\n  // удаление одного поста\n  addPost: (newPostText: string) =>\n    ({ type: 'ADD_POST', newPostText } as const),\n  deletePost: (idPost: number) => ({ type: 'DELETE_POST', idPost } as const),\n  // удаление нескольких постов\n  setPostForDeleting: (idPost: number) =>\n    ({ type: 'SET_POST_FOR_DELETING', idPost } as const),\n  deletePostForDeleting: (idPost: number) =>\n    ({ type: 'DELETE_POST_FOR_DELETING', idPost } as const),\n  clearPostsForDeleting: () => ({ type: 'CLEAR_POSTS_FOR_DELETING' } as const),\n  // лайк\n  setLikeOnPost: (idPost: number) =>\n    ({ type: 'SET_LIKE_ON_POST', idPost } as const),\n  deleteLikeOnPost: (idPost: number) =>\n    ({ type: 'DELETE_LIKE_ON_POST', idPost } as const),\n\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: 'SET_USER', profile } as const),\n  setStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n  savePhotoSuccess: (photos: PhotosType) =>\n    ({ type: 'SAVE_PHOTO_SUCCESS', photos } as const),\n  showSuccessSaveProfile: (message: string) =>\n    ({ type: 'SHOW_SUCCESS_SAVE', message } as const),\n  showErrorProfileContacts: (message: string) =>\n    ({ type: 'SHOW_ERROR_PROFILE_CONTACTS', message } as const),\n  setEditModeProfile: (bool: boolean) =>\n    ({ type: 'TOGGLE_EDIT_MODE_PROFILE', bool } as const),\n}\n\nexport const getUserProfile =\n  (userId: number | null): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(actions.setUserProfile(response))\n  }\n\nexport const getStatus =\n  (id: number): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.getStatus(id)\n    dispatch(actions.setStatus(response))\n  }\n\nexport const updateStatus =\n  (status: string): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.setStatus(status))\n    }\n  }\n\nexport const savePhotoThunk =\n  (file: File): ThunkType =>\n  async (dispatch) => {\n    const response = await profileAPI.savePhotoAPI(file)\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.savePhotoSuccess(response.data.photos))\n    }\n  }\n\nexport const saveProfileThunk =\n  (profile: ProfileType): ThunkType =>\n  async (dispatch, getState) => {\n    const response = await profileAPI.saveProfileAPI(profile)\n    const { userID } = getState().auth\n\n    if (response.resultCode === ResultCodesEnum.Success) {\n      dispatch(getUserProfile(userID))\n      dispatch(actions.showSuccessSaveProfile('Data saved successfully!'))\n      setTimeout(dispatch, 4000, actions.showSuccessSaveProfile(''))\n      dispatch(actions.showErrorProfileContacts(''))\n    }\n\n    if (response.resultCode === ResultCodesEnum.Error) {\n      // заготовка для показа ошибки конкретного поля\n      // const key = response.data.messages[0]\n      // .match(/Contacts->(\\w+)/)[1].toLowerCase()\n      // dispatch(stopSubmit('editProfile', {\n      //   contacts: { [key]: response.data.messages[0] },\n      // }));\n      dispatch(actions.showErrorProfileContacts(response.messages[0]))\n    }\n  }\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import { BaseThunkType, InferActionsTypes } from '../redux-store'\nimport { getAuthUserDataThunk } from './auth-reducer'\nimport { ThemeType } from '../../types/types'\n\nconst initialState = {\n  initialized: false,\n  theme: 'theme1' as ThemeType,\n}\n\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'INITIALIZED_SUCCESS': {\n      return {\n        ...state,\n        initialized: true,\n      }\n    }\n    case 'TOGGLE_THEME': {\n      return {\n        ...state,\n        theme: action.theme,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializedSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const),\n  setTheme: (theme: ThemeType) => ({ type: 'TOGGLE_THEME', theme } as const),\n}\n\nexport const initializeAppThunk = (): ThunkType => async (dispatch) => {\n  await dispatch(getAuthUserDataThunk())\n  dispatch(actions.initializedSuccess())\n}\n\nexport default appReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose,\n  Action,\n} from 'redux'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nimport authReducer from './reducers/auth-reducer'\nimport profileReducer from './reducers/profile-reducer'\nimport usersReducer from './reducers/users-reducer'\nimport appReducer from './reducers/app-reducer'\nimport chatReducer from './reducers/chat-reducer'\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n  chat: chatReducer,\n})\n\n// types state app\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\n// types actions\nexport type InferActionsTypes<T> = T extends {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: (...args: any[]) => infer U\n}\n  ? U\n  : never\n\n// type thunks\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n  R,\n  AppStateType,\n  unknown,\n  A\n>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// @ts-ignore\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import { AppStateType } from '../redux-store'\n\nexport const getProfile = (state: AppStateType) => state.profilePage.profile\n\nexport const getStatus = (state: AppStateType) => state.profilePage.status\n\nexport const getShowSuccessSave = (state: AppStateType) =>\n  state.profilePage.showSuccessSave\n\nexport const getErrorProfileContacts = (state: AppStateType) =>\n  state.profilePage.errorProfileContacts\n\nexport const getPosts = (state: AppStateType) => state.profilePage.posts\n\nexport const getPostsForDelete = (state: AppStateType) =>\n  new Set(state.profilePage.postsForDelete)\n\nexport const getEditModeProfile = (state: AppStateType) =>\n  state.profilePage.isEditModeProfile\n","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cn from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport CloseIcon from '@material-ui/icons/Close'\nimport unknown from '../../../../img/no_photo.svg'\nimport s from './ProfilePost.module.scss'\n\nimport Avatar from '../../../common/Avatar/Avatar'\nimport Name from '../../../common/Name/Name'\n\nimport { getPostsForDelete } from '../../../../redux/selectors/profile-selectors'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\nimport { actions } from '../../../../redux/reducers/profile-reducer'\n\nimport { PostType, ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  profile: ProfileType | null\n  isShowAnimation: boolean\n  isCancelDeletion: boolean\n  isSelectedAllPosts: boolean\n  isHiddenAllLikeAndX: boolean\n  setIsCancelDeletion: Dispatch<SetStateAction<boolean>>\n  setIsHiddenAllLikeAndX: Dispatch<SetStateAction<boolean>>\n  handleDeleteOnePost: (idPost: number) => void\n}\n\nconst ProfilePost: React.FC<{ post: PostType } & OwnPropsType> = React.memo(\n  (props) => {\n    const {\n      post: { idPost, message, likesCount, isLikeClick },\n      profile,\n      isShowAnimation,\n      isCancelDeletion,\n      isSelectedAllPosts,\n      isHiddenAllLikeAndX,\n      handleDeleteOnePost,\n      setIsCancelDeletion,\n      setIsHiddenAllLikeAndX,\n    } = props\n\n    const theme = useSelector(getTheme)\n    const postsForDelete = useSelector(getPostsForDelete)\n    const dispatch = useDispatch()\n\n    const [isClickDeletePost, setIsClickDeletePost] = useState(false)\n    const [isSelectedPost, setIsSelectedPost] = useState(false)\n\n    useEffect(() => {\n      if (isSelectedAllPosts || postsForDelete.has(idPost)) {\n        setIsSelectedPost(true)\n      } else {\n        setIsSelectedPost(false)\n      }\n    }, [isSelectedAllPosts, postsForDelete, idPost])\n\n    useEffect(() => {\n      setIsSelectedPost(false)\n      setIsCancelDeletion(false)\n    }, [isCancelDeletion, setIsCancelDeletion])\n\n    useEffect(() => {\n      if (postsForDelete.size === 0) {\n        // возвращаем все Х и лайки, если больше нет выбранных постов\n        setIsHiddenAllLikeAndX(false)\n      }\n    }, [postsForDelete, setIsHiddenAllLikeAndX])\n\n    const handleClickOnAvatar = () => {\n      if (!isSelectedPost) {\n        setIsHiddenAllLikeAndX(true)\n        setIsSelectedPost(true)\n        dispatch(actions.setPostForDeleting(idPost))\n      } else {\n        if (postsForDelete.size === 0) {\n          // не возвращаем все Х и лайки, если ещё выбраны какие-то посты\n          setIsHiddenAllLikeAndX(false)\n        }\n        setIsSelectedPost(false)\n        dispatch(actions.deletePostForDeleting(idPost))\n      }\n    }\n\n    const handleDeletePost = () => {\n      setIsClickDeletePost(true)\n      setTimeout(() => handleDeleteOnePost(idPost), 300)\n    }\n\n    const handleSetLike = () => {\n      if (!isLikeClick) {\n        dispatch(actions.setLikeOnPost(idPost))\n      } else {\n        dispatch(actions.deleteLikeOnPost(idPost))\n      }\n    }\n\n    return (\n      <div\n        className={cn(s.postContainer, {\n          [s.postDelete]:\n            isClickDeletePost ||\n            (isShowAnimation && postsForDelete.has(idPost)),\n        })}\n      >\n        <div className={cn(s.post, { [s.postSelected]: isSelectedPost })}>\n          <div className={s.columnLeft}>\n            <div\n              aria-hidden='true'\n              className={cn(\n                { [s.avatar]: !isSelectedPost },\n                {\n                  [s.postSelectedTheme1]: isSelectedPost && theme === 'theme1',\n                },\n                {\n                  [s.postSelectedTheme2]: isSelectedPost && theme === 'theme2',\n                }\n              )}\n              onClick={handleClickOnAvatar}\n              title='Select post to delete'\n            >\n              <Avatar\n                photo={profile?.photos.large || unknown}\n                size='medium'\n                id={profile?.userId}\n              />\n            </div>\n          </div>\n\n          <div className={s.columnCenter}>\n            <Name id={profile?.userId} name={profile?.fullName} />\n            <div className={s.message}>{message}</div>\n          </div>\n\n          {!isHiddenAllLikeAndX ? (\n            <div className={s.columnRight}>\n              <IconButton\n                title='Delete post'\n                size='small'\n                onClick={handleDeletePost}\n              >\n                <CloseIcon />\n              </IconButton>\n\n              <div className={s.wrapLike}>\n                <span className={s.likesCount}>\n                  {likesCount > 0 ? `+${likesCount}` : ''}\n                </span>\n                <IconButton title='Like' size='small' onClick={handleSetLike}>\n                  <ThumbUpAltIcon\n                    className={cn(s.like, { [s.noLike]: !isLikeClick })}\n                  />\n                </IconButton>\n              </div>\n            </div>\n          ) : (\n            <div className={s.plugColumnRight} />\n          )}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default ProfilePost\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PostType } from '../types/types'\n\nconst useLocalStorage = (\n  key: string,\n  value: string | PostType[],\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  action: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback?: any\n) => {\n  const dispatch = useDispatch()\n\n  // чтение и применение темы из Local Storage\n  useEffect(() => {\n    // @ts-ignore\n    const arr = JSON.parse(localStorage.getItem(key))\n\n    if (arr) {\n      dispatch(action(arr))\n      if (callback) callback(arr)\n    }\n  }, [action, key, callback, dispatch])\n\n  // запись темы в Local Storage\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n}\nexport default useLocalStorage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport PostAddIcon from '@material-ui/icons/PostAdd'\nimport {\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  TextField,\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CloseIcon from '@material-ui/icons/Close'\nimport cn from 'classnames'\nimport s from './ProfileWall.module.scss'\n\nimport ProfilePost from './ProfilePost/ProfilePost'\nimport NoElement from '../../common/NoElement/NoElement'\nimport useLocalStorage from '../../../hooks/useLocalStorage'\n\nimport {\n  getPosts,\n  getPostsForDelete,\n  getProfile,\n} from '../../../redux/selectors/profile-selectors'\nimport { actions } from '../../../redux/reducers/profile-reducer'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport { PostType } from '../../../types/types'\n\nconst ProfileWall: React.FC = () => {\n  const stylesButton = {\n    color: 'white',\n    maxWidth: '120px',\n    height: '70%',\n    margin: '10px',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const posts = useSelector(getPosts)\n  const postsForDelete = useSelector(getPostsForDelete)\n  const profile = useSelector(getProfile)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [isShowAnimation, setIsShowAnimation] = useState(false)\n  const [isSelectedAllPosts, setIsSelectedAllPosts] = useState(false)\n  const [isCancelDeletion, setIsCancelDeletion] = useState(false)\n  const [isHiddenAllLikeAndX, setIsHiddenAllLikeAndX] = useState(false)\n\n  useLocalStorage('posts', posts, actions.initializePosts)\n\n  const handleDeleteOnePost = (idPost: number) => {\n    dispatch(actions.deletePost(idPost))\n  }\n\n  const handleDeleteSelectedPost = () => {\n    // начало анимации удаления\n    setIsShowAnimation(true)\n\n    setIsSelectedAllPosts(false)\n\n    // возвращаем Х и лайки у всех постов\n    setIsHiddenAllLikeAndX(false)\n\n    setTimeout(() => {\n      postsForDelete.forEach((p) => {\n        dispatch(actions.deletePost(p))\n      })\n      dispatch(actions.clearPostsForDeleting())\n\n      // конец анимации удаления\n      setIsShowAnimation(false)\n    }, 600)\n  }\n\n  const handleCancelDeletion = () => {\n    dispatch(actions.clearPostsForDeleting())\n    setIsCancelDeletion(true)\n    setIsSelectedAllPosts(false)\n  }\n\n  const handleSelectedAllPosts = () => {\n    if (!isSelectedAllPosts) {\n      posts.forEach((post) => {\n        dispatch(actions.setPostForDeleting(post.idPost))\n      })\n      setIsSelectedAllPosts(true)\n    } else {\n      dispatch(actions.clearPostsForDeleting())\n      setIsSelectedAllPosts(false)\n    }\n  }\n\n  useEffect(() => {\n    if (postsForDelete.size === posts.length) {\n      setIsSelectedAllPosts(true)\n    } else {\n      setIsSelectedAllPosts(false)\n    }\n  }, [postsForDelete.size, posts.length])\n\n  const postsElements = posts.map((p: PostType) => (\n    <ProfilePost\n      key={p.idPost}\n      profile={profile}\n      post={{\n        idPost: p.idPost,\n        message: p.message,\n        likesCount: p.likesCount,\n        isLikeClick: p.isLikeClick,\n      }}\n      isSelectedAllPosts={isSelectedAllPosts}\n      isHiddenAllLikeAndX={isHiddenAllLikeAndX}\n      setIsHiddenAllLikeAndX={setIsHiddenAllLikeAndX}\n      isShowAnimation={isShowAnimation}\n      isCancelDeletion={isCancelDeletion}\n      setIsCancelDeletion={setIsCancelDeletion}\n      handleDeleteOnePost={handleDeleteOnePost}\n    />\n  ))\n\n  return (\n    <div className={s.container}>\n      <div className={s.wrapButtons}>\n        <div\n          hidden={postsForDelete.size === 0}\n          className={cn({ [s.buttons]: postsForDelete.size > 0 })}\n        >\n          <FormControlLabel\n            control={\n              <Checkbox color={theme === 'theme1' ? 'primary' : 'secondary'} />\n            }\n            label='Select all'\n            labelPlacement='end'\n            style={{ marginLeft: '14px' }}\n            checked={isSelectedAllPosts && postsForDelete.size === posts.length}\n            onChange={handleSelectedAllPosts}\n          />\n\n          <div className={s.buttonDesktop}>\n            <Button\n              variant='contained'\n              style={stylesButton}\n              startIcon={<DeleteIcon />}\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              onClick={() => handleDeleteSelectedPost()}\n            >\n              Delete\n            </Button>\n          </div>\n          <div hidden className={s.buttonMobile}>\n            <IconButton\n              title='Delete'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              onClick={() => handleDeleteSelectedPost()}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </div>\n\n          <div className={s.buttonDesktop}>\n            <Button\n              variant='outlined'\n              style={stylesButton}\n              startIcon={<CloseIcon />}\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              onClick={handleCancelDeletion}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div hidden className={s.buttonMobile}>\n            <IconButton\n              title='Cancel'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              onClick={handleCancelDeletion}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n\n      {postsForDelete.size === 0 && <Form theme={theme} />}\n\n      <div className={s.posts}>\n        {postsElements}\n\n        {!posts.length && <NoElement elements='posts' writeSomething />}\n      </div>\n    </div>\n  )\n}\n\ntype OwnPropsType = {\n  theme: string\n}\n\nconst Form: React.FC<OwnPropsType> = ({ theme }) => {\n  const stylesAddPostButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: '10px 0 10px 10px',\n    width: '140px',\n  }\n\n  const dispatch = useDispatch()\n  const [value, setValue] = useState('')\n\n  const handleAddPost = () => {\n    if (!value.trim()) {\n      return\n    }\n    dispatch(actions.addPost(value))\n    setValue('')\n  }\n\n  return (\n    <div>\n      <div className={s.form}>\n        <TextField\n          name='newPostText'\n          placeholder='Enter the post text...'\n          multiline\n          fullWidth\n          variant='outlined'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          inputProps={{ maxLength: 1000, value }}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setValue(e.target.value)\n          }\n        />\n        <div className={s.buttonDesktop}>\n          <Button\n            onClick={handleAddPost}\n            variant='contained'\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={stylesAddPostButton}\n            endIcon={<PostAddIcon />}\n          >\n            Add post\n          </Button>\n        </div>\n        <div hidden className={s.buttonMobile}>\n          <IconButton\n            aria-label='addPost'\n            onClick={handleAddPost}\n            style={{ marginLeft: 5 }}\n            title='Add post'\n          >\n            <PostAddIcon color={theme === 'theme1' ? 'primary' : 'secondary'} />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileWall\n","export default __webpack_public_path__ + \"static/media/camera.12909c41.svg\";","import React from 'react'\nimport s from './ProfilePlug.module.scss'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfilePlug: React.FC<PropsType> = ({ isOwner }) => {\n  return (\n    <div className={s.containerMainPlug}>\n      <div className={s.columnLeftPlug}>\n        <div className={s.avatarPlug} />\n        {isOwner && <div className={s.buttonPlug} />}\n      </div>\n\n      <div className={s.columnRightPlug}>\n        <div className={s.nameWrapPlug}>\n          <div className={s.namePlug} />\n        </div>\n\n        <div className={s.statusPlug} />\n\n        <div className={s.titleOnePlug} />\n        <div className={s.textPlug} />\n        <div className={s.titleTwoPlug} />\n        <div className={s.textPlug} />\n      </div>\n    </div>\n  )\n}\n\nexport default ProfilePlug\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    borderRadius: '5px 5px 0 0',\n    padding: theme.spacing(1),\n    minHeight: '30px',\n    lineHeight: '25px',\n    backgroundColor: '#4f4f4f',\n  },\n}))\n\nexport default useStyles\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, TextField } from '@material-ui/core'\nimport SaveIcon from '@material-ui/icons/Save'\nimport cn from 'classnames'\nimport s from './ProfileStatus.module.scss'\nimport stylesField from '../../../common/FieldWithCounter/FieldWithCounter.module.scss'\nimport useStyles from './stylesCustomMaterialUI'\nimport { getTheme } from '../../../../redux/selectors/app-selectors'\n\nimport { getStatus } from '../../../../redux/selectors/profile-selectors'\nimport { updateStatus } from '../../../../redux/reducers/profile-reducer'\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileStatus = ({ isOwner }: PropsType) => {\n  const classes = useStyles()\n\n  const stylesSaveAndButton: React.CSSProperties = {\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    boxShadow: '2px 2px 5px var(--color-darkBlueTransparent)',\n    margin: 10,\n    width: '100%',\n  }\n\n  const status = useSelector(getStatus)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [editMode, setEditMode] = useState(false)\n  const [isEditInputStatusForm, setIsEditInputStatusForm] = useState(false)\n  const [statusLocal, setStatusLocal] = useState(status)\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  useEffect(() => {\n    setStatusLocal(status)\n  }, [status])\n\n  const handleFocusInput = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n\n  const handleBlurInput = () => {\n    setIsHiddenCounter(true)\n  }\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value.length)\n    setIsEditInputStatusForm(true)\n    setStatusLocal(e.currentTarget.value)\n  }\n\n  const handleSaveStatus = () => {\n    dispatch(updateStatus(statusLocal))\n    setIsEditInputStatusForm(false)\n    setEditMode(false)\n  }\n\n  function useOutsideAlerter(ref: React.RefObject<HTMLDivElement>) {\n    useEffect(() => {\n      function handleClickOutside(e: MouseEvent) {\n        if (\n          ref.current &&\n          !ref.current.contains(e.target as HTMLInputElement)\n        ) {\n          setEditMode(false)\n        }\n      }\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }, [ref])\n  }\n\n  const statusRef = useRef<HTMLDivElement | null>(null)\n  useOutsideAlerter(statusRef)\n\n  return (\n    <div ref={statusRef} className={s.container} title='Change status'>\n      {editMode && (\n        <div className={s.wrap}>\n          <TextField\n            autoFocus\n            multiline\n            fullWidth\n            name='newStatusText'\n            placeholder='Your status...'\n            inputProps={{ maxLength: 300 }}\n            className={classes.status}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            value={statusLocal}\n            onChange={handleChangeInput}\n            onFocus={handleFocusInput}\n            onBlur={handleBlurInput}\n          />\n\n          <div className={s.buttonAndCounter}>\n            <div className={s.buttonWrap}>\n              <Button\n                onClick={handleSaveStatus}\n                disabled={!isEditInputStatusForm}\n                variant='contained'\n                color={theme === 'theme1' ? 'primary' : 'secondary'}\n                style={stylesSaveAndButton}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </div>\n\n            <span\n              className={cn(\n                stylesField.count,\n                { [stylesField.countHidden]: isHiddenCounter },\n                { [stylesField.countYellow]: count >= 290 },\n                { [stylesField.countRed]: count === 300 }\n              )}\n            >\n              {count} of 300\n            </span>\n          </div>\n        </div>\n      )}\n\n      {editMode && <div className={s.plug} />}\n\n      {isOwner && !editMode && (\n        <div\n          aria-hidden='true'\n          className={s.status}\n          onClick={() => setEditMode(true)}\n        >\n          {status || <span className={s.noStatus}>Your status is empty</span>}\n        </div>\n      )}\n\n      {!isOwner && status && <div className={s.statusNotMy}>{status}</div>}\n    </div>\n  )\n}\n\nexport default ProfileStatus\n","import React from 'react'\nimport { ProfileType, СontactsType } from '../../../../types/types'\nimport s from './ProfileData.module.scss'\n\ntype PropsType = {\n  profile: ProfileType\n}\n\nconst ProfileData: React.FC<PropsType> = ({ profile }) => (\n  <div className={s.containerForm}>\n    <div className={s.wrap}>\n      {profile.aboutMe && (\n        <div className={s.aboutMe}>\n          <div className={s.title}>About me:</div>\n          <div className={s.text}>{profile.aboutMe}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.wrap}>\n      <div className={s.job}>\n        <div className={s.title}>Job search:</div>\n        {profile.lookingForAJob ? (\n          <div className={s.text}>Now looking for a job!</div>\n        ) : (\n          <div className={s.text}>I&#39;m not looking for a job</div>\n        )}\n      </div>\n    </div>\n\n    <div className={s.wrap}>\n      {profile.lookingForAJobDescription && (\n        <div className={s.job}>\n          <div className={s.title}>Professional skills:</div>\n          <div className={s.text}>{profile.lookingForAJobDescription}</div>\n        </div>\n      )}\n    </div>\n\n    <div className={s.wrap}>\n      {Object.values(profile.contacts).some((el) => el && el !== '') && (\n        <div className={s.contacts}>\n          <div className={s.title}>My contacts</div>\n          {Object.keys(profile.contacts).map((key) => (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key as keyof СontactsType]}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n)\n\ntype ContactPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\nconst Contact: React.FC<ContactPropsType> = React.memo(\n  ({ contactTitle, contactValue }) => (\n    <>\n      {contactValue && (\n        <div className={s.contact}>\n          <span className={s.contactTitle}>{contactTitle}:</span>\n          <div className={s.contactTextWrap}>\n            <a className={s.contactText} href={contactValue}>\n              {contactValue.replace(/(?:https?):\\/\\/([^/\\s]+)[^\\s]*/gi, '$1')}\n            </a>\n          </div>\n        </div>\n      )}\n    </>\n  )\n)\n\nexport default ProfileData\n","import { useState } from 'react'\n\nimport cn from 'classnames'\nimport s from './FieldWithCounter.module.scss'\n\ntype PropsType = {\n  renderContent: (\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    handleFocus: (e: React.FocusEvent<HTMLInputElement>) => void,\n    handleBlur: () => void\n  ) => JSX.Element\n  maxLength: number\n  setIsEditInputProfileForm: (bool: boolean) => void\n}\n\nconst FieldWithCounter: React.FC<PropsType> = (props) => {\n  const { maxLength, renderContent, setIsEditInputProfileForm } = props\n\n  const [isHiddenCounter, setIsHiddenCounter] = useState(true)\n  const [count, setCount] = useState(0)\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setIsEditInputProfileForm(true)\n    setCount(e.target.value.length)\n  }\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select()\n    setCount(e.target.value.length)\n    setIsHiddenCounter(false)\n  }\n  const handleBlur = () => {\n    setIsHiddenCounter(true)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {renderContent(handleInput, handleFocus, handleBlur)}\n\n      <span\n        className={cn(\n          s.count,\n          { [s.countHidden]: isHiddenCounter },\n          { [s.countYellow]: count >= maxLength - 10 },\n          { [s.countRed]: count === maxLength }\n        )}\n      >\n        {count} of {maxLength}\n      </span>\n    </div>\n  )\n}\n\nexport default FieldWithCounter\n","import { useSelector } from 'react-redux'\nimport { TextField } from '@material-ui/core'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nimport s from './RenderTextField.module.scss'\n\nconst RenderTextField = (props) => {\n  const {\n    label,\n    input,\n    placeholder,\n    multiline,\n    variant,\n    inputProps,\n    onInput,\n    onFocus,\n    meta: { touched, error, warning },\n    fullWidth,\n    ...custom\n  } = props\n\n  const theme = useSelector(getTheme)\n\n  return (\n    <>\n      <TextField\n        color={theme === 'theme1' ? 'primary' : 'secondary'}\n        label={label}\n        InputLabelProps={{ htmlFor: label }}\n        inputProps={{ ...inputProps, id: label }}\n        onInput={onInput}\n        onFocus={onFocus}\n        variant={variant}\n        multiline={multiline}\n        fullWidth={fullWidth}\n        placeholder={placeholder}\n        {...input}\n        {...custom}\n      />\n      {touched &&\n        ((error && <span className={s.error}>{error}</span>) ||\n          (warning && <span>{warning}</span>))}\n    </>\n  )\n}\n\nexport default RenderTextField\n","import { FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from '../../../redux/selectors/app-selectors'\n\nconst RenderCheckbox = ({ input, label }) => {\n  const theme = useSelector(getTheme)\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={!!input.value}\n            onChange={input.onChange}\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n            style={{ marginLeft: 5, padding: 6 }}\n          />\n        }\n        label={label}\n        labelPlacement='start'\n        style={{ marginLeft: 0 }}\n      />\n    </div>\n  )\n}\n\nexport default RenderCheckbox\n","import React from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport FieldWithCounter from '../../../common/FieldWithCounter/FieldWithCounter'\nimport RenderTextField from '../../../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../../../common/RenderFormElement/RenderCheckbox'\nimport s from './ProfileDataForm.module.scss'\n\nimport { ProfileType } from '../../../../types/types'\n\ntype OwnPropsType = {\n  errorProfileContacts: string\n  setIsEditInputProfileForm: (bool: boolean) => void\n  initialValues: ProfileType\n}\n\nconst Form: React.FC<\n  InjectedFormProps<ProfileType, OwnPropsType> & OwnPropsType\n> = (props) => {\n  const {\n    handleSubmit,\n    initialValues,\n    errorProfileContacts,\n    setIsEditInputProfileForm,\n  } = props\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h1 className={s.titleForm}>Edit profile</h1>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 100 }}\n              label='Name:'\n              name='fullName'\n              placeholder='Your name'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={100}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 1000 }}\n              multiline\n              label='About me:'\n              name='aboutMe'\n              placeholder='Write about yourself!'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={1000}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <Field\n          component={RenderCheckbox}\n          onChange={() => {\n            setIsEditInputProfileForm(true)\n          }}\n          name='lookingForAJob'\n          label='Are you looking for a job?'\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <FieldWithCounter\n          renderContent={(handleInput, handleFocus, handleBlur) => (\n            <Field\n              component={RenderTextField}\n              inputProps={{ maxLength: 1000 }}\n              multiline\n              label='Professional skills:'\n              name='lookingForAJobDescription'\n              placeholder='What you can do?'\n              variant='filled'\n              fullWidth\n              onInput={handleInput}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          )}\n          setIsEditInputProfileForm={setIsEditInputProfileForm}\n          maxLength={1000}\n        />\n      </div>\n\n      <div className={s.wrap}>\n        <div className={s.titleAllContacts}>Contacts:</div>\n\n        {errorProfileContacts ? (\n          <div className={s.errorProfileContacts}>{errorProfileContacts}</div>\n        ) : (\n          <></>\n        )}\n\n        {Object.keys(initialValues.contacts).map((key) => (\n          <div className={s.contact} key={key}>\n            <div className={s.titleContact}>{key}:</div>\n\n            <Field\n              component={RenderTextField}\n              onInput={() => setIsEditInputProfileForm(true)}\n              name={`contacts.${key}`}\n              placeholder='https://...'\n              multiline\n              fullWidth\n            />\n          </div>\n        ))}\n      </div>\n    </form>\n  )\n}\n\nconst ProfileDataForm = reduxForm<ProfileType, OwnPropsType>({\n  form: 'editProfile',\n})(Form)\n\nexport default ProfileDataForm\n","import React, { useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { submit } from 'redux-form'\n\nimport Button from '@material-ui/core/Button'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CloseIcon from '@material-ui/icons/Close'\nimport s from './ProfileInfoContainer.module.scss'\nimport camera from '../../../img/icons/camera.svg'\n\nimport Avatar from '../../common/Avatar/Avatar'\nimport Preloader from '../../common/Preloader/Preloader'\nimport ProfilePlug from './ProfilePlug/ProfilePlug'\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\nimport ProfileData from './ProfileData/ProfileData'\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\n\nimport { getTheme } from '../../../redux/selectors/app-selectors'\nimport {\n  getEditModeProfile,\n  getErrorProfileContacts,\n  getProfile,\n  getShowSuccessSave,\n} from '../../../redux/selectors/profile-selectors'\nimport {\n  actions,\n  savePhotoThunk,\n  saveProfileThunk,\n} from '../../../redux/reducers/profile-reducer'\n\nimport { ProfileType } from '../../../types/types'\n\n// при переходе на страницу профиля скрол прокрутится вверх до имени\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    const fullName = document.getElementById('scrollToTopOnMount')\n    fullName?.scrollIntoView(false)\n  }, [])\n  return null\n}\n\ntype PropsType = {\n  isOwner: boolean\n}\n\nconst ProfileInfoContainer: React.FC<PropsType> = ({ isOwner }) => {\n  const stylesSaveAndCancelButton: React.CSSProperties = {\n    fontSize: 12,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n    margin: 10,\n  }\n\n  const stylesEditButton: React.CSSProperties = {\n    fontSize: 12,\n    marginTop: 20,\n  }\n\n  // for InfoDataForm\n  const errorProfileContacts = useSelector(getErrorProfileContacts)\n\n  const theme = useSelector(getTheme)\n  const profile = useSelector(getProfile)\n\n  const showSuccessSave = useSelector(getShowSuccessSave)\n  const isEditModeProfile = useSelector(getEditModeProfile)\n  const dispatch = useDispatch()\n\n  const [isEditInputProfileForm, setIsEditInputProfileForm] = useState(false)\n\n  const onSubmitProfile = (values: ProfileType) => {\n    dispatch(saveProfileThunk(values))\n  }\n\n  const handleChangePhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      dispatch(savePhotoThunk(e.target.files[0]))\n    }\n  }\n\n  const handleEditProfile = () => {\n    dispatch(actions.setEditModeProfile(true))\n  }\n\n  const handleSaveProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(submit('editProfile'))\n  }\n\n  const handleCancelProfile = () => {\n    setIsEditInputProfileForm(false)\n    dispatch(actions.setEditModeProfile(false))\n  }\n\n  if (!profile) {\n    return (\n      <>\n        <Preloader />\n        <ProfilePlug isOwner={isOwner} />\n      </>\n    )\n  }\n\n  return (\n    <div className={s.containerMain}>\n      <div className={s.columnLeft}>\n        <Avatar photo={profile.photos.large} size='extra-large'>\n          {isOwner && !isEditModeProfile && (\n            <div className={s.camera} title='Change avatar'>\n              <label htmlFor='file_out'>\n                <div className={s.wrapImg}>\n                  <img src={camera} alt='icon' />\n                </div>\n                <input\n                  id='file_out'\n                  hidden\n                  type='file'\n                  onChange={handleChangePhoto}\n                />\n              </label>\n            </div>\n          )}\n        </Avatar>\n\n        {isOwner && !isEditModeProfile && (\n          <Button\n            onClick={handleEditProfile}\n            variant='outlined'\n            style={stylesEditButton}\n            startIcon={<EditIcon style={{ fontSize: 16 }} />}\n          >\n            Edit profile\n          </Button>\n        )}\n\n        {isEditModeProfile && (\n          <div className={s.buttonsSaveAndCancelProfile}>\n            <Button\n              onClick={handleSaveProfile}\n              disabled={!isEditInputProfileForm}\n              variant='contained'\n              color={theme === 'theme1' ? 'primary' : 'secondary'}\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n            <Button\n              onClick={handleCancelProfile}\n              variant='outlined'\n              fullWidth\n              style={stylesSaveAndCancelButton}\n              startIcon={<CloseIcon />}\n            >\n              Cancel\n            </Button>\n          </div>\n        )}\n\n        {isEditModeProfile && showSuccessSave && (\n          <ShowSuccessSavePortal>\n            <div className={s.successSave}>{showSuccessSave}</div>\n          </ShowSuccessSavePortal>\n        )}\n      </div>\n\n      <div className={s.columnRight}>\n        {!isEditModeProfile && (\n          <div id='scrollToTopOnMount' className={s.fullName}>\n            {profile.fullName}\n          </div>\n        )}\n\n        {!isEditModeProfile && <ProfileStatus isOwner={isOwner} />}\n\n        {isEditModeProfile ? (\n          <ProfileDataForm\n            initialValues={profile}\n            onSubmit={onSubmitProfile}\n            errorProfileContacts={errorProfileContacts}\n            setIsEditInputProfileForm={setIsEditInputProfileForm}\n          />\n        ) : (\n          <ProfileData profile={profile} />\n        )}\n      </div>\n      {/* при переходе на старницу профиля скрол обнулится */}\n      <ScrollToTopOnMount />\n    </div>\n  )\n}\n\nconst ShowSuccessSavePortal = ({ children }: { children: React.ReactNode }) => {\n  const el: HTMLDivElement = document.createElement('div')\n  document.body.append(el)\n\n  return createPortal(children, el)\n}\n\nexport default ProfileInfoContainer\n","import React from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport ProfileWall from './ProfileWall/ProfileWall'\nimport ProfileInfoContainer from './ProfileInfo/ProfileInfoContainer'\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\n\nimport { getEditModeProfile } from '../../redux/selectors/profile-selectors'\nimport { AppStateType } from '../../redux/redux-store'\nimport {\n  getUserProfile,\n  getStatus,\n  actions,\n} from '../../redux/reducers/profile-reducer'\n\ntype MapStatePropsType = {\n  authorizedUserID: number | null\n  isEditModeProfile: boolean\n}\n\ntype MapDispatchPropsType = {\n  getUserProfile: (userId: number) => void\n  getStatus: (userId: number) => void\n  setEditModeProfile: (bool: boolean) => void\n}\n\ntype PathParamsType = {\n  userId: string\n}\n\ntype PropsType = MapStatePropsType &\n  MapDispatchPropsType &\n  RouteComponentProps<PathParamsType>\n\nclass ProfileContainer extends React.PureComponent<PropsType> {\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: PropsType) {\n    const { match } = this.props\n    // рендер при переходе с одной страницы на другую\n    if (match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  componentWillUnmount() {\n    const { isEditModeProfile, setEditModeProfile } = this.props\n    if (isEditModeProfile) {\n      setEditModeProfile(false)\n    }\n  }\n\n  refreshProfile() {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { match, authorizedUserID, history, getUserProfile, getStatus } =\n      this.props\n    let userId: number | null = +match.params.userId\n\n    if (!userId) {\n      userId = authorizedUserID\n      if (!userId) {\n        history.push('/login')\n      }\n    }\n\n    getUserProfile(userId as number)\n    getStatus(userId as number)\n  }\n\n  render(): React.ReactElement<PropsType> {\n    const { match, authorizedUserID, isEditModeProfile } = this.props\n    const isOwner = +match.params.userId === authorizedUserID\n\n    return (\n      <>\n        <ProfileInfoContainer isOwner={isOwner} />\n        {!isEditModeProfile && isOwner && <ProfileWall />}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    authorizedUserID: state.auth.userID,\n    isEditModeProfile: getEditModeProfile(state),\n  }\n}\n\nexport default compose<React.ComponentType>(\n  connect<\n    MapStatePropsType,\n    MapDispatchPropsType,\n    RouteComponentProps<PathParamsType>,\n    AppStateType\n  >(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    setEditModeProfile: actions.setEditModeProfile,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n","export default __webpack_public_path__ + \"static/media/preloaderStart.ec91d375.svg\";","import React from 'react'\nimport preloaderStart from '../../../img/preloader/preloaderStart.svg'\nimport s from './Preloader.module.scss'\n\nconst PreloaderStart: React.FC = () => {\n  return (\n    <div className={s.container}>\n      <div className={s.wrap}>\n        <img src={preloaderStart} alt='preloader' />\n      </div>\n    </div>\n  )\n}\n\nexport default PreloaderStart\n","export default __webpack_public_path__ + \"static/media/logo.cebb0f3e.svg\";","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport InvertColorsIcon from '@material-ui/icons/InvertColors'\nimport { IconButton } from '@material-ui/core'\nimport s from './Header.module.scss'\nimport logo from '../../img/icons/logo.svg'\n\nimport Avatar from '../common/Avatar/Avatar'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nimport {\n  getAuthorizedUserID,\n  getIsAuth,\n  getLogin,\n  getMyPhoto,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { logoutThunk } from '../../redux/reducers/auth-reducer'\nimport { actions } from '../../redux/reducers/app-reducer'\n\nimport { ThemeType } from '../../types/types'\n\nconst Header: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const login = useSelector(getLogin)\n  const myID = useSelector(getAuthorizedUserID)\n  const myPhoto = useSelector(getMyPhoto)\n  const theme = useSelector(getTheme)\n  const dispatch = useDispatch()\n\n  const [themeLocal, setThemeLocal] = useState(theme as ThemeType)\n\n  useEffect(() => {\n    const colors = {\n      cyan: `var(--color-cyan-${themeLocal})`,\n      cyanLight: `var(--color-cyanLight-${themeLocal})`,\n      cyanMedium: `var(--color-cyanMedium-${themeLocal})`,\n      cyanDark: `var(--color-cyanDark-${themeLocal})`,\n      darkBlue: `var(--color-darkBlue-${themeLocal})`,\n      darkBlueTransparent: `var(--color-darkBlueTransparent-${themeLocal})`,\n    }\n\n    const keys = Object.keys(colors)\n    const values = Object.values(colors)\n\n    for (let i = 0; i < keys.length; i++) {\n      document.body.style.setProperty(`--color-${keys[i]}`, values[i])\n    }\n  }, [theme, themeLocal])\n\n  useLocalStorage('theme', theme, actions.setTheme, setThemeLocal)\n\n  return (\n    <header className={s.header}>\n      <NavLink className={s.logoAndTitle} to='/profile'>\n        <img src={logo} alt='logo' />\n        <span className={s.headerTitleDesktop}>Social network</span>\n        <span hidden className={s.headerTitleMobile}>\n          SN\n        </span>\n      </NavLink>\n\n      <div className={s.rightColumn}>\n        {isAuth ? (\n          <>\n            <div className={s.loginAndPhoto}>\n              <Avatar photo={myPhoto} size='small' id={myID} />\n              <span className={s.loginName}>{login}</span>\n            </div>\n\n            <ButtonChangeTheme\n              theme={theme}\n              themeLocal={themeLocal}\n              setThemeLocal={setThemeLocal}\n            />\n\n            <span className={s.buttonLogoutDesktop}>\n              <Button\n                onClick={() => dispatch(logoutThunk())}\n                variant='outlined'\n                style={{ marginRight: '12px' }}\n                startIcon={<ExitToAppIcon />}\n              >\n                Log out\n              </Button>\n            </span>\n            <span hidden className={s.buttonLogoutMobile}>\n              <IconButton\n                title='Logout of profile'\n                onClick={() => dispatch(logoutThunk())}\n              >\n                <ExitToAppIcon />\n              </IconButton>\n            </span>\n          </>\n        ) : (\n          <ButtonChangeTheme\n            theme={theme}\n            themeLocal={themeLocal}\n            setThemeLocal={setThemeLocal}\n          />\n        )}\n      </div>\n    </header>\n  )\n}\n\ntype PropsType = {\n  theme: ThemeType\n  themeLocal: ThemeType\n  setThemeLocal: Dispatch<SetStateAction<ThemeType>>\n}\n\nconst ButtonChangeTheme: React.FC<PropsType> = (props) => {\n  const { theme, themeLocal, setThemeLocal } = props\n  const dispatch = useDispatch()\n\n  const handleToggleTheme = () => {\n    dispatch(actions.setTheme(themeLocal === 'theme1' ? 'theme2' : 'theme1'))\n    setThemeLocal(themeLocal === 'theme1' ? 'theme2' : 'theme1')\n  }\n\n  return (\n    <>\n      <span className={s.buttonThemeDesktop}>\n        <Button\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          style={{ padding: '6px 12px', marginRight: '12px' }}\n          onClick={handleToggleTheme}\n          startIcon={<InvertColorsIcon />}\n        >\n          Change theme\n        </Button>\n      </span>\n\n      <span hidden className={s.buttonThemeMobile}>\n        <IconButton\n          onClick={handleToggleTheme}\n          aria-label='changeTheme'\n          style={{ margin: '0 12px' }}\n          title='Change theme'\n        >\n          <InvertColorsIcon\n            color={theme === 'theme1' ? 'primary' : 'secondary'}\n          />\n        </IconButton>\n      </span>\n    </>\n  )\n}\nexport default Header\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NavLink, RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport s from './Navbar.module.scss'\nimport { getAuthorizedUserID } from '../../redux/selectors/auth-selectors'\n\ntype PathParamsType = {\n  pathname: string\n  profileUrl?: string\n}\n\nconst Navbar: React.FC<RouteComponentProps<PathParamsType>> = ({\n  location: { pathname },\n}) => {\n  const authorizedUserID = useSelector(getAuthorizedUserID)\n  const profileUrl = `/profile/${authorizedUserID}`\n\n  return (\n    <nav className={s.nav} id='navbar'>\n      <NavLink\n        exact\n        to={profileUrl}\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconProfile pathname={pathname} profileUrl={profileUrl} />\n        Profile\n      </NavLink>\n\n      <NavLink\n        to='/chat'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconChat pathname={pathname} />\n        Chat\n      </NavLink>\n\n      <NavLink\n        to='/users'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconUsers pathname={pathname} />\n        Find Users\n      </NavLink>\n\n      <NavLink\n        to='/friends'\n        activeClassName={s.active}\n        className={s.navLink}\n        replace\n      >\n        <IconFriends pathname={pathname} />\n        Friends\n      </NavLink>\n    </nav>\n  )\n}\n\nconst IconProfile: React.FC<PathParamsType> = ({ pathname, profileUrl }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === profileUrl,\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z' />\n    </svg>\n  )\n}\n\nconst IconChat: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/chat',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M20,2H4A2,2 0 0,0 2,4V22L6,18H20A2,2 0 0,0 22,16V4C22,2.89 21.1,2 20,2Z' />\n    </svg>\n  )\n}\n\nconst IconUsers: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/users',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z' />\n    </svg>\n  )\n}\n\nconst IconFriends: React.FC<PathParamsType> = ({ pathname }) => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      className={cn(s.navLinkImg, {\n        [s.activeIcon]: pathname === '/friends',\n      })}\n    >\n      {/* eslint-disable-next-line max-len */}\n      <path d='M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z' />\n    </svg>\n  )\n}\n\nexport default withRouter(Navbar)\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\n\nimport cn from 'classnames'\nimport Button from '@material-ui/core/Button'\nimport s from './Login.module.scss'\nimport RenderTextField from '../common/RenderFormElement/RenderTextField'\nimport RenderCheckbox from '../common/RenderFormElement/RenderCheckbox'\n\nimport {\n  getAuthorizedUserID,\n  getCaptchaURL,\n  getIsAuth,\n} from '../../redux/selectors/auth-selectors'\nimport { getTheme } from '../../redux/selectors/app-selectors'\nimport { loginThunk } from '../../redux/reducers/auth-reducer'\n\nconst validate = (values: LoginFormValuesType) => {\n  type ErrorsType = {\n    email?: string\n    password?: string\n    captcha?: string\n  }\n\n  const errors: ErrorsType = {}\n\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n\n  return errors\n}\n\ntype OwnPropsType = {\n  captchaURL: string | null\n}\n\ntype LoginFormValuesType = {\n  email: string\n  password: string\n  rememberMe: boolean\n  captcha: string\n}\n\nconst Login: React.FC = () => {\n  const isAuth = useSelector(getIsAuth)\n  const captchaURL = useSelector(getCaptchaURL)\n  const userID = useSelector(getAuthorizedUserID)\n  const dispatch = useDispatch()\n\n  const onSubmit = (values: LoginFormValuesType) => {\n    dispatch(\n      loginThunk(\n        values.email,\n        values.password,\n        values.rememberMe,\n        values.captcha\n      )\n    )\n  }\n\n  if (isAuth) {\n    return <Redirect to={`/profile/${userID}`} />\n  }\n\n  return (\n    <div className={s.wrap}>\n      <div className={s.body}>\n        <h1>Log in</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL} />\n      </div>\n    </div>\n  )\n}\n\nconst LoginForm: React.FC<\n  InjectedFormProps<LoginFormValuesType, OwnPropsType> & OwnPropsType\n> = ({ handleSubmit, error, captchaURL }) => {\n  const stylesLoginButton = {\n    fontSize: 16,\n    fontWeight: 700,\n    color: 'white',\n    textShadow: '2px 2px 7px var(--color-darkBlueTransparent)',\n  }\n\n  const stylesTestLoginButton = {\n    marginBottom: '15px',\n    ...stylesLoginButton,\n  }\n\n  const dispatch = useDispatch()\n  const theme = useSelector(getTheme)\n\n  const handleEnterTestAccount = () => {\n    const email = 'free@samuraijs.com'\n    const password = 'free'\n\n    dispatch(loginThunk(email, password, false, null))\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className={s.loginBlockSubstrate}>\n          <div className={s.loginBlock}>\n            <div className={s.row}>\n              <Field\n                component={RenderTextField}\n                name='email'\n                label='Email:'\n                type='email'\n                fullWidth\n              />\n            </div>\n            <div className={s.row}>\n              <Field\n                component={RenderTextField}\n                name='password'\n                label='Password:'\n                type='password'\n                fullWidth\n              />\n            </div>\n            <div className={cn(s.row, s.rowCheckbox)}>\n              <Field\n                component={RenderCheckbox}\n                name='rememberMe'\n                label='Remember me'\n              />\n            </div>\n\n            {captchaURL && <img src={captchaURL} alt='captcha' />}\n            {captchaURL && (\n              <Field component={RenderTextField} fullWidth name='captcha' />\n            )}\n\n            <div className={s.row}>\n              <Button\n                type='submit'\n                variant='contained'\n                color={theme === 'theme1' ? 'primary' : 'secondary'}\n                fullWidth\n                style={stylesLoginButton}\n              >\n                Log in\n              </Button>\n\n              {error && (\n                <div className={s.formError}>\n                  {error === 'You are not authorized' ? (\n                    <>\n                      <div>1. You are either not authorized</div>\n                      <div>or</div>\n                      <div>\n                        2. Please, unblock third party cookies or show all\n                        cookies (see browser settings)\n                      </div>\n                    </>\n                  ) : (\n                    error\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <p>or</p>\n        <Button\n          onClick={handleEnterTestAccount}\n          variant='contained'\n          color={theme === 'theme1' ? 'primary' : 'secondary'}\n          fullWidth\n          style={stylesTestLoginButton}\n        >\n          Login to test account\n        </Button>\n      </form>\n    </>\n  )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, OwnPropsType>({\n  form: 'loginForm',\n  validate,\n})(LoginForm)\n\nexport default Login\n","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error })\n  }\n\n  render() {\n    const { error } = this.state\n    const { children } = this.props\n\n    if (error) {\n      return (\n        <div>\n          <h2>Something went wrong</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error?.toString()}\n          </details>\n        </div>\n      )\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { Suspense } from 'react'\nimport Preloader from '../components/common/Preloader/Preloader'\n\nfunction withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\n  return (props: WCP) => (\n    <Suspense fallback={<Preloader />}>\n      <WrappedComponent {...props} />\n    </Suspense>\n  )\n}\nexport default withSuspense\n","import React from 'react'\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport PreloaderStart from './components/common/Preloader/PreloaderStart'\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Login from './components/Login/Login'\nimport ErrorBoundary from './components/Error/ErrorBoundary'\nimport withSuspense from './hoc/withSuspense'\n\nimport s from './App.module.scss'\n\nimport { getInitialized } from './redux/selectors/app-selectors'\nimport { getAuthorizedUserID } from './redux/selectors/auth-selectors'\nimport { initializeAppThunk } from './redux/reducers/app-reducer'\n\nconst ChatContainer = React.lazy(() => import('./components/Chat/Chat'))\nconst UsersContainer = React.lazy(\n  () => import('./components/Users/UsersContainer')\n)\nconst FriendsContainer = React.lazy(\n  () => import('./components/Friends/FriendsContainer')\n)\n\nconst SuspendedChat = withSuspense(ChatContainer)\nconst SuspendedUsers = withSuspense(UsersContainer)\nconst SuspendedFriends = withSuspense(FriendsContainer)\n\nconst App: React.FC = () => {\n  const userID = useSelector(getAuthorizedUserID)\n  const initialized = useSelector(getInitialized)\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    dispatch(initializeAppThunk())\n  }, [dispatch])\n\n  if (!initialized) {\n    return <PreloaderStart />\n  }\n\n  return (\n    <div className={s.fon}>\n      <div className={s.container}>\n        <div className={s.appWrapper}>\n          <Header />\n          <Navbar />\n\n          <div className={s.appWrapperContent}>\n            <ErrorBoundary>\n              <Switch>\n                <Redirect from='/profile/undefined' to='/' />\n\n                <Route\n                  path='/profile/:userId'\n                  render={() => <ProfileContainer />}\n                />\n\n                <Route path='/chat' render={() => <SuspendedChat />} />\n\n                <Route path='/friends' render={() => <SuspendedFriends />} />\n\n                <Route path='/users' render={() => <SuspendedUsers />} />\n\n                <Route path='/login' render={() => <Login />} />\n\n                <Redirect exact from='/' to={`/profile/${userID}`} />\n\n                <Redirect from='*' to='/' />\n              </Switch>\n            </ErrorBoundary>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AppContainer = withRouter(App)\nexport default AppContainer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './styles/theme.css'\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport store from './redux/redux-store'\nimport AppContainer from './App'\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    // цвет главных кнопок, активных ссылок в навигации,\n    // декоративных линий, рамок у форм\n    primary: {\n      main: '#00bcd4',\n      // 1-ая тема, синий цвет\n    },\n    secondary: {\n      main: '#00d482',\n      // 2-ая тема, зелёный цвет\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline />\n        <AppContainer />\n      </Provider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMainPlug\":\"ProfilePlug_containerMainPlug__3Zu8a\",\"columnLeftPlug\":\"ProfilePlug_columnLeftPlug__1kXuj\",\"columnRightPlug\":\"ProfilePlug_columnRightPlug__3RU4v\",\"avatarPlug\":\"ProfilePlug_avatarPlug__14sew\",\"buttonPlug\":\"ProfilePlug_buttonPlug__1IsjM\",\"namePlug\":\"ProfilePlug_namePlug__3wvE4\",\"statusPlug\":\"ProfilePlug_statusPlug__2Tuw_\",\"titleOnePlug\":\"ProfilePlug_titleOnePlug__1uJXl\",\"titleTwoPlug\":\"ProfilePlug_titleTwoPlug__26pdZ\",\"textPlug\":\"ProfilePlug_textPlug__1uTdo\",\"nameWrapPlug\":\"ProfilePlug_nameWrapPlug__WFOBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileWall_container__1kdW4\",\"wrapButtons\":\"ProfileWall_wrapButtons__269kg\",\"buttons\":\"ProfileWall_buttons__3TUJ5\",\"buttonDesktop\":\"ProfileWall_buttonDesktop__2zKxy\",\"buttonMobile\":\"ProfileWall_buttonMobile__rDCdY\",\"form\":\"ProfileWall_form__17rYB\",\"posts\":\"ProfileWall_posts__3KwJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__24NFR\",\"titleForm\":\"ProfileDataForm_titleForm__3NgXn\",\"wrap\":\"ProfileDataForm_wrap__2cg2s\",\"contact\":\"ProfileDataForm_contact__3xnPU\",\"titleAllContacts\":\"ProfileDataForm_titleAllContacts__1pG4g\",\"titleContact\":\"ProfileDataForm_titleContact__9Q8x2\",\"errorProfileContacts\":\"ProfileDataForm_errorProfileContacts__1btuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kFdy\",\"logoAndTitle\":\"Header_logoAndTitle__E1gOe\",\"headerTitleDesktop\":\"Header_headerTitleDesktop__3of0u\",\"headerTitleMobile\":\"Header_headerTitleMobile__3ZA7x\",\"rightColumn\":\"Header_rightColumn__2gu4E\",\"loginAndPhoto\":\"Header_loginAndPhoto__1azBA\",\"loginName\":\"Header_loginName__ncEXR\",\"buttonThemeDesktop\":\"Header_buttonThemeDesktop__1I4yL\",\"buttonThemeMobile\":\"Header_buttonThemeMobile__1i4f9\",\"buttonLogoutDesktop\":\"Header_buttonLogoutDesktop__1gRK-\",\"buttonLogoutMobile\":\"Header_buttonLogoutMobile__1W2MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__1LWwk\",\"body\":\"Login_body__3DOsP\",\"loginBlockSubstrate\":\"Login_loginBlockSubstrate__3-IH5\",\"loginBlock\":\"Login_loginBlock__3-8mF\",\"row\":\"Login_row__18i6W\",\"rowCheckbox\":\"Login_rowCheckbox__16VyH\",\"formError\":\"Login_formError__2wlzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"FieldWithCounter_count__Cu5UD\",\"countHidden\":\"FieldWithCounter_countHidden__3sFUY\",\"countYellow\":\"FieldWithCounter_countYellow__1fcWm\",\"countRed\":\"FieldWithCounter_countRed__3W_7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"camera\":\"ProfileInfoContainer_camera__OZkpC\",\"wrapImg\":\"ProfileInfoContainer_wrapImg__ZDFuM\",\"containerMain\":\"ProfileInfoContainer_containerMain__3r1l3\",\"columnLeft\":\"ProfileInfoContainer_columnLeft__9aSjt\",\"columnRight\":\"ProfileInfoContainer_columnRight__1Q7wM\",\"iconButtonEditProfile\":\"ProfileInfoContainer_iconButtonEditProfile__34g6O\",\"fullName\":\"ProfileInfoContainer_fullName__2YZse\",\"buttonsSaveAndCancelProfile\":\"ProfileInfoContainer_buttonsSaveAndCancelProfile__DIbSX\",\"successSave\":\"ProfileInfoContainer_successSave__GV6TG\",\"anim\":\"ProfileInfoContainer_anim__25xiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileStatus_container__1RUzu\",\"wrap\":\"ProfileStatus_wrap__PSxii\",\"buttonAndCounter\":\"ProfileStatus_buttonAndCounter__2uC-t\",\"buttonWrap\":\"ProfileStatus_buttonWrap__3HwQn\",\"plug\":\"ProfileStatus_plug__2_kyo\",\"status\":\"ProfileStatus_status__2xM1y\",\"statusNotMy\":\"ProfileStatus_statusNotMy__1Qrk6\",\"noStatus\":\"ProfileStatus_noStatus__3Ja75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_default\":\"Preloader_container_default__YqKY9\",\"container_block\":\"Preloader_container_block__20vZD\",\"wrap\":\"Preloader_wrap__1YoGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarWrap\":\"Avatar_avatarWrap__1kMu_\",\"avatar\":\"Avatar_avatar__3_fhn\",\"small\":\"Avatar_small__3YJmQ\",\"medium\":\"Avatar_medium__3JNHX\",\"large\":\"Avatar_large__2CWNX\",\"extra_large\":\"Avatar_extra_large__ElsR6\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport cn from 'classnames'\nimport unknown from '../../../img/no_photo.svg'\nimport s from './Avatar.module.scss'\n\ntype SizeType = 'small' | 'medium' | 'large' | 'extra-large'\n\ntype PropsType = {\n  photo: string | null | undefined\n  size?: SizeType\n}\n\ntype OwnPropsType = {\n  id?: number | null\n}\n\nconst Avatar: React.FC<PropsType & OwnPropsType> = ({\n  photo,\n  size = 'medium',\n  id,\n  children,\n}) => {\n  // Проверка тестового аккаунта с id = 1079:\n  // установленное фото на тестовый аккаунт удаляется через короткое время\n  // на сервере и, если с этого аккаунта написано сообщение в чат, то\n  // при отрисовке этого сообщения (с удалённым фото) в ответ приходит\n  // ошибка вместо null | undefined, вскоре сервер опять присылает null\n  // вместо фото, но это происходит не сразу. Для этого случая эта проверка\n  let photoTrue\n  if (photo?.includes('1079')) {\n    photoTrue = null\n  } else {\n    photoTrue = photo\n  }\n\n  return (\n    <>\n      {id ? (\n        <NavLink to={`/profile/${id}`} replace>\n          <AvatarBody photo={photoTrue} size={size}>\n            {children}\n          </AvatarBody>\n        </NavLink>\n      ) : (\n        <AvatarBody photo={photoTrue} size={size}>\n          {children}\n        </AvatarBody>\n      )}\n    </>\n  )\n}\n\nconst AvatarBody: React.FC<PropsType> = ({\n  photo,\n  size = 'medium',\n  children,\n}) => {\n  return (\n    <div className={s.avatarWrap}>\n      <div\n        className={cn(\n          s.avatar,\n          { [s.extra_large]: size === 'extra-large' },\n          { [s.large]: size === 'large' },\n          { [s.medium]: size === 'medium' },\n          { [s.small]: size === 'small' }\n        )}\n      >\n        <img src={photo || unknown} alt='avatar' />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Avatar\n"],"sourceRoot":""}