{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","active","to","name","Message","message","text","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Dialogs","dialogsElements","messagesPage","dialogs","map","d","messagesElements","messages","m","items","title","values","sendMessage","newMessageBody","compose","connect","state","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,QAAU,yBAAyB,QAAU,2B,8GCUnJC,EAPI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,cAAC,IAAD,CAASC,UAAWC,IAAEC,OAAQC,GAAIL,EAAlC,SAAyCD,EAAMO,QCApCC,EAJC,SAACR,GACf,OAAO,mBAAGG,UAAWC,IAAEK,QAAhB,SAA0BT,EAAMU,Q,kBCmDnCC,EAAmBC,YAAU,CACjCC,KAAM,wBADiBD,EAjBD,SAACZ,GAEvB,OACE,uBAAMc,SAAUd,EAAMe,aAAtB,UAEE,cAACC,EAAA,EAAD,CACET,KAAK,iBAELU,YAAY,wFACZC,UAAU,aAEZ,gDAWSC,EAnDC,SAACnB,GAEf,IAAIoB,EAAkBpB,EAAMqB,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OACpD,cAAC,EAAD,CAAuBjB,KAAMiB,EAAEjB,KAAML,GAAIsB,EAAEtB,IAA1BsB,EAAEtB,OACjBuB,EAAmBzB,EAAMqB,aAAaK,SAASH,KAAI,SAAAI,GAAC,OACtD,cAAC,EAAD,CAAoBjB,KAAMiB,EAAElB,SAAdkB,EAAEzB,OAOlB,OACE,sBAAKC,UAAWC,IAAEsB,SAAlB,UACE,sBAAKvB,UAAWC,IAAEwB,MAAlB,UACE,sBAAMzB,UAAWC,IAAEyB,MAAnB,qBACCT,KAEH,sBAAKjB,UAAWC,IAAEkB,QAAlB,UACGG,EACD,cAACd,EAAD,CAAkBG,SAbF,SAACgB,GAErB9B,EAAM+B,YAAYD,EAAOE,0B,QCCdC,sBACbC,aAboB,SAACC,GACrB,MAAO,CACLd,aAAcc,EAAMd,gBAWG,CACvBU,kBAEFK,IAJaH,CAKbd","file":"static/js/3.35157585.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Dialogs_messages__1nJuk\",\"items\":\"Dialogs_items__ynFSW\",\"title\":\"Dialogs_title__16_vM\",\"dialogs\":\"Dialogs_dialogs__1YIzW\",\"message\":\"Dialogs_message__D3bS7\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <NavLink className={s.active} to={path}>{props.name}</NavLink>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <p className={s.message}>{props.text}</p>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form';\r\n// import { Element } from '../common/FormsControls/FormsControls';\r\n// import { maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.messagesPage.dialogs.map(d =>\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n  let messagesElements = props.messagesPage.messages.map(m =>\r\n    <Message key={m.id} text={m.message} />);\r\n\r\n  const addNewMessage = (values) => {\r\n    // newMessageBody - name у Field\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div className={s.messages}>\r\n      <div className={s.items}>\r\n        <span className={s.title}>DIALOGS</span>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.dialogs}>\r\n        {messagesElements}\r\n        <DialogsReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// const maxLength30 = maxLengthCreator(30);\r\n// const Textarea = Element('textarea');\r\n\r\nconst SendMessageForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {/* handleSubmit - метод из reduxForm, который собирает данные, вызывает preventDefault() и т.д. */}\r\n      <Field\r\n        name='newMessageBody'\r\n        // validate={[maxLength30]}\r\n        placeholder='Введи сообщение'\r\n        component='textarea'\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: 'dialogAddMessageForm' // form никак не связан с form в redux-store\r\n})(SendMessageForm);\r\n\r\n\r\nexport default Dialogs;","// import React from 'react';\r\nimport { sendMessage } from '../../redux/messages-reducer';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  }\r\n};\r\n\r\n// создание контейнерной компоненты с помощью библиотеки react-redux\r\n// всего лишь обернув withAuthRedirect -ом презентационную компоненту мы создаём редирект\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(Dialogs));\r\n// или так\r\n// export default withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Dialogs));\r\n// или так\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}