{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","active","name","Message","message","text","maxLength30","maxLengthCreator","Textarea","Element","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","placeholder","component","Dialogs","dialogsElements","messagesPage","dialogs","map","d","messagesElements","messages","m","key","items","title","values","sendMessage","newMessageBody","compose"],"mappings":"yLAKIA,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAeRE,IAXU,SAACC,GAAe,IACjCC,EADgC,4JAEpC,WACE,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHX,GACNC,IAAML,WAOtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBClB7CM,EAAOC,QAAU,CAAC,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,QAAU,yBAAyB,QAAU,2B,8GCUnJC,EAPI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,cAAC,IAAD,CAASC,UAAWC,IAAEC,OAAQV,GAAIM,EAAlC,SAAyCP,EAAMY,QCApCC,EAJC,SAACb,GACf,OAAO,mBAAGS,UAAWC,IAAEI,QAAhB,SAA0Bd,EAAMe,Q,kCC+BnCC,EAAcC,YAAiB,IAC/BC,EAAWC,YAAQ,YAmBnBC,EAAmBC,YAAU,CACjCC,KAAM,wBADiBD,EAjBD,SAACrB,GAEvB,OACE,uBAAMuB,SAAUvB,EAAMwB,aAAtB,UAEE,cAACC,EAAA,EAAD,CACEb,KAAK,iBACLc,SAAU,CAACV,GACXW,YAAY,wFACZC,UAAWV,IAEb,gDAWSW,EAnDC,SAAC7B,GAEf,IAAI8B,EAAkB9B,EAAM+B,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OACpD,cAAC,EAAD,CAAuBtB,KAAMsB,EAAEtB,KAAMJ,GAAI0B,EAAE1B,IAA1B0B,EAAE1B,OACjB2B,EAAmBnC,EAAM+B,aAAaK,SAASH,KAAI,SAAAI,GAAC,OACtD,cAAC,EAAD,CAAqBtB,KAAMsB,EAAEvB,SAAfuB,EAAEC,QAOlB,OACE,sBAAK7B,UAAWC,IAAE0B,SAAlB,UACE,sBAAK3B,UAAWC,IAAE6B,MAAlB,UACE,sBAAM9B,UAAWC,IAAE8B,MAAnB,qBACCV,KAEH,sBAAKrB,UAAWC,IAAEsB,QAAlB,UACGG,EACD,cAACf,EAAD,CAAkBG,SAbF,SAACkB,GAErBzC,EAAM0C,YAAYD,EAAOE,0B,QCCdC,sBACbzC,aAboB,SAACV,GACrB,MAAO,CACLsC,aAActC,EAAMsC,gBAWG,CACvBW,kBAEF9C,IAJagD,CAKbf","file":"static/js/4.1cbe1c80.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  \r\n  return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Dialogs_messages__1nJuk\",\"items\":\"Dialogs_items__ynFSW\",\"title\":\"Dialogs_title__16_vM\",\"dialogs\":\"Dialogs_dialogs__1YIzW\",\"message\":\"Dialogs_message__D3bS7\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <NavLink className={s.active} to={path}>{props.name}</NavLink>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <p className={s.message}>{props.text}</p>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Element } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.messagesPage.dialogs.map(d =>\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n  let messagesElements = props.messagesPage.messages.map(m =>\r\n    <Message key={m.key} text={m.message} />);\r\n\r\n  const addNewMessage = (values) => {\r\n    // newMessageBody - name у Field\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div className={s.messages}>\r\n      <div className={s.items}>\r\n        <span className={s.title}>DIALOGS</span>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.dialogs}>\r\n        {messagesElements}\r\n        <DialogsReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst Textarea = Element('textarea');\r\n\r\nconst SendMessageForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {/* handleSubmit - метод из reduxForm, который собирает данные, вызывает preventDefault() и т.д. */}\r\n      <Field\r\n        name='newMessageBody'\r\n        validate={[maxLength30]}\r\n        placeholder='Введи сообщение'\r\n        component={Textarea}\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: 'dialogAddMessageForm' // form никак не связан с form в redux-store\r\n})(SendMessageForm);\r\n\r\n\r\nexport default Dialogs;","// import React from 'react';\r\nimport { sendMessage } from '../../redux/messages-reducer';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  }\r\n};\r\n\r\n// создание контейнерной компоненты с помощью библиотеки react-redux\r\n// всего лишь обернув withAuthRedirect -ом презентационную компоненту мы создаём редирект\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(Dialogs));\r\n// или так\r\n// export default withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Dialogs));\r\n// или так\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}